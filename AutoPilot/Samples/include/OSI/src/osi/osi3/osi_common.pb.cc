// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_common.proto

#include "osi_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class Vector3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3d>
      _instance;
} _Vector3d_default_instance_;
class Vector2dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector2d>
      _instance;
} _Vector2d_default_instance_;
class TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timestamp>
      _instance;
} _Timestamp_default_instance_;
class Dimension3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dimension3d>
      _instance;
} _Dimension3d_default_instance_;
class Orientation3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Orientation3d>
      _instance;
} _Orientation3d_default_instance_;
class IdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier>
      _instance;
} _Identifier_default_instance_;
class MountingPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MountingPosition>
      _instance;
} _MountingPosition_default_instance_;
class Spherical3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Spherical3d>
      _instance;
} _Spherical3d_default_instance_;
class BaseStationaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BaseStationary>
      _instance;
} _BaseStationary_default_instance_;
class BaseMovingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BaseMoving>
      _instance;
} _BaseMoving_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fcommon_2eproto {
void InitDefaultsVector3dImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Vector3d_default_instance_;
    new (ptr) ::osi3::Vector3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Vector3d::InitAsDefaultInstance();
}

void InitDefaultsVector3d() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector3dImpl);
}

void InitDefaultsVector2dImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Vector2d_default_instance_;
    new (ptr) ::osi3::Vector2d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Vector2d::InitAsDefaultInstance();
}

void InitDefaultsVector2d() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector2dImpl);
}

void InitDefaultsTimestampImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Timestamp_default_instance_;
    new (ptr) ::osi3::Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Timestamp::InitAsDefaultInstance();
}

void InitDefaultsTimestamp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimestampImpl);
}

void InitDefaultsDimension3dImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Dimension3d_default_instance_;
    new (ptr) ::osi3::Dimension3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Dimension3d::InitAsDefaultInstance();
}

void InitDefaultsDimension3d() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDimension3dImpl);
}

void InitDefaultsOrientation3dImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Orientation3d_default_instance_;
    new (ptr) ::osi3::Orientation3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Orientation3d::InitAsDefaultInstance();
}

void InitDefaultsOrientation3d() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrientation3dImpl);
}

void InitDefaultsIdentifierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Identifier_default_instance_;
    new (ptr) ::osi3::Identifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Identifier::InitAsDefaultInstance();
}

void InitDefaultsIdentifier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIdentifierImpl);
}

void InitDefaultsMountingPositionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsOrientation3d();
  {
    void* ptr = &::osi3::_MountingPosition_default_instance_;
    new (ptr) ::osi3::MountingPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::MountingPosition::InitAsDefaultInstance();
}

void InitDefaultsMountingPosition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMountingPositionImpl);
}

void InitDefaultsSpherical3dImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Spherical3d_default_instance_;
    new (ptr) ::osi3::Spherical3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Spherical3d::InitAsDefaultInstance();
}

void InitDefaultsSpherical3d() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpherical3dImpl);
}

void InitDefaultsBaseStationaryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsDimension3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsOrientation3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector2d();
  {
    void* ptr = &::osi3::_BaseStationary_default_instance_;
    new (ptr) ::osi3::BaseStationary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::BaseStationary::InitAsDefaultInstance();
}

void InitDefaultsBaseStationary() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBaseStationaryImpl);
}

void InitDefaultsBaseMovingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsDimension3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsOrientation3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector2d();
  {
    void* ptr = &::osi3::_BaseMoving_default_instance_;
    new (ptr) ::osi3::BaseMoving();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::BaseMoving::InitAsDefaultInstance();
}

void InitDefaultsBaseMoving() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBaseMovingImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector3d, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector3d, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector3d, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector2d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector2d, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Vector2d, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Timestamp, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Timestamp, nanos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Dimension3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Dimension3d, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Dimension3d, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Dimension3d, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Orientation3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Orientation3d, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Orientation3d, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Orientation3d, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Identifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Identifier, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::MountingPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::MountingPosition, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::MountingPosition, orientation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Spherical3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Spherical3d, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Spherical3d, azimuth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Spherical3d, elevation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseStationary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseStationary, dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseStationary, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseStationary, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseStationary, base_polygon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, dimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, orientation_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, orientation_acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::BaseMoving, base_polygon_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::Vector3d)},
  { 8, -1, sizeof(::osi3::Vector2d)},
  { 15, -1, sizeof(::osi3::Timestamp)},
  { 22, -1, sizeof(::osi3::Dimension3d)},
  { 30, -1, sizeof(::osi3::Orientation3d)},
  { 38, -1, sizeof(::osi3::Identifier)},
  { 44, -1, sizeof(::osi3::MountingPosition)},
  { 51, -1, sizeof(::osi3::Spherical3d)},
  { 59, -1, sizeof(::osi3::BaseStationary)},
  { 68, -1, sizeof(::osi3::BaseMoving)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Vector3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Vector2d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Dimension3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Orientation3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Identifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_MountingPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Spherical3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_BaseStationary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_BaseMoving_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020osi_common.proto\022\004osi3\"+\n\010Vector3d\022\t\n\001"
      "x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\" \n\010Vector2"
      "d\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\"+\n\tTimestamp\022\017\n\007"
      "seconds\030\001 \001(\003\022\r\n\005nanos\030\002 \001(\r\"<\n\013Dimensio"
      "n3d\022\016\n\006length\030\001 \001(\001\022\r\n\005width\030\002 \001(\001\022\016\n\006he"
      "ight\030\003 \001(\001\"9\n\rOrientation3d\022\014\n\004roll\030\001 \001("
      "\001\022\r\n\005pitch\030\002 \001(\001\022\013\n\003yaw\030\003 \001(\001\"\033\n\nIdentif"
      "ier\022\r\n\005value\030\001 \001(\004\"^\n\020MountingPosition\022 "
      "\n\010position\030\001 \001(\0132\016.osi3.Vector3d\022(\n\013orie"
      "ntation\030\002 \001(\0132\023.osi3.Orientation3d\"C\n\013Sp"
      "herical3d\022\020\n\010distance\030\001 \001(\001\022\017\n\007azimuth\030\002"
      " \001(\001\022\021\n\televation\030\003 \001(\001\"\250\001\n\016BaseStationa"
      "ry\022$\n\tdimension\030\001 \001(\0132\021.osi3.Dimension3d"
      "\022 \n\010position\030\002 \001(\0132\016.osi3.Vector3d\022(\n\013or"
      "ientation\030\003 \001(\0132\023.osi3.Orientation3d\022$\n\014"
      "base_polygon\030\004 \003(\0132\016.osi3.Vector2d\"\322\002\n\nB"
      "aseMoving\022$\n\tdimension\030\001 \001(\0132\021.osi3.Dime"
      "nsion3d\022 \n\010position\030\002 \001(\0132\016.osi3.Vector3"
      "d\022(\n\013orientation\030\003 \001(\0132\023.osi3.Orientatio"
      "n3d\022 \n\010velocity\030\004 \001(\0132\016.osi3.Vector3d\022$\n"
      "\014acceleration\030\005 \001(\0132\016.osi3.Vector3d\022-\n\020o"
      "rientation_rate\030\006 \001(\0132\023.osi3.Orientation"
      "3d\0225\n\030orientation_acceleration\030\010 \001(\0132\023.o"
      "si3.Orientation3d\022$\n\014base_polygon\030\007 \003(\0132"
      "\016.osi3.Vector2dB\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 987);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fcommon_2eproto
namespace osi3 {

// ===================================================================

void Vector3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3d::kXFieldNumber;
const int Vector3d::kYFieldNumber;
const int Vector3d::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3d::Vector3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Vector3d)
}
Vector3d::Vector3d(const Vector3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:osi3.Vector3d)
}

void Vector3d::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Vector3d::~Vector3d() {
  // @@protoc_insertion_point(destructor:osi3.Vector3d)
  SharedDtor();
}

void Vector3d::SharedDtor() {
}

void Vector3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3d::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3d& Vector3d::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  return *internal_default_instance();
}

Vector3d* Vector3d::New(::google::protobuf::Arena* arena) const {
  Vector3d* n = new Vector3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector3d::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Vector3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Vector3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Vector3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Vector3d)
  return false;
#undef DO_
}

void Vector3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Vector3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Vector3d)
}

::google::protobuf::uint8* Vector3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Vector3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Vector3d)
  return target;
}

size_t Vector3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Vector3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Vector3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Vector3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Vector3d)
    MergeFrom(*source);
  }
}

void Vector3d::MergeFrom(const Vector3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Vector3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Vector3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3d::CopyFrom(const Vector3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Vector3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3d::IsInitialized() const {
  return true;
}

void Vector3d::Swap(Vector3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3d::InternalSwap(Vector3d* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector3d::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector2d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector2d::kXFieldNumber;
const int Vector2d::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector2d::Vector2d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsVector2d();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Vector2d)
}
Vector2d::Vector2d(const Vector2d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:osi3.Vector2d)
}

void Vector2d::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

Vector2d::~Vector2d() {
  // @@protoc_insertion_point(destructor:osi3.Vector2d)
  SharedDtor();
}

void Vector2d::SharedDtor() {
}

void Vector2d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector2d::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector2d& Vector2d::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsVector2d();
  return *internal_default_instance();
}

Vector2d* Vector2d::New(::google::protobuf::Arena* arena) const {
  Vector2d* n = new Vector2d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector2d::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Vector2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Vector2d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Vector2d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Vector2d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Vector2d)
  return false;
#undef DO_
}

void Vector2d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Vector2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Vector2d)
}

::google::protobuf::uint8* Vector2d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Vector2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Vector2d)
  return target;
}

size_t Vector2d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Vector2d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector2d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Vector2d)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector2d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector2d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Vector2d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Vector2d)
    MergeFrom(*source);
  }
}

void Vector2d::MergeFrom(const Vector2d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Vector2d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Vector2d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Vector2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector2d::CopyFrom(const Vector2d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Vector2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector2d::IsInitialized() const {
  return true;
}

void Vector2d::Swap(Vector2d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector2d::InternalSwap(Vector2d* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector2d::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Timestamp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kSecondsFieldNumber;
const int Timestamp::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsTimestamp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Timestamp)
}
Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:osi3.Timestamp)
}

void Timestamp::SharedCtor() {
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  _cached_size_ = 0;
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:osi3.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
}

void Timestamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Timestamp::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timestamp& Timestamp::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsTimestamp();
  return *internal_default_instance();
}

Timestamp* Timestamp::New(::google::protobuf::Arena* arena) const {
  Timestamp* n = new Timestamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  _internal_metadata_.Clear();
}

bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Timestamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Timestamp)
  return false;
#undef DO_
}

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // uint32 nanos = 2;
  if (this->nanos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nanos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Timestamp)
}

::google::protobuf::uint8* Timestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seconds(), target);
  }

  // uint32 nanos = 2;
  if (this->nanos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nanos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Timestamp)
  return target;
}

size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Timestamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 seconds = 1;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());
  }

  // uint32 nanos = 2;
  if (this->nanos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nanos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Timestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Timestamp)
    MergeFrom(*source);
  }
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.nanos() != 0) {
    set_nanos(from.nanos());
  }
}

void Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {
  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  using std::swap;
  swap(seconds_, other->seconds_);
  swap(nanos_, other->nanos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dimension3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dimension3d::kLengthFieldNumber;
const int Dimension3d::kWidthFieldNumber;
const int Dimension3d::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dimension3d::Dimension3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsDimension3d();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Dimension3d)
}
Dimension3d::Dimension3d(const Dimension3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&length_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:osi3.Dimension3d)
}

void Dimension3d::SharedCtor() {
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&length_)) + sizeof(height_));
  _cached_size_ = 0;
}

Dimension3d::~Dimension3d() {
  // @@protoc_insertion_point(destructor:osi3.Dimension3d)
  SharedDtor();
}

void Dimension3d::SharedDtor() {
}

void Dimension3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dimension3d::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dimension3d& Dimension3d::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsDimension3d();
  return *internal_default_instance();
}

Dimension3d* Dimension3d::New(::google::protobuf::Arena* arena) const {
  Dimension3d* n = new Dimension3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dimension3d::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Dimension3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&length_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool Dimension3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Dimension3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Dimension3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Dimension3d)
  return false;
#undef DO_
}

void Dimension3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Dimension3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->length(), output);
  }

  // double width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->width(), output);
  }

  // double height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Dimension3d)
}

::google::protobuf::uint8* Dimension3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Dimension3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->length(), target);
  }

  // double width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->width(), target);
  }

  // double height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Dimension3d)
  return target;
}

size_t Dimension3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Dimension3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double length = 1;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // double width = 2;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double height = 3;
  if (this->height() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dimension3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Dimension3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Dimension3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dimension3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Dimension3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Dimension3d)
    MergeFrom(*source);
  }
}

void Dimension3d::MergeFrom(const Dimension3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Dimension3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Dimension3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Dimension3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dimension3d::CopyFrom(const Dimension3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Dimension3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dimension3d::IsInitialized() const {
  return true;
}

void Dimension3d::Swap(Dimension3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dimension3d::InternalSwap(Dimension3d* other) {
  using std::swap;
  swap(length_, other->length_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dimension3d::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Orientation3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Orientation3d::kRollFieldNumber;
const int Orientation3d::kPitchFieldNumber;
const int Orientation3d::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Orientation3d::Orientation3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsOrientation3d();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Orientation3d)
}
Orientation3d::Orientation3d(const Orientation3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roll_, &from.roll_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:osi3.Orientation3d)
}

void Orientation3d::SharedCtor() {
  ::memset(&roll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
  _cached_size_ = 0;
}

Orientation3d::~Orientation3d() {
  // @@protoc_insertion_point(destructor:osi3.Orientation3d)
  SharedDtor();
}

void Orientation3d::SharedDtor() {
}

void Orientation3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Orientation3d::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Orientation3d& Orientation3d::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsOrientation3d();
  return *internal_default_instance();
}

Orientation3d* Orientation3d::New(::google::protobuf::Arena* arena) const {
  Orientation3d* n = new Orientation3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Orientation3d::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Orientation3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
  _internal_metadata_.Clear();
}

bool Orientation3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Orientation3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double roll = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Orientation3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Orientation3d)
  return false;
#undef DO_
}

void Orientation3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Orientation3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double roll = 1;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->roll(), output);
  }

  // double pitch = 2;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->pitch(), output);
  }

  // double yaw = 3;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Orientation3d)
}

::google::protobuf::uint8* Orientation3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Orientation3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double roll = 1;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->roll(), target);
  }

  // double pitch = 2;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->pitch(), target);
  }

  // double yaw = 3;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Orientation3d)
  return target;
}

size_t Orientation3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Orientation3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double roll = 1;
  if (this->roll() != 0) {
    total_size += 1 + 8;
  }

  // double pitch = 2;
  if (this->pitch() != 0) {
    total_size += 1 + 8;
  }

  // double yaw = 3;
  if (this->yaw() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Orientation3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Orientation3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Orientation3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Orientation3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Orientation3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Orientation3d)
    MergeFrom(*source);
  }
}

void Orientation3d::MergeFrom(const Orientation3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Orientation3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
}

void Orientation3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Orientation3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Orientation3d::CopyFrom(const Orientation3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Orientation3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Orientation3d::IsInitialized() const {
  return true;
}

void Orientation3d::Swap(Orientation3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Orientation3d::InternalSwap(Orientation3d* other) {
  using std::swap;
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Orientation3d::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Identifier)
}
Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:osi3.Identifier)
}

void Identifier::SharedCtor() {
  value_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:osi3.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
}

void Identifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier& Identifier::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  return *internal_default_instance();
}

Identifier* Identifier::New(::google::protobuf::Arena* arena) const {
  Identifier* n = new Identifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Identifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Identifier)
}

::google::protobuf::uint8* Identifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Identifier)
  return target;
}

size_t Identifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Identifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Identifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Identifier)
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MountingPosition::InitAsDefaultInstance() {
  ::osi3::_MountingPosition_default_instance_._instance.get_mutable()->position_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
  ::osi3::_MountingPosition_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MountingPosition::kPositionFieldNumber;
const int MountingPosition::kOrientationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MountingPosition::MountingPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.MountingPosition)
}
MountingPosition::MountingPosition(const MountingPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::osi3::Vector3d(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_orientation()) {
    orientation_ = new ::osi3::Orientation3d(*from.orientation_);
  } else {
    orientation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.MountingPosition)
}

void MountingPosition::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(orientation_));
  _cached_size_ = 0;
}

MountingPosition::~MountingPosition() {
  // @@protoc_insertion_point(destructor:osi3.MountingPosition)
  SharedDtor();
}

void MountingPosition::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete orientation_;
}

void MountingPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MountingPosition::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MountingPosition& MountingPosition::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  return *internal_default_instance();
}

MountingPosition* MountingPosition::New(::google::protobuf::Arena* arena) const {
  MountingPosition* n = new MountingPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MountingPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.MountingPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) {
    delete orientation_;
  }
  orientation_ = NULL;
  _internal_metadata_.Clear();
}

bool MountingPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.MountingPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Vector3d position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d orientation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.MountingPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.MountingPosition)
  return false;
#undef DO_
}

void MountingPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.MountingPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Vector3d position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // .osi3.Orientation3d orientation = 2;
  if (this->has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->orientation_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.MountingPosition)
}

::google::protobuf::uint8* MountingPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.MountingPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Vector3d position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->position_, deterministic, target);
  }

  // .osi3.Orientation3d orientation = 2;
  if (this->has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->orientation_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.MountingPosition)
  return target;
}

size_t MountingPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.MountingPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Vector3d position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_);
  }

  // .osi3.Orientation3d orientation = 2;
  if (this->has_orientation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->orientation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MountingPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.MountingPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const MountingPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MountingPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.MountingPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.MountingPosition)
    MergeFrom(*source);
  }
}

void MountingPosition::MergeFrom(const MountingPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.MountingPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::osi3::Vector3d::MergeFrom(from.position());
  }
  if (from.has_orientation()) {
    mutable_orientation()->::osi3::Orientation3d::MergeFrom(from.orientation());
  }
}

void MountingPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.MountingPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountingPosition::CopyFrom(const MountingPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.MountingPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountingPosition::IsInitialized() const {
  return true;
}

void MountingPosition::Swap(MountingPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MountingPosition::InternalSwap(MountingPosition* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(orientation_, other->orientation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MountingPosition::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Spherical3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Spherical3d::kDistanceFieldNumber;
const int Spherical3d::kAzimuthFieldNumber;
const int Spherical3d::kElevationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Spherical3d::Spherical3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsSpherical3d();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Spherical3d)
}
Spherical3d::Spherical3d(const Spherical3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&distance_, &from.distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&elevation_) -
    reinterpret_cast<char*>(&distance_)) + sizeof(elevation_));
  // @@protoc_insertion_point(copy_constructor:osi3.Spherical3d)
}

void Spherical3d::SharedCtor() {
  ::memset(&distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elevation_) -
      reinterpret_cast<char*>(&distance_)) + sizeof(elevation_));
  _cached_size_ = 0;
}

Spherical3d::~Spherical3d() {
  // @@protoc_insertion_point(destructor:osi3.Spherical3d)
  SharedDtor();
}

void Spherical3d::SharedDtor() {
}

void Spherical3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Spherical3d::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Spherical3d& Spherical3d::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsSpherical3d();
  return *internal_default_instance();
}

Spherical3d* Spherical3d::New(::google::protobuf::Arena* arena) const {
  Spherical3d* n = new Spherical3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Spherical3d::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Spherical3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elevation_) -
      reinterpret_cast<char*>(&distance_)) + sizeof(elevation_));
  _internal_metadata_.Clear();
}

bool Spherical3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Spherical3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double azimuth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &azimuth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double elevation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &elevation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Spherical3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Spherical3d)
  return false;
#undef DO_
}

void Spherical3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Spherical3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance = 1;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance(), output);
  }

  // double azimuth = 2;
  if (this->azimuth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->azimuth(), output);
  }

  // double elevation = 3;
  if (this->elevation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->elevation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Spherical3d)
}

::google::protobuf::uint8* Spherical3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Spherical3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance = 1;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance(), target);
  }

  // double azimuth = 2;
  if (this->azimuth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->azimuth(), target);
  }

  // double elevation = 3;
  if (this->elevation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->elevation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Spherical3d)
  return target;
}

size_t Spherical3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Spherical3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double distance = 1;
  if (this->distance() != 0) {
    total_size += 1 + 8;
  }

  // double azimuth = 2;
  if (this->azimuth() != 0) {
    total_size += 1 + 8;
  }

  // double elevation = 3;
  if (this->elevation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Spherical3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Spherical3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Spherical3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Spherical3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Spherical3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Spherical3d)
    MergeFrom(*source);
  }
}

void Spherical3d::MergeFrom(const Spherical3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Spherical3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.azimuth() != 0) {
    set_azimuth(from.azimuth());
  }
  if (from.elevation() != 0) {
    set_elevation(from.elevation());
  }
}

void Spherical3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Spherical3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Spherical3d::CopyFrom(const Spherical3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Spherical3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Spherical3d::IsInitialized() const {
  return true;
}

void Spherical3d::Swap(Spherical3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Spherical3d::InternalSwap(Spherical3d* other) {
  using std::swap;
  swap(distance_, other->distance_);
  swap(azimuth_, other->azimuth_);
  swap(elevation_, other->elevation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Spherical3d::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BaseStationary::InitAsDefaultInstance() {
  ::osi3::_BaseStationary_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::osi3::Dimension3d*>(
      ::osi3::Dimension3d::internal_default_instance());
  ::osi3::_BaseStationary_default_instance_._instance.get_mutable()->position_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
  ::osi3::_BaseStationary_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseStationary::kDimensionFieldNumber;
const int BaseStationary::kPositionFieldNumber;
const int BaseStationary::kOrientationFieldNumber;
const int BaseStationary::kBasePolygonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseStationary::BaseStationary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsBaseStationary();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.BaseStationary)
}
BaseStationary::BaseStationary(const BaseStationary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      base_polygon_(from.base_polygon_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dimension()) {
    dimension_ = new ::osi3::Dimension3d(*from.dimension_);
  } else {
    dimension_ = NULL;
  }
  if (from.has_position()) {
    position_ = new ::osi3::Vector3d(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_orientation()) {
    orientation_ = new ::osi3::Orientation3d(*from.orientation_);
  } else {
    orientation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.BaseStationary)
}

void BaseStationary::SharedCtor() {
  ::memset(&dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&dimension_)) + sizeof(orientation_));
  _cached_size_ = 0;
}

BaseStationary::~BaseStationary() {
  // @@protoc_insertion_point(destructor:osi3.BaseStationary)
  SharedDtor();
}

void BaseStationary::SharedDtor() {
  if (this != internal_default_instance()) delete dimension_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete orientation_;
}

void BaseStationary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseStationary::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseStationary& BaseStationary::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsBaseStationary();
  return *internal_default_instance();
}

BaseStationary* BaseStationary::New(::google::protobuf::Arena* arena) const {
  BaseStationary* n = new BaseStationary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseStationary::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.BaseStationary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_polygon_.Clear();
  if (GetArenaNoVirtual() == NULL && dimension_ != NULL) {
    delete dimension_;
  }
  dimension_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) {
    delete orientation_;
  }
  orientation_ = NULL;
  _internal_metadata_.Clear();
}

bool BaseStationary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.BaseStationary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Dimension3d dimension = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dimension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Vector3d position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d orientation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.Vector2d base_polygon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_base_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.BaseStationary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.BaseStationary)
  return false;
#undef DO_
}

void BaseStationary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.BaseStationary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Dimension3d dimension = 1;
  if (this->has_dimension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dimension_, output);
  }

  // .osi3.Vector3d position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // .osi3.Orientation3d orientation = 3;
  if (this->has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->orientation_, output);
  }

  // repeated .osi3.Vector2d base_polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->base_polygon(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.BaseStationary)
}

::google::protobuf::uint8* BaseStationary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.BaseStationary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Dimension3d dimension = 1;
  if (this->has_dimension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->dimension_, deterministic, target);
  }

  // .osi3.Vector3d position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->position_, deterministic, target);
  }

  // .osi3.Orientation3d orientation = 3;
  if (this->has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->orientation_, deterministic, target);
  }

  // repeated .osi3.Vector2d base_polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->base_polygon(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.BaseStationary)
  return target;
}

size_t BaseStationary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.BaseStationary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.Vector2d base_polygon = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->base_polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->base_polygon(static_cast<int>(i)));
    }
  }

  // .osi3.Dimension3d dimension = 1;
  if (this->has_dimension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dimension_);
  }

  // .osi3.Vector3d position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_);
  }

  // .osi3.Orientation3d orientation = 3;
  if (this->has_orientation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->orientation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseStationary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.BaseStationary)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseStationary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseStationary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.BaseStationary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.BaseStationary)
    MergeFrom(*source);
  }
}

void BaseStationary::MergeFrom(const BaseStationary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.BaseStationary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  base_polygon_.MergeFrom(from.base_polygon_);
  if (from.has_dimension()) {
    mutable_dimension()->::osi3::Dimension3d::MergeFrom(from.dimension());
  }
  if (from.has_position()) {
    mutable_position()->::osi3::Vector3d::MergeFrom(from.position());
  }
  if (from.has_orientation()) {
    mutable_orientation()->::osi3::Orientation3d::MergeFrom(from.orientation());
  }
}

void BaseStationary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.BaseStationary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseStationary::CopyFrom(const BaseStationary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.BaseStationary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseStationary::IsInitialized() const {
  return true;
}

void BaseStationary::Swap(BaseStationary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseStationary::InternalSwap(BaseStationary* other) {
  using std::swap;
  base_polygon_.InternalSwap(&other->base_polygon_);
  swap(dimension_, other->dimension_);
  swap(position_, other->position_);
  swap(orientation_, other->orientation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseStationary::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BaseMoving::InitAsDefaultInstance() {
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->dimension_ = const_cast< ::osi3::Dimension3d*>(
      ::osi3::Dimension3d::internal_default_instance());
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->position_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->acceleration_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->orientation_rate_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
  ::osi3::_BaseMoving_default_instance_._instance.get_mutable()->orientation_acceleration_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseMoving::kDimensionFieldNumber;
const int BaseMoving::kPositionFieldNumber;
const int BaseMoving::kOrientationFieldNumber;
const int BaseMoving::kVelocityFieldNumber;
const int BaseMoving::kAccelerationFieldNumber;
const int BaseMoving::kOrientationRateFieldNumber;
const int BaseMoving::kOrientationAccelerationFieldNumber;
const int BaseMoving::kBasePolygonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseMoving::BaseMoving()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fcommon_2eproto::InitDefaultsBaseMoving();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.BaseMoving)
}
BaseMoving::BaseMoving(const BaseMoving& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      base_polygon_(from.base_polygon_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dimension()) {
    dimension_ = new ::osi3::Dimension3d(*from.dimension_);
  } else {
    dimension_ = NULL;
  }
  if (from.has_position()) {
    position_ = new ::osi3::Vector3d(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_orientation()) {
    orientation_ = new ::osi3::Orientation3d(*from.orientation_);
  } else {
    orientation_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::osi3::Vector3d(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_acceleration()) {
    acceleration_ = new ::osi3::Vector3d(*from.acceleration_);
  } else {
    acceleration_ = NULL;
  }
  if (from.has_orientation_rate()) {
    orientation_rate_ = new ::osi3::Orientation3d(*from.orientation_rate_);
  } else {
    orientation_rate_ = NULL;
  }
  if (from.has_orientation_acceleration()) {
    orientation_acceleration_ = new ::osi3::Orientation3d(*from.orientation_acceleration_);
  } else {
    orientation_acceleration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.BaseMoving)
}

void BaseMoving::SharedCtor() {
  ::memset(&dimension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_acceleration_) -
      reinterpret_cast<char*>(&dimension_)) + sizeof(orientation_acceleration_));
  _cached_size_ = 0;
}

BaseMoving::~BaseMoving() {
  // @@protoc_insertion_point(destructor:osi3.BaseMoving)
  SharedDtor();
}

void BaseMoving::SharedDtor() {
  if (this != internal_default_instance()) delete dimension_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete orientation_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete acceleration_;
  if (this != internal_default_instance()) delete orientation_rate_;
  if (this != internal_default_instance()) delete orientation_acceleration_;
}

void BaseMoving::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseMoving::descriptor() {
  ::protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseMoving& BaseMoving::default_instance() {
  ::protobuf_osi_5fcommon_2eproto::InitDefaultsBaseMoving();
  return *internal_default_instance();
}

BaseMoving* BaseMoving::New(::google::protobuf::Arena* arena) const {
  BaseMoving* n = new BaseMoving;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseMoving::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.BaseMoving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_polygon_.Clear();
  if (GetArenaNoVirtual() == NULL && dimension_ != NULL) {
    delete dimension_;
  }
  dimension_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) {
    delete orientation_;
  }
  orientation_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && acceleration_ != NULL) {
    delete acceleration_;
  }
  acceleration_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_rate_ != NULL) {
    delete orientation_rate_;
  }
  orientation_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_acceleration_ != NULL) {
    delete orientation_acceleration_;
  }
  orientation_acceleration_ = NULL;
  _internal_metadata_.Clear();
}

bool BaseMoving::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.BaseMoving)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Dimension3d dimension = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dimension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Vector3d position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d orientation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Vector3d velocity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Vector3d acceleration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d orientation_rate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.Vector2d base_polygon = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_base_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d orientation_acceleration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.BaseMoving)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.BaseMoving)
  return false;
#undef DO_
}

void BaseMoving::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.BaseMoving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Dimension3d dimension = 1;
  if (this->has_dimension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dimension_, output);
  }

  // .osi3.Vector3d position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // .osi3.Orientation3d orientation = 3;
  if (this->has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->orientation_, output);
  }

  // .osi3.Vector3d velocity = 4;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->velocity_, output);
  }

  // .osi3.Vector3d acceleration = 5;
  if (this->has_acceleration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->acceleration_, output);
  }

  // .osi3.Orientation3d orientation_rate = 6;
  if (this->has_orientation_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->orientation_rate_, output);
  }

  // repeated .osi3.Vector2d base_polygon = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->base_polygon(static_cast<int>(i)), output);
  }

  // .osi3.Orientation3d orientation_acceleration = 8;
  if (this->has_orientation_acceleration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->orientation_acceleration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.BaseMoving)
}

::google::protobuf::uint8* BaseMoving::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.BaseMoving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Dimension3d dimension = 1;
  if (this->has_dimension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->dimension_, deterministic, target);
  }

  // .osi3.Vector3d position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->position_, deterministic, target);
  }

  // .osi3.Orientation3d orientation = 3;
  if (this->has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->orientation_, deterministic, target);
  }

  // .osi3.Vector3d velocity = 4;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->velocity_, deterministic, target);
  }

  // .osi3.Vector3d acceleration = 5;
  if (this->has_acceleration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->acceleration_, deterministic, target);
  }

  // .osi3.Orientation3d orientation_rate = 6;
  if (this->has_orientation_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->orientation_rate_, deterministic, target);
  }

  // repeated .osi3.Vector2d base_polygon = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->base_polygon(static_cast<int>(i)), deterministic, target);
  }

  // .osi3.Orientation3d orientation_acceleration = 8;
  if (this->has_orientation_acceleration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->orientation_acceleration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.BaseMoving)
  return target;
}

size_t BaseMoving::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.BaseMoving)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.Vector2d base_polygon = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->base_polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->base_polygon(static_cast<int>(i)));
    }
  }

  // .osi3.Dimension3d dimension = 1;
  if (this->has_dimension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dimension_);
  }

  // .osi3.Vector3d position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_);
  }

  // .osi3.Orientation3d orientation = 3;
  if (this->has_orientation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->orientation_);
  }

  // .osi3.Vector3d velocity = 4;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->velocity_);
  }

  // .osi3.Vector3d acceleration = 5;
  if (this->has_acceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acceleration_);
  }

  // .osi3.Orientation3d orientation_rate = 6;
  if (this->has_orientation_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->orientation_rate_);
  }

  // .osi3.Orientation3d orientation_acceleration = 8;
  if (this->has_orientation_acceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->orientation_acceleration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseMoving::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.BaseMoving)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseMoving* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseMoving>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.BaseMoving)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.BaseMoving)
    MergeFrom(*source);
  }
}

void BaseMoving::MergeFrom(const BaseMoving& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.BaseMoving)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  base_polygon_.MergeFrom(from.base_polygon_);
  if (from.has_dimension()) {
    mutable_dimension()->::osi3::Dimension3d::MergeFrom(from.dimension());
  }
  if (from.has_position()) {
    mutable_position()->::osi3::Vector3d::MergeFrom(from.position());
  }
  if (from.has_orientation()) {
    mutable_orientation()->::osi3::Orientation3d::MergeFrom(from.orientation());
  }
  if (from.has_velocity()) {
    mutable_velocity()->::osi3::Vector3d::MergeFrom(from.velocity());
  }
  if (from.has_acceleration()) {
    mutable_acceleration()->::osi3::Vector3d::MergeFrom(from.acceleration());
  }
  if (from.has_orientation_rate()) {
    mutable_orientation_rate()->::osi3::Orientation3d::MergeFrom(from.orientation_rate());
  }
  if (from.has_orientation_acceleration()) {
    mutable_orientation_acceleration()->::osi3::Orientation3d::MergeFrom(from.orientation_acceleration());
  }
}

void BaseMoving::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.BaseMoving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseMoving::CopyFrom(const BaseMoving& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.BaseMoving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseMoving::IsInitialized() const {
  return true;
}

void BaseMoving::Swap(BaseMoving* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseMoving::InternalSwap(BaseMoving* other) {
  using std::swap;
  base_polygon_.InternalSwap(&other->base_polygon_);
  swap(dimension_, other->dimension_);
  swap(position_, other->position_);
  swap(orientation_, other->orientation_);
  swap(velocity_, other->velocity_);
  swap(acceleration_, other->acceleration_);
  swap(orientation_rate_, other->orientation_rate_);
  swap(orientation_acceleration_, other->orientation_acceleration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseMoving::GetMetadata() const {
  protobuf_osi_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
