// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_sensorview.proto

#include "osi_sensorview.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class SensorViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorView>
      _instance;
} _SensorView_default_instance_;
class GenericSensorViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericSensorView>
      _instance;
} _GenericSensorView_default_instance_;
class RadarSensorView_ReflectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadarSensorView_Reflection>
      _instance;
} _RadarSensorView_Reflection_default_instance_;
class RadarSensorViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadarSensorView>
      _instance;
} _RadarSensorView_default_instance_;
class LidarSensorView_ReflectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LidarSensorView_Reflection>
      _instance;
} _LidarSensorView_Reflection_default_instance_;
class LidarSensorViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LidarSensorView>
      _instance;
} _LidarSensorView_default_instance_;
class CameraSensorViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CameraSensorView>
      _instance;
} _CameraSensorView_default_instance_;
class UltrasonicSensorViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UltrasonicSensorView>
      _instance;
} _UltrasonicSensorView_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fsensorview_2eproto {
void InitDefaultsSensorViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fversion_2eproto::InitDefaultsInterfaceVersion();
  protobuf_osi_5fcommon_2eproto::InitDefaultsTimestamp();
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  protobuf_osi_5fhostvehicledata_2eproto::InitDefaultsHostVehicleData();
  protobuf_osi_5fgroundtruth_2eproto::InitDefaultsGroundTruth();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsGenericSensorView();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsRadarSensorView();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsLidarSensorView();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsCameraSensorView();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsUltrasonicSensorView();
  {
    void* ptr = &::osi3::_SensorView_default_instance_;
    new (ptr) ::osi3::SensorView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::SensorView::InitAsDefaultInstance();
}

void InitDefaultsSensorView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSensorViewImpl);
}

void InitDefaultsGenericSensorViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsGenericSensorViewConfiguration();
  {
    void* ptr = &::osi3::_GenericSensorView_default_instance_;
    new (ptr) ::osi3::GenericSensorView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::GenericSensorView::InitAsDefaultInstance();
}

void InitDefaultsGenericSensorView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenericSensorViewImpl);
}

void InitDefaultsRadarSensorView_ReflectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_RadarSensorView_Reflection_default_instance_;
    new (ptr) ::osi3::RadarSensorView_Reflection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::RadarSensorView_Reflection::InitAsDefaultInstance();
}

void InitDefaultsRadarSensorView_Reflection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRadarSensorView_ReflectionImpl);
}

void InitDefaultsRadarSensorViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsRadarSensorView_Reflection();
  {
    void* ptr = &::osi3::_RadarSensorView_default_instance_;
    new (ptr) ::osi3::RadarSensorView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::RadarSensorView::InitAsDefaultInstance();
}

void InitDefaultsRadarSensorView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRadarSensorViewImpl);
}

void InitDefaultsLidarSensorView_ReflectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  {
    void* ptr = &::osi3::_LidarSensorView_Reflection_default_instance_;
    new (ptr) ::osi3::LidarSensorView_Reflection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::LidarSensorView_Reflection::InitAsDefaultInstance();
}

void InitDefaultsLidarSensorView_Reflection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLidarSensorView_ReflectionImpl);
}

void InitDefaultsLidarSensorViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsLidarSensorViewConfiguration();
  protobuf_osi_5fsensorview_2eproto::InitDefaultsLidarSensorView_Reflection();
  {
    void* ptr = &::osi3::_LidarSensorView_default_instance_;
    new (ptr) ::osi3::LidarSensorView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::LidarSensorView::InitAsDefaultInstance();
}

void InitDefaultsLidarSensorView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLidarSensorViewImpl);
}

void InitDefaultsCameraSensorViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsCameraSensorViewConfiguration();
  {
    void* ptr = &::osi3::_CameraSensorView_default_instance_;
    new (ptr) ::osi3::CameraSensorView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::CameraSensorView::InitAsDefaultInstance();
}

void InitDefaultsCameraSensorView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCameraSensorViewImpl);
}

void InitDefaultsUltrasonicSensorViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsUltrasonicSensorViewConfiguration();
  {
    void* ptr = &::osi3::_UltrasonicSensorView_default_instance_;
    new (ptr) ::osi3::UltrasonicSensorView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::UltrasonicSensorView::InitAsDefaultInstance();
}

void InitDefaultsUltrasonicSensorView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUltrasonicSensorViewImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, host_vehicle_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, global_ground_truth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, host_vehicle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, generic_sensor_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, radar_sensor_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, lidar_sensor_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, camera_sensor_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorView, ultrasonic_sensor_view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorView, view_configuration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView_Reflection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView_Reflection, signal_strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView_Reflection, time_of_flight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView_Reflection, doppler_shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView_Reflection, source_horizontal_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView_Reflection, source_vertical_angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView, view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorView, reflection_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView_Reflection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView_Reflection, signal_strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView_Reflection, time_of_flight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView_Reflection, doppler_shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView_Reflection, normal_to_surface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView_Reflection, object_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView, view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorView, reflection_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorView, view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorView, image_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorView, view_configuration_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::SensorView)},
  { 18, -1, sizeof(::osi3::GenericSensorView)},
  { 24, -1, sizeof(::osi3::RadarSensorView_Reflection)},
  { 34, -1, sizeof(::osi3::RadarSensorView)},
  { 41, -1, sizeof(::osi3::LidarSensorView_Reflection)},
  { 51, -1, sizeof(::osi3::LidarSensorView)},
  { 58, -1, sizeof(::osi3::CameraSensorView)},
  { 65, -1, sizeof(::osi3::UltrasonicSensorView)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_SensorView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_GenericSensorView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_RadarSensorView_Reflection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_RadarSensorView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_LidarSensorView_Reflection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_LidarSensorView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_CameraSensorView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_UltrasonicSensorView_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_sensorview.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024osi_sensorview.proto\022\004osi3\032\021osi_versio"
      "n.proto\032\020osi_common.proto\032\025osi_groundtru"
      "th.proto\032!osi_sensorviewconfiguration.pr"
      "oto\032\031osi_hostvehicledata.proto\"\205\005\n\nSenso"
      "rView\022\'\n\007version\030\001 \001(\0132\026.osi3.InterfaceV"
      "ersion\022\"\n\ttimestamp\030\002 \001(\0132\017.osi3.Timesta"
      "mp\022#\n\tsensor_id\030\003 \001(\0132\020.osi3.Identifier\022"
      "1\n\021mounting_position\030\004 \001(\0132\026.osi3.Mounti"
      "ngPosition\0226\n\026mounting_position_rmse\030\005 \001"
      "(\0132\026.osi3.MountingPosition\0220\n\021host_vehic"
      "le_data\030\006 \001(\0132\025.osi3.HostVehicleData\022.\n\023"
      "global_ground_truth\030\007 \001(\0132\021.osi3.GroundT"
      "ruth\022)\n\017host_vehicle_id\030\010 \001(\0132\020.osi3.Ide"
      "ntifier\0225\n\023generic_sensor_view\030\350\007 \003(\0132\027."
      "osi3.GenericSensorView\0221\n\021radar_sensor_v"
      "iew\030\351\007 \003(\0132\025.osi3.RadarSensorView\0221\n\021lid"
      "ar_sensor_view\030\352\007 \003(\0132\025.osi3.LidarSensor"
      "View\0223\n\022camera_sensor_view\030\353\007 \003(\0132\026.osi3"
      ".CameraSensorView\022;\n\026ultrasonic_sensor_v"
      "iew\030\354\007 \003(\0132\032.osi3.UltrasonicSensorView\"U"
      "\n\021GenericSensorView\022@\n\022view_configuratio"
      "n\030\001 \001(\0132$.osi3.GenericSensorViewConfigur"
      "ation\"\236\002\n\017RadarSensorView\022>\n\022view_config"
      "uration\030\001 \001(\0132\".osi3.RadarSensorViewConf"
      "iguration\0224\n\nreflection\030\002 \003(\0132 .osi3.Rad"
      "arSensorView.Reflection\032\224\001\n\nReflection\022\027"
      "\n\017signal_strength\030\001 \001(\001\022\026\n\016time_of_fligh"
      "t\030\002 \001(\001\022\025\n\rdoppler_shift\030\003 \001(\001\022\037\n\027source"
      "_horizontal_angle\030\004 \001(\001\022\035\n\025source_vertic"
      "al_angle\030\005 \001(\001\"\256\002\n\017LidarSensorView\022>\n\022vi"
      "ew_configuration\030\001 \001(\0132\".osi3.LidarSenso"
      "rViewConfiguration\0224\n\nreflection\030\002 \003(\0132 "
      ".osi3.LidarSensorView.Reflection\032\244\001\n\nRef"
      "lection\022\027\n\017signal_strength\030\001 \001(\001\022\026\n\016time"
      "_of_flight\030\002 \001(\001\022\025\n\rdoppler_shift\030\003 \001(\001\022"
      ")\n\021normal_to_surface\030\005 \001(\0132\016.osi3.Vector"
      "3d\022#\n\tobject_id\030\006 \001(\0132\020.osi3.Identifier\""
      "g\n\020CameraSensorView\022\?\n\022view_configuratio"
      "n\030\001 \001(\0132#.osi3.CameraSensorViewConfigura"
      "tion\022\022\n\nimage_data\030\002 \001(\014\"[\n\024UltrasonicSe"
      "nsorView\022C\n\022view_configuration\030\001 \001(\0132\'.o"
      "si3.UltrasonicSensorViewConfigurationB\002H"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1689);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_sensorview.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5fversion_2eproto::AddDescriptors();
  ::protobuf_osi_5fcommon_2eproto::AddDescriptors();
  ::protobuf_osi_5fgroundtruth_2eproto::AddDescriptors();
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::AddDescriptors();
  ::protobuf_osi_5fhostvehicledata_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fsensorview_2eproto
namespace osi3 {

// ===================================================================

void SensorView::InitAsDefaultInstance() {
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->version_ = const_cast< ::osi3::InterfaceVersion*>(
      ::osi3::InterfaceVersion::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::osi3::Timestamp*>(
      ::osi3::Timestamp::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->host_vehicle_data_ = const_cast< ::osi3::HostVehicleData*>(
      ::osi3::HostVehicleData::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->global_ground_truth_ = const_cast< ::osi3::GroundTruth*>(
      ::osi3::GroundTruth::internal_default_instance());
  ::osi3::_SensorView_default_instance_._instance.get_mutable()->host_vehicle_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
}
void SensorView::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
void SensorView::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
void SensorView::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void SensorView::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void SensorView::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
void SensorView::clear_host_vehicle_data() {
  if (GetArenaNoVirtual() == NULL && host_vehicle_data_ != NULL) {
    delete host_vehicle_data_;
  }
  host_vehicle_data_ = NULL;
}
void SensorView::clear_global_ground_truth() {
  if (GetArenaNoVirtual() == NULL && global_ground_truth_ != NULL) {
    delete global_ground_truth_;
  }
  global_ground_truth_ = NULL;
}
void SensorView::clear_host_vehicle_id() {
  if (GetArenaNoVirtual() == NULL && host_vehicle_id_ != NULL) {
    delete host_vehicle_id_;
  }
  host_vehicle_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorView::kVersionFieldNumber;
const int SensorView::kTimestampFieldNumber;
const int SensorView::kSensorIdFieldNumber;
const int SensorView::kMountingPositionFieldNumber;
const int SensorView::kMountingPositionRmseFieldNumber;
const int SensorView::kHostVehicleDataFieldNumber;
const int SensorView::kGlobalGroundTruthFieldNumber;
const int SensorView::kHostVehicleIdFieldNumber;
const int SensorView::kGenericSensorViewFieldNumber;
const int SensorView::kRadarSensorViewFieldNumber;
const int SensorView::kLidarSensorViewFieldNumber;
const int SensorView::kCameraSensorViewFieldNumber;
const int SensorView::kUltrasonicSensorViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorView::SensorView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsSensorView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.SensorView)
}
SensorView::SensorView(const SensorView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      generic_sensor_view_(from.generic_sensor_view_),
      radar_sensor_view_(from.radar_sensor_view_),
      lidar_sensor_view_(from.lidar_sensor_view_),
      camera_sensor_view_(from.camera_sensor_view_),
      ultrasonic_sensor_view_(from.ultrasonic_sensor_view_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::osi3::InterfaceVersion(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::osi3::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  if (from.has_host_vehicle_data()) {
    host_vehicle_data_ = new ::osi3::HostVehicleData(*from.host_vehicle_data_);
  } else {
    host_vehicle_data_ = NULL;
  }
  if (from.has_global_ground_truth()) {
    global_ground_truth_ = new ::osi3::GroundTruth(*from.global_ground_truth_);
  } else {
    global_ground_truth_ = NULL;
  }
  if (from.has_host_vehicle_id()) {
    host_vehicle_id_ = new ::osi3::Identifier(*from.host_vehicle_id_);
  } else {
    host_vehicle_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.SensorView)
}

void SensorView::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_vehicle_id_) -
      reinterpret_cast<char*>(&version_)) + sizeof(host_vehicle_id_));
  _cached_size_ = 0;
}

SensorView::~SensorView() {
  // @@protoc_insertion_point(destructor:osi3.SensorView)
  SharedDtor();
}

void SensorView::SharedDtor() {
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
  if (this != internal_default_instance()) delete host_vehicle_data_;
  if (this != internal_default_instance()) delete global_ground_truth_;
  if (this != internal_default_instance()) delete host_vehicle_id_;
}

void SensorView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorView::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorView& SensorView::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsSensorView();
  return *internal_default_instance();
}

SensorView* SensorView::New(::google::protobuf::Arena* arena) const {
  SensorView* n = new SensorView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SensorView::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.SensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generic_sensor_view_.Clear();
  radar_sensor_view_.Clear();
  lidar_sensor_view_.Clear();
  camera_sensor_view_.Clear();
  ultrasonic_sensor_view_.Clear();
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_vehicle_data_ != NULL) {
    delete host_vehicle_data_;
  }
  host_vehicle_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && global_ground_truth_ != NULL) {
    delete global_ground_truth_;
  }
  global_ground_truth_ = NULL;
  if (GetArenaNoVirtual() == NULL && host_vehicle_id_ != NULL) {
    delete host_vehicle_id_;
  }
  host_vehicle_id_ = NULL;
  _internal_metadata_.Clear();
}

bool SensorView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.SensorView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.InterfaceVersion version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Identifier sensor_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.HostVehicleData host_vehicle_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_vehicle_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.GroundTruth global_ground_truth = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global_ground_truth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Identifier host_vehicle_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_vehicle_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.GenericSensorView generic_sensor_view = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 8002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_generic_sensor_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.RadarSensorView radar_sensor_view = 1001;
      case 1001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 8010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_radar_sensor_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.LidarSensorView lidar_sensor_view = 1002;
      case 1002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 8018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_lidar_sensor_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.CameraSensorView camera_sensor_view = 1003;
      case 1003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 8026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_camera_sensor_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.UltrasonicSensorView ultrasonic_sensor_view = 1004;
      case 1004: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 8034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ultrasonic_sensor_view()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.SensorView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.SensorView)
  return false;
#undef DO_
}

void SensorView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.SensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.InterfaceVersion version = 1;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->version_, output);
  }

  // .osi3.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->timestamp_, output);
  }

  // .osi3.Identifier sensor_id = 3;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 4;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 5;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->mounting_position_rmse_, output);
  }

  // .osi3.HostVehicleData host_vehicle_data = 6;
  if (this->has_host_vehicle_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->host_vehicle_data_, output);
  }

  // .osi3.GroundTruth global_ground_truth = 7;
  if (this->has_global_ground_truth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->global_ground_truth_, output);
  }

  // .osi3.Identifier host_vehicle_id = 8;
  if (this->has_host_vehicle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->host_vehicle_id_, output);
  }

  // repeated .osi3.GenericSensorView generic_sensor_view = 1000;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->generic_sensor_view_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->generic_sensor_view(static_cast<int>(i)), output);
  }

  // repeated .osi3.RadarSensorView radar_sensor_view = 1001;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radar_sensor_view_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1001, this->radar_sensor_view(static_cast<int>(i)), output);
  }

  // repeated .osi3.LidarSensorView lidar_sensor_view = 1002;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lidar_sensor_view_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1002, this->lidar_sensor_view(static_cast<int>(i)), output);
  }

  // repeated .osi3.CameraSensorView camera_sensor_view = 1003;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camera_sensor_view_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1003, this->camera_sensor_view(static_cast<int>(i)), output);
  }

  // repeated .osi3.UltrasonicSensorView ultrasonic_sensor_view = 1004;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ultrasonic_sensor_view_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1004, this->ultrasonic_sensor_view(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.SensorView)
}

::google::protobuf::uint8* SensorView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.SensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.InterfaceVersion version = 1;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->version_, deterministic, target);
  }

  // .osi3.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->timestamp_, deterministic, target);
  }

  // .osi3.Identifier sensor_id = 3;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 4;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 5;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->mounting_position_rmse_, deterministic, target);
  }

  // .osi3.HostVehicleData host_vehicle_data = 6;
  if (this->has_host_vehicle_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->host_vehicle_data_, deterministic, target);
  }

  // .osi3.GroundTruth global_ground_truth = 7;
  if (this->has_global_ground_truth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->global_ground_truth_, deterministic, target);
  }

  // .osi3.Identifier host_vehicle_id = 8;
  if (this->has_host_vehicle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->host_vehicle_id_, deterministic, target);
  }

  // repeated .osi3.GenericSensorView generic_sensor_view = 1000;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->generic_sensor_view_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1000, this->generic_sensor_view(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.RadarSensorView radar_sensor_view = 1001;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radar_sensor_view_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1001, this->radar_sensor_view(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.LidarSensorView lidar_sensor_view = 1002;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lidar_sensor_view_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1002, this->lidar_sensor_view(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.CameraSensorView camera_sensor_view = 1003;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camera_sensor_view_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1003, this->camera_sensor_view(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.UltrasonicSensorView ultrasonic_sensor_view = 1004;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ultrasonic_sensor_view_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1004, this->ultrasonic_sensor_view(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.SensorView)
  return target;
}

size_t SensorView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.SensorView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.GenericSensorView generic_sensor_view = 1000;
  {
    unsigned int count = static_cast<unsigned int>(this->generic_sensor_view_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->generic_sensor_view(static_cast<int>(i)));
    }
  }

  // repeated .osi3.RadarSensorView radar_sensor_view = 1001;
  {
    unsigned int count = static_cast<unsigned int>(this->radar_sensor_view_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->radar_sensor_view(static_cast<int>(i)));
    }
  }

  // repeated .osi3.LidarSensorView lidar_sensor_view = 1002;
  {
    unsigned int count = static_cast<unsigned int>(this->lidar_sensor_view_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lidar_sensor_view(static_cast<int>(i)));
    }
  }

  // repeated .osi3.CameraSensorView camera_sensor_view = 1003;
  {
    unsigned int count = static_cast<unsigned int>(this->camera_sensor_view_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->camera_sensor_view(static_cast<int>(i)));
    }
  }

  // repeated .osi3.UltrasonicSensorView ultrasonic_sensor_view = 1004;
  {
    unsigned int count = static_cast<unsigned int>(this->ultrasonic_sensor_view_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ultrasonic_sensor_view(static_cast<int>(i)));
    }
  }

  // .osi3.InterfaceVersion version = 1;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->version_);
  }

  // .osi3.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timestamp_);
  }

  // .osi3.Identifier sensor_id = 3;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 4;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 5;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // .osi3.HostVehicleData host_vehicle_data = 6;
  if (this->has_host_vehicle_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->host_vehicle_data_);
  }

  // .osi3.GroundTruth global_ground_truth = 7;
  if (this->has_global_ground_truth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->global_ground_truth_);
  }

  // .osi3.Identifier host_vehicle_id = 8;
  if (this->has_host_vehicle_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->host_vehicle_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.SensorView)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.SensorView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.SensorView)
    MergeFrom(*source);
  }
}

void SensorView::MergeFrom(const SensorView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.SensorView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  generic_sensor_view_.MergeFrom(from.generic_sensor_view_);
  radar_sensor_view_.MergeFrom(from.radar_sensor_view_);
  lidar_sensor_view_.MergeFrom(from.lidar_sensor_view_);
  camera_sensor_view_.MergeFrom(from.camera_sensor_view_);
  ultrasonic_sensor_view_.MergeFrom(from.ultrasonic_sensor_view_);
  if (from.has_version()) {
    mutable_version()->::osi3::InterfaceVersion::MergeFrom(from.version());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::osi3::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.has_host_vehicle_data()) {
    mutable_host_vehicle_data()->::osi3::HostVehicleData::MergeFrom(from.host_vehicle_data());
  }
  if (from.has_global_ground_truth()) {
    mutable_global_ground_truth()->::osi3::GroundTruth::MergeFrom(from.global_ground_truth());
  }
  if (from.has_host_vehicle_id()) {
    mutable_host_vehicle_id()->::osi3::Identifier::MergeFrom(from.host_vehicle_id());
  }
}

void SensorView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.SensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorView::CopyFrom(const SensorView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.SensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorView::IsInitialized() const {
  return true;
}

void SensorView::Swap(SensorView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorView::InternalSwap(SensorView* other) {
  using std::swap;
  generic_sensor_view_.InternalSwap(&other->generic_sensor_view_);
  radar_sensor_view_.InternalSwap(&other->radar_sensor_view_);
  lidar_sensor_view_.InternalSwap(&other->lidar_sensor_view_);
  camera_sensor_view_.InternalSwap(&other->camera_sensor_view_);
  ultrasonic_sensor_view_.InternalSwap(&other->ultrasonic_sensor_view_);
  swap(version_, other->version_);
  swap(timestamp_, other->timestamp_);
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(host_vehicle_data_, other->host_vehicle_data_);
  swap(global_ground_truth_, other->global_ground_truth_);
  swap(host_vehicle_id_, other->host_vehicle_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SensorView::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenericSensorView::InitAsDefaultInstance() {
  ::osi3::_GenericSensorView_default_instance_._instance.get_mutable()->view_configuration_ = const_cast< ::osi3::GenericSensorViewConfiguration*>(
      ::osi3::GenericSensorViewConfiguration::internal_default_instance());
}
void GenericSensorView::clear_view_configuration() {
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericSensorView::kViewConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericSensorView::GenericSensorView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsGenericSensorView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.GenericSensorView)
}
GenericSensorView::GenericSensorView(const GenericSensorView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_view_configuration()) {
    view_configuration_ = new ::osi3::GenericSensorViewConfiguration(*from.view_configuration_);
  } else {
    view_configuration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.GenericSensorView)
}

void GenericSensorView::SharedCtor() {
  view_configuration_ = NULL;
  _cached_size_ = 0;
}

GenericSensorView::~GenericSensorView() {
  // @@protoc_insertion_point(destructor:osi3.GenericSensorView)
  SharedDtor();
}

void GenericSensorView::SharedDtor() {
  if (this != internal_default_instance()) delete view_configuration_;
}

void GenericSensorView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericSensorView::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericSensorView& GenericSensorView::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsGenericSensorView();
  return *internal_default_instance();
}

GenericSensorView* GenericSensorView::New(::google::protobuf::Arena* arena) const {
  GenericSensorView* n = new GenericSensorView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericSensorView::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.GenericSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
  _internal_metadata_.Clear();
}

bool GenericSensorView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.GenericSensorView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.GenericSensorViewConfiguration view_configuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.GenericSensorView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.GenericSensorView)
  return false;
#undef DO_
}

void GenericSensorView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.GenericSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.GenericSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->view_configuration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.GenericSensorView)
}

::google::protobuf::uint8* GenericSensorView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.GenericSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.GenericSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->view_configuration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.GenericSensorView)
  return target;
}

size_t GenericSensorView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.GenericSensorView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.GenericSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_configuration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericSensorView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.GenericSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericSensorView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericSensorView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.GenericSensorView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.GenericSensorView)
    MergeFrom(*source);
  }
}

void GenericSensorView::MergeFrom(const GenericSensorView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.GenericSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_view_configuration()) {
    mutable_view_configuration()->::osi3::GenericSensorViewConfiguration::MergeFrom(from.view_configuration());
  }
}

void GenericSensorView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.GenericSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericSensorView::CopyFrom(const GenericSensorView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.GenericSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericSensorView::IsInitialized() const {
  return true;
}

void GenericSensorView::Swap(GenericSensorView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericSensorView::InternalSwap(GenericSensorView* other) {
  using std::swap;
  swap(view_configuration_, other->view_configuration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericSensorView::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadarSensorView_Reflection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSensorView_Reflection::kSignalStrengthFieldNumber;
const int RadarSensorView_Reflection::kTimeOfFlightFieldNumber;
const int RadarSensorView_Reflection::kDopplerShiftFieldNumber;
const int RadarSensorView_Reflection::kSourceHorizontalAngleFieldNumber;
const int RadarSensorView_Reflection::kSourceVerticalAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSensorView_Reflection::RadarSensorView_Reflection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsRadarSensorView_Reflection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.RadarSensorView.Reflection)
}
RadarSensorView_Reflection::RadarSensorView_Reflection(const RadarSensorView_Reflection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&signal_strength_, &from.signal_strength_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_vertical_angle_) -
    reinterpret_cast<char*>(&signal_strength_)) + sizeof(source_vertical_angle_));
  // @@protoc_insertion_point(copy_constructor:osi3.RadarSensorView.Reflection)
}

void RadarSensorView_Reflection::SharedCtor() {
  ::memset(&signal_strength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_vertical_angle_) -
      reinterpret_cast<char*>(&signal_strength_)) + sizeof(source_vertical_angle_));
  _cached_size_ = 0;
}

RadarSensorView_Reflection::~RadarSensorView_Reflection() {
  // @@protoc_insertion_point(destructor:osi3.RadarSensorView.Reflection)
  SharedDtor();
}

void RadarSensorView_Reflection::SharedDtor() {
}

void RadarSensorView_Reflection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSensorView_Reflection::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSensorView_Reflection& RadarSensorView_Reflection::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsRadarSensorView_Reflection();
  return *internal_default_instance();
}

RadarSensorView_Reflection* RadarSensorView_Reflection::New(::google::protobuf::Arena* arena) const {
  RadarSensorView_Reflection* n = new RadarSensorView_Reflection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSensorView_Reflection::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.RadarSensorView.Reflection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&signal_strength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_vertical_angle_) -
      reinterpret_cast<char*>(&signal_strength_)) + sizeof(source_vertical_angle_));
  _internal_metadata_.Clear();
}

bool RadarSensorView_Reflection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.RadarSensorView.Reflection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double signal_strength = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &signal_strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_of_flight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_of_flight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double doppler_shift = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &doppler_shift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double source_horizontal_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &source_horizontal_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double source_vertical_angle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &source_vertical_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.RadarSensorView.Reflection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.RadarSensorView.Reflection)
  return false;
#undef DO_
}

void RadarSensorView_Reflection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.RadarSensorView.Reflection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double signal_strength = 1;
  if (this->signal_strength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->signal_strength(), output);
  }

  // double time_of_flight = 2;
  if (this->time_of_flight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time_of_flight(), output);
  }

  // double doppler_shift = 3;
  if (this->doppler_shift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->doppler_shift(), output);
  }

  // double source_horizontal_angle = 4;
  if (this->source_horizontal_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->source_horizontal_angle(), output);
  }

  // double source_vertical_angle = 5;
  if (this->source_vertical_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->source_vertical_angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.RadarSensorView.Reflection)
}

::google::protobuf::uint8* RadarSensorView_Reflection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.RadarSensorView.Reflection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double signal_strength = 1;
  if (this->signal_strength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->signal_strength(), target);
  }

  // double time_of_flight = 2;
  if (this->time_of_flight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time_of_flight(), target);
  }

  // double doppler_shift = 3;
  if (this->doppler_shift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->doppler_shift(), target);
  }

  // double source_horizontal_angle = 4;
  if (this->source_horizontal_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->source_horizontal_angle(), target);
  }

  // double source_vertical_angle = 5;
  if (this->source_vertical_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->source_vertical_angle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.RadarSensorView.Reflection)
  return target;
}

size_t RadarSensorView_Reflection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.RadarSensorView.Reflection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double signal_strength = 1;
  if (this->signal_strength() != 0) {
    total_size += 1 + 8;
  }

  // double time_of_flight = 2;
  if (this->time_of_flight() != 0) {
    total_size += 1 + 8;
  }

  // double doppler_shift = 3;
  if (this->doppler_shift() != 0) {
    total_size += 1 + 8;
  }

  // double source_horizontal_angle = 4;
  if (this->source_horizontal_angle() != 0) {
    total_size += 1 + 8;
  }

  // double source_vertical_angle = 5;
  if (this->source_vertical_angle() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSensorView_Reflection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.RadarSensorView.Reflection)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSensorView_Reflection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSensorView_Reflection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.RadarSensorView.Reflection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.RadarSensorView.Reflection)
    MergeFrom(*source);
  }
}

void RadarSensorView_Reflection::MergeFrom(const RadarSensorView_Reflection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.RadarSensorView.Reflection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signal_strength() != 0) {
    set_signal_strength(from.signal_strength());
  }
  if (from.time_of_flight() != 0) {
    set_time_of_flight(from.time_of_flight());
  }
  if (from.doppler_shift() != 0) {
    set_doppler_shift(from.doppler_shift());
  }
  if (from.source_horizontal_angle() != 0) {
    set_source_horizontal_angle(from.source_horizontal_angle());
  }
  if (from.source_vertical_angle() != 0) {
    set_source_vertical_angle(from.source_vertical_angle());
  }
}

void RadarSensorView_Reflection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.RadarSensorView.Reflection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSensorView_Reflection::CopyFrom(const RadarSensorView_Reflection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.RadarSensorView.Reflection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSensorView_Reflection::IsInitialized() const {
  return true;
}

void RadarSensorView_Reflection::Swap(RadarSensorView_Reflection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSensorView_Reflection::InternalSwap(RadarSensorView_Reflection* other) {
  using std::swap;
  swap(signal_strength_, other->signal_strength_);
  swap(time_of_flight_, other->time_of_flight_);
  swap(doppler_shift_, other->doppler_shift_);
  swap(source_horizontal_angle_, other->source_horizontal_angle_);
  swap(source_vertical_angle_, other->source_vertical_angle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSensorView_Reflection::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadarSensorView::InitAsDefaultInstance() {
  ::osi3::_RadarSensorView_default_instance_._instance.get_mutable()->view_configuration_ = const_cast< ::osi3::RadarSensorViewConfiguration*>(
      ::osi3::RadarSensorViewConfiguration::internal_default_instance());
}
void RadarSensorView::clear_view_configuration() {
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSensorView::kViewConfigurationFieldNumber;
const int RadarSensorView::kReflectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSensorView::RadarSensorView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsRadarSensorView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.RadarSensorView)
}
RadarSensorView::RadarSensorView(const RadarSensorView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reflection_(from.reflection_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_view_configuration()) {
    view_configuration_ = new ::osi3::RadarSensorViewConfiguration(*from.view_configuration_);
  } else {
    view_configuration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.RadarSensorView)
}

void RadarSensorView::SharedCtor() {
  view_configuration_ = NULL;
  _cached_size_ = 0;
}

RadarSensorView::~RadarSensorView() {
  // @@protoc_insertion_point(destructor:osi3.RadarSensorView)
  SharedDtor();
}

void RadarSensorView::SharedDtor() {
  if (this != internal_default_instance()) delete view_configuration_;
}

void RadarSensorView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSensorView::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSensorView& RadarSensorView::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsRadarSensorView();
  return *internal_default_instance();
}

RadarSensorView* RadarSensorView::New(::google::protobuf::Arena* arena) const {
  RadarSensorView* n = new RadarSensorView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSensorView::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.RadarSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reflection_.Clear();
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
  _internal_metadata_.Clear();
}

bool RadarSensorView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.RadarSensorView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.RadarSensorViewConfiguration view_configuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.RadarSensorView.Reflection reflection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_reflection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.RadarSensorView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.RadarSensorView)
  return false;
#undef DO_
}

void RadarSensorView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.RadarSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.RadarSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->view_configuration_, output);
  }

  // repeated .osi3.RadarSensorView.Reflection reflection = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reflection_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reflection(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.RadarSensorView)
}

::google::protobuf::uint8* RadarSensorView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.RadarSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.RadarSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->view_configuration_, deterministic, target);
  }

  // repeated .osi3.RadarSensorView.Reflection reflection = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reflection_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->reflection(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.RadarSensorView)
  return target;
}

size_t RadarSensorView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.RadarSensorView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.RadarSensorView.Reflection reflection = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->reflection_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reflection(static_cast<int>(i)));
    }
  }

  // .osi3.RadarSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_configuration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSensorView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.RadarSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSensorView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSensorView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.RadarSensorView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.RadarSensorView)
    MergeFrom(*source);
  }
}

void RadarSensorView::MergeFrom(const RadarSensorView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.RadarSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reflection_.MergeFrom(from.reflection_);
  if (from.has_view_configuration()) {
    mutable_view_configuration()->::osi3::RadarSensorViewConfiguration::MergeFrom(from.view_configuration());
  }
}

void RadarSensorView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.RadarSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSensorView::CopyFrom(const RadarSensorView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.RadarSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSensorView::IsInitialized() const {
  return true;
}

void RadarSensorView::Swap(RadarSensorView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSensorView::InternalSwap(RadarSensorView* other) {
  using std::swap;
  reflection_.InternalSwap(&other->reflection_);
  swap(view_configuration_, other->view_configuration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSensorView::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LidarSensorView_Reflection::InitAsDefaultInstance() {
  ::osi3::_LidarSensorView_Reflection_default_instance_._instance.get_mutable()->normal_to_surface_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
  ::osi3::_LidarSensorView_Reflection_default_instance_._instance.get_mutable()->object_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
}
void LidarSensorView_Reflection::clear_normal_to_surface() {
  if (GetArenaNoVirtual() == NULL && normal_to_surface_ != NULL) {
    delete normal_to_surface_;
  }
  normal_to_surface_ = NULL;
}
void LidarSensorView_Reflection::clear_object_id() {
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) {
    delete object_id_;
  }
  object_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LidarSensorView_Reflection::kSignalStrengthFieldNumber;
const int LidarSensorView_Reflection::kTimeOfFlightFieldNumber;
const int LidarSensorView_Reflection::kDopplerShiftFieldNumber;
const int LidarSensorView_Reflection::kNormalToSurfaceFieldNumber;
const int LidarSensorView_Reflection::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LidarSensorView_Reflection::LidarSensorView_Reflection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsLidarSensorView_Reflection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.LidarSensorView.Reflection)
}
LidarSensorView_Reflection::LidarSensorView_Reflection(const LidarSensorView_Reflection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_normal_to_surface()) {
    normal_to_surface_ = new ::osi3::Vector3d(*from.normal_to_surface_);
  } else {
    normal_to_surface_ = NULL;
  }
  if (from.has_object_id()) {
    object_id_ = new ::osi3::Identifier(*from.object_id_);
  } else {
    object_id_ = NULL;
  }
  ::memcpy(&signal_strength_, &from.signal_strength_,
    static_cast<size_t>(reinterpret_cast<char*>(&doppler_shift_) -
    reinterpret_cast<char*>(&signal_strength_)) + sizeof(doppler_shift_));
  // @@protoc_insertion_point(copy_constructor:osi3.LidarSensorView.Reflection)
}

void LidarSensorView_Reflection::SharedCtor() {
  ::memset(&normal_to_surface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&doppler_shift_) -
      reinterpret_cast<char*>(&normal_to_surface_)) + sizeof(doppler_shift_));
  _cached_size_ = 0;
}

LidarSensorView_Reflection::~LidarSensorView_Reflection() {
  // @@protoc_insertion_point(destructor:osi3.LidarSensorView.Reflection)
  SharedDtor();
}

void LidarSensorView_Reflection::SharedDtor() {
  if (this != internal_default_instance()) delete normal_to_surface_;
  if (this != internal_default_instance()) delete object_id_;
}

void LidarSensorView_Reflection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LidarSensorView_Reflection::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LidarSensorView_Reflection& LidarSensorView_Reflection::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsLidarSensorView_Reflection();
  return *internal_default_instance();
}

LidarSensorView_Reflection* LidarSensorView_Reflection::New(::google::protobuf::Arena* arena) const {
  LidarSensorView_Reflection* n = new LidarSensorView_Reflection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LidarSensorView_Reflection::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.LidarSensorView.Reflection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && normal_to_surface_ != NULL) {
    delete normal_to_surface_;
  }
  normal_to_surface_ = NULL;
  if (GetArenaNoVirtual() == NULL && object_id_ != NULL) {
    delete object_id_;
  }
  object_id_ = NULL;
  ::memset(&signal_strength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&doppler_shift_) -
      reinterpret_cast<char*>(&signal_strength_)) + sizeof(doppler_shift_));
  _internal_metadata_.Clear();
}

bool LidarSensorView_Reflection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.LidarSensorView.Reflection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double signal_strength = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &signal_strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_of_flight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_of_flight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double doppler_shift = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &doppler_shift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Vector3d normal_to_surface = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_normal_to_surface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Identifier object_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.LidarSensorView.Reflection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.LidarSensorView.Reflection)
  return false;
#undef DO_
}

void LidarSensorView_Reflection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.LidarSensorView.Reflection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double signal_strength = 1;
  if (this->signal_strength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->signal_strength(), output);
  }

  // double time_of_flight = 2;
  if (this->time_of_flight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time_of_flight(), output);
  }

  // double doppler_shift = 3;
  if (this->doppler_shift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->doppler_shift(), output);
  }

  // .osi3.Vector3d normal_to_surface = 5;
  if (this->has_normal_to_surface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->normal_to_surface_, output);
  }

  // .osi3.Identifier object_id = 6;
  if (this->has_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->object_id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.LidarSensorView.Reflection)
}

::google::protobuf::uint8* LidarSensorView_Reflection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.LidarSensorView.Reflection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double signal_strength = 1;
  if (this->signal_strength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->signal_strength(), target);
  }

  // double time_of_flight = 2;
  if (this->time_of_flight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time_of_flight(), target);
  }

  // double doppler_shift = 3;
  if (this->doppler_shift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->doppler_shift(), target);
  }

  // .osi3.Vector3d normal_to_surface = 5;
  if (this->has_normal_to_surface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->normal_to_surface_, deterministic, target);
  }

  // .osi3.Identifier object_id = 6;
  if (this->has_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->object_id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.LidarSensorView.Reflection)
  return target;
}

size_t LidarSensorView_Reflection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.LidarSensorView.Reflection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Vector3d normal_to_surface = 5;
  if (this->has_normal_to_surface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->normal_to_surface_);
  }

  // .osi3.Identifier object_id = 6;
  if (this->has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->object_id_);
  }

  // double signal_strength = 1;
  if (this->signal_strength() != 0) {
    total_size += 1 + 8;
  }

  // double time_of_flight = 2;
  if (this->time_of_flight() != 0) {
    total_size += 1 + 8;
  }

  // double doppler_shift = 3;
  if (this->doppler_shift() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LidarSensorView_Reflection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.LidarSensorView.Reflection)
  GOOGLE_DCHECK_NE(&from, this);
  const LidarSensorView_Reflection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LidarSensorView_Reflection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.LidarSensorView.Reflection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.LidarSensorView.Reflection)
    MergeFrom(*source);
  }
}

void LidarSensorView_Reflection::MergeFrom(const LidarSensorView_Reflection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.LidarSensorView.Reflection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_normal_to_surface()) {
    mutable_normal_to_surface()->::osi3::Vector3d::MergeFrom(from.normal_to_surface());
  }
  if (from.has_object_id()) {
    mutable_object_id()->::osi3::Identifier::MergeFrom(from.object_id());
  }
  if (from.signal_strength() != 0) {
    set_signal_strength(from.signal_strength());
  }
  if (from.time_of_flight() != 0) {
    set_time_of_flight(from.time_of_flight());
  }
  if (from.doppler_shift() != 0) {
    set_doppler_shift(from.doppler_shift());
  }
}

void LidarSensorView_Reflection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.LidarSensorView.Reflection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LidarSensorView_Reflection::CopyFrom(const LidarSensorView_Reflection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.LidarSensorView.Reflection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LidarSensorView_Reflection::IsInitialized() const {
  return true;
}

void LidarSensorView_Reflection::Swap(LidarSensorView_Reflection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LidarSensorView_Reflection::InternalSwap(LidarSensorView_Reflection* other) {
  using std::swap;
  swap(normal_to_surface_, other->normal_to_surface_);
  swap(object_id_, other->object_id_);
  swap(signal_strength_, other->signal_strength_);
  swap(time_of_flight_, other->time_of_flight_);
  swap(doppler_shift_, other->doppler_shift_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LidarSensorView_Reflection::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LidarSensorView::InitAsDefaultInstance() {
  ::osi3::_LidarSensorView_default_instance_._instance.get_mutable()->view_configuration_ = const_cast< ::osi3::LidarSensorViewConfiguration*>(
      ::osi3::LidarSensorViewConfiguration::internal_default_instance());
}
void LidarSensorView::clear_view_configuration() {
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LidarSensorView::kViewConfigurationFieldNumber;
const int LidarSensorView::kReflectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LidarSensorView::LidarSensorView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsLidarSensorView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.LidarSensorView)
}
LidarSensorView::LidarSensorView(const LidarSensorView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reflection_(from.reflection_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_view_configuration()) {
    view_configuration_ = new ::osi3::LidarSensorViewConfiguration(*from.view_configuration_);
  } else {
    view_configuration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.LidarSensorView)
}

void LidarSensorView::SharedCtor() {
  view_configuration_ = NULL;
  _cached_size_ = 0;
}

LidarSensorView::~LidarSensorView() {
  // @@protoc_insertion_point(destructor:osi3.LidarSensorView)
  SharedDtor();
}

void LidarSensorView::SharedDtor() {
  if (this != internal_default_instance()) delete view_configuration_;
}

void LidarSensorView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LidarSensorView::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LidarSensorView& LidarSensorView::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsLidarSensorView();
  return *internal_default_instance();
}

LidarSensorView* LidarSensorView::New(::google::protobuf::Arena* arena) const {
  LidarSensorView* n = new LidarSensorView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LidarSensorView::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.LidarSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reflection_.Clear();
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
  _internal_metadata_.Clear();
}

bool LidarSensorView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.LidarSensorView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.LidarSensorViewConfiguration view_configuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.LidarSensorView.Reflection reflection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_reflection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.LidarSensorView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.LidarSensorView)
  return false;
#undef DO_
}

void LidarSensorView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.LidarSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.LidarSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->view_configuration_, output);
  }

  // repeated .osi3.LidarSensorView.Reflection reflection = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reflection_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reflection(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.LidarSensorView)
}

::google::protobuf::uint8* LidarSensorView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.LidarSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.LidarSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->view_configuration_, deterministic, target);
  }

  // repeated .osi3.LidarSensorView.Reflection reflection = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reflection_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->reflection(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.LidarSensorView)
  return target;
}

size_t LidarSensorView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.LidarSensorView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.LidarSensorView.Reflection reflection = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->reflection_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reflection(static_cast<int>(i)));
    }
  }

  // .osi3.LidarSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_configuration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LidarSensorView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.LidarSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  const LidarSensorView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LidarSensorView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.LidarSensorView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.LidarSensorView)
    MergeFrom(*source);
  }
}

void LidarSensorView::MergeFrom(const LidarSensorView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.LidarSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reflection_.MergeFrom(from.reflection_);
  if (from.has_view_configuration()) {
    mutable_view_configuration()->::osi3::LidarSensorViewConfiguration::MergeFrom(from.view_configuration());
  }
}

void LidarSensorView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.LidarSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LidarSensorView::CopyFrom(const LidarSensorView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.LidarSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LidarSensorView::IsInitialized() const {
  return true;
}

void LidarSensorView::Swap(LidarSensorView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LidarSensorView::InternalSwap(LidarSensorView* other) {
  using std::swap;
  reflection_.InternalSwap(&other->reflection_);
  swap(view_configuration_, other->view_configuration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LidarSensorView::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CameraSensorView::InitAsDefaultInstance() {
  ::osi3::_CameraSensorView_default_instance_._instance.get_mutable()->view_configuration_ = const_cast< ::osi3::CameraSensorViewConfiguration*>(
      ::osi3::CameraSensorViewConfiguration::internal_default_instance());
}
void CameraSensorView::clear_view_configuration() {
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraSensorView::kViewConfigurationFieldNumber;
const int CameraSensorView::kImageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraSensorView::CameraSensorView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsCameraSensorView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.CameraSensorView)
}
CameraSensorView::CameraSensorView(const CameraSensorView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_data().size() > 0) {
    image_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  if (from.has_view_configuration()) {
    view_configuration_ = new ::osi3::CameraSensorViewConfiguration(*from.view_configuration_);
  } else {
    view_configuration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.CameraSensorView)
}

void CameraSensorView::SharedCtor() {
  image_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_configuration_ = NULL;
  _cached_size_ = 0;
}

CameraSensorView::~CameraSensorView() {
  // @@protoc_insertion_point(destructor:osi3.CameraSensorView)
  SharedDtor();
}

void CameraSensorView::SharedDtor() {
  image_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete view_configuration_;
}

void CameraSensorView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraSensorView::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CameraSensorView& CameraSensorView::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsCameraSensorView();
  return *internal_default_instance();
}

CameraSensorView* CameraSensorView::New(::google::protobuf::Arena* arena) const {
  CameraSensorView* n = new CameraSensorView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraSensorView::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.CameraSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
  _internal_metadata_.Clear();
}

bool CameraSensorView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.CameraSensorView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.CameraSensorViewConfiguration view_configuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.CameraSensorView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.CameraSensorView)
  return false;
#undef DO_
}

void CameraSensorView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.CameraSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.CameraSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->view_configuration_, output);
  }

  // bytes image_data = 2;
  if (this->image_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->image_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.CameraSensorView)
}

::google::protobuf::uint8* CameraSensorView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.CameraSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.CameraSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->view_configuration_, deterministic, target);
  }

  // bytes image_data = 2;
  if (this->image_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->image_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.CameraSensorView)
  return target;
}

size_t CameraSensorView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.CameraSensorView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes image_data = 2;
  if (this->image_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image_data());
  }

  // .osi3.CameraSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_configuration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraSensorView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.CameraSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraSensorView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraSensorView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.CameraSensorView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.CameraSensorView)
    MergeFrom(*source);
  }
}

void CameraSensorView::MergeFrom(const CameraSensorView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.CameraSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_data().size() > 0) {

    image_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  if (from.has_view_configuration()) {
    mutable_view_configuration()->::osi3::CameraSensorViewConfiguration::MergeFrom(from.view_configuration());
  }
}

void CameraSensorView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.CameraSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraSensorView::CopyFrom(const CameraSensorView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.CameraSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraSensorView::IsInitialized() const {
  return true;
}

void CameraSensorView::Swap(CameraSensorView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraSensorView::InternalSwap(CameraSensorView* other) {
  using std::swap;
  image_data_.Swap(&other->image_data_);
  swap(view_configuration_, other->view_configuration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraSensorView::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UltrasonicSensorView::InitAsDefaultInstance() {
  ::osi3::_UltrasonicSensorView_default_instance_._instance.get_mutable()->view_configuration_ = const_cast< ::osi3::UltrasonicSensorViewConfiguration*>(
      ::osi3::UltrasonicSensorViewConfiguration::internal_default_instance());
}
void UltrasonicSensorView::clear_view_configuration() {
  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UltrasonicSensorView::kViewConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UltrasonicSensorView::UltrasonicSensorView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorview_2eproto::InitDefaultsUltrasonicSensorView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.UltrasonicSensorView)
}
UltrasonicSensorView::UltrasonicSensorView(const UltrasonicSensorView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_view_configuration()) {
    view_configuration_ = new ::osi3::UltrasonicSensorViewConfiguration(*from.view_configuration_);
  } else {
    view_configuration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.UltrasonicSensorView)
}

void UltrasonicSensorView::SharedCtor() {
  view_configuration_ = NULL;
  _cached_size_ = 0;
}

UltrasonicSensorView::~UltrasonicSensorView() {
  // @@protoc_insertion_point(destructor:osi3.UltrasonicSensorView)
  SharedDtor();
}

void UltrasonicSensorView::SharedDtor() {
  if (this != internal_default_instance()) delete view_configuration_;
}

void UltrasonicSensorView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UltrasonicSensorView::descriptor() {
  ::protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UltrasonicSensorView& UltrasonicSensorView::default_instance() {
  ::protobuf_osi_5fsensorview_2eproto::InitDefaultsUltrasonicSensorView();
  return *internal_default_instance();
}

UltrasonicSensorView* UltrasonicSensorView::New(::google::protobuf::Arena* arena) const {
  UltrasonicSensorView* n = new UltrasonicSensorView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UltrasonicSensorView::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.UltrasonicSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && view_configuration_ != NULL) {
    delete view_configuration_;
  }
  view_configuration_ = NULL;
  _internal_metadata_.Clear();
}

bool UltrasonicSensorView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.UltrasonicSensorView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.UltrasonicSensorViewConfiguration view_configuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.UltrasonicSensorView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.UltrasonicSensorView)
  return false;
#undef DO_
}

void UltrasonicSensorView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.UltrasonicSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.UltrasonicSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->view_configuration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.UltrasonicSensorView)
}

::google::protobuf::uint8* UltrasonicSensorView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.UltrasonicSensorView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.UltrasonicSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->view_configuration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.UltrasonicSensorView)
  return target;
}

size_t UltrasonicSensorView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.UltrasonicSensorView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.UltrasonicSensorViewConfiguration view_configuration = 1;
  if (this->has_view_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->view_configuration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UltrasonicSensorView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.UltrasonicSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  const UltrasonicSensorView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UltrasonicSensorView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.UltrasonicSensorView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.UltrasonicSensorView)
    MergeFrom(*source);
  }
}

void UltrasonicSensorView::MergeFrom(const UltrasonicSensorView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.UltrasonicSensorView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_view_configuration()) {
    mutable_view_configuration()->::osi3::UltrasonicSensorViewConfiguration::MergeFrom(from.view_configuration());
  }
}

void UltrasonicSensorView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.UltrasonicSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UltrasonicSensorView::CopyFrom(const UltrasonicSensorView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.UltrasonicSensorView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UltrasonicSensorView::IsInitialized() const {
  return true;
}

void UltrasonicSensorView::Swap(UltrasonicSensorView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UltrasonicSensorView::InternalSwap(UltrasonicSensorView* other) {
  using std::swap;
  swap(view_configuration_, other->view_configuration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UltrasonicSensorView::GetMetadata() const {
  protobuf_osi_5fsensorview_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorview_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
