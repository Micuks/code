// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_hostvehicledata.proto

#include "osi_hostvehicledata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class HostVehicleDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostVehicleData>
      _instance;
} _HostVehicleData_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fhostvehicledata_2eproto {
void InitDefaultsHostVehicleDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsBaseMoving();
  {
    void* ptr = &::osi3::_HostVehicleData_default_instance_;
    new (ptr) ::osi3::HostVehicleData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::HostVehicleData::InitAsDefaultInstance();
}

void InitDefaultsHostVehicleData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostVehicleDataImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::HostVehicleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::HostVehicleData, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::HostVehicleData, location_rmse_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::HostVehicleData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_HostVehicleData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_hostvehicledata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031osi_hostvehicledata.proto\022\004osi3\032\020osi_c"
      "ommon.proto\"^\n\017HostVehicleData\022\"\n\010locati"
      "on\030\001 \001(\0132\020.osi3.BaseMoving\022\'\n\rlocation_r"
      "mse\030\002 \001(\0132\020.osi3.BaseMovingB\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 159);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_hostvehicledata.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fhostvehicledata_2eproto
namespace osi3 {

// ===================================================================

void HostVehicleData::InitAsDefaultInstance() {
  ::osi3::_HostVehicleData_default_instance_._instance.get_mutable()->location_ = const_cast< ::osi3::BaseMoving*>(
      ::osi3::BaseMoving::internal_default_instance());
  ::osi3::_HostVehicleData_default_instance_._instance.get_mutable()->location_rmse_ = const_cast< ::osi3::BaseMoving*>(
      ::osi3::BaseMoving::internal_default_instance());
}
void HostVehicleData::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
void HostVehicleData::clear_location_rmse() {
  if (GetArenaNoVirtual() == NULL && location_rmse_ != NULL) {
    delete location_rmse_;
  }
  location_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostVehicleData::kLocationFieldNumber;
const int HostVehicleData::kLocationRmseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostVehicleData::HostVehicleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fhostvehicledata_2eproto::InitDefaultsHostVehicleData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.HostVehicleData)
}
HostVehicleData::HostVehicleData(const HostVehicleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::osi3::BaseMoving(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_location_rmse()) {
    location_rmse_ = new ::osi3::BaseMoving(*from.location_rmse_);
  } else {
    location_rmse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.HostVehicleData)
}

void HostVehicleData::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_rmse_) -
      reinterpret_cast<char*>(&location_)) + sizeof(location_rmse_));
  _cached_size_ = 0;
}

HostVehicleData::~HostVehicleData() {
  // @@protoc_insertion_point(destructor:osi3.HostVehicleData)
  SharedDtor();
}

void HostVehicleData::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete location_rmse_;
}

void HostVehicleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostVehicleData::descriptor() {
  ::protobuf_osi_5fhostvehicledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fhostvehicledata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostVehicleData& HostVehicleData::default_instance() {
  ::protobuf_osi_5fhostvehicledata_2eproto::InitDefaultsHostVehicleData();
  return *internal_default_instance();
}

HostVehicleData* HostVehicleData::New(::google::protobuf::Arena* arena) const {
  HostVehicleData* n = new HostVehicleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostVehicleData::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.HostVehicleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_rmse_ != NULL) {
    delete location_rmse_;
  }
  location_rmse_ = NULL;
  _internal_metadata_.Clear();
}

bool HostVehicleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.HostVehicleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.BaseMoving location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseMoving location_rmse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.HostVehicleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.HostVehicleData)
  return false;
#undef DO_
}

void HostVehicleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.HostVehicleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.BaseMoving location = 1;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->location_, output);
  }

  // .osi3.BaseMoving location_rmse = 2;
  if (this->has_location_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->location_rmse_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.HostVehicleData)
}

::google::protobuf::uint8* HostVehicleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.HostVehicleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.BaseMoving location = 1;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->location_, deterministic, target);
  }

  // .osi3.BaseMoving location_rmse = 2;
  if (this->has_location_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->location_rmse_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.HostVehicleData)
  return target;
}

size_t HostVehicleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.HostVehicleData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.BaseMoving location = 1;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->location_);
  }

  // .osi3.BaseMoving location_rmse = 2;
  if (this->has_location_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->location_rmse_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostVehicleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.HostVehicleData)
  GOOGLE_DCHECK_NE(&from, this);
  const HostVehicleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostVehicleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.HostVehicleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.HostVehicleData)
    MergeFrom(*source);
  }
}

void HostVehicleData::MergeFrom(const HostVehicleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.HostVehicleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_location()) {
    mutable_location()->::osi3::BaseMoving::MergeFrom(from.location());
  }
  if (from.has_location_rmse()) {
    mutable_location_rmse()->::osi3::BaseMoving::MergeFrom(from.location_rmse());
  }
}

void HostVehicleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.HostVehicleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostVehicleData::CopyFrom(const HostVehicleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.HostVehicleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostVehicleData::IsInitialized() const {
  return true;
}

void HostVehicleData::Swap(HostVehicleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostVehicleData::InternalSwap(HostVehicleData* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(location_rmse_, other->location_rmse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostVehicleData::GetMetadata() const {
  protobuf_osi_5fhostvehicledata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fhostvehicledata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
