// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedlane.proto

#ifndef PROTOBUF_osi_5fdetectedlane_2eproto__INCLUDED
#define PROTOBUF_osi_5fdetectedlane_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "osi_lane.pb.h"
#include "osi_detectedobject.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_osi_5fdetectedlane_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDetectedLane_CandidateLaneImpl();
void InitDefaultsDetectedLane_CandidateLane();
void InitDefaultsDetectedLaneImpl();
void InitDefaultsDetectedLane();
void InitDefaultsDetectedLaneBoundary_CandidateLaneBoundaryImpl();
void InitDefaultsDetectedLaneBoundary_CandidateLaneBoundary();
void InitDefaultsDetectedLaneBoundaryImpl();
void InitDefaultsDetectedLaneBoundary();
inline void InitDefaults() {
  InitDefaultsDetectedLane_CandidateLane();
  InitDefaultsDetectedLane();
  InitDefaultsDetectedLaneBoundary_CandidateLaneBoundary();
  InitDefaultsDetectedLaneBoundary();
}
}  // namespace protobuf_osi_5fdetectedlane_2eproto
namespace osi3 {
class DetectedLane;
class DetectedLaneDefaultTypeInternal;
extern DetectedLaneDefaultTypeInternal _DetectedLane_default_instance_;
class DetectedLaneBoundary;
class DetectedLaneBoundaryDefaultTypeInternal;
extern DetectedLaneBoundaryDefaultTypeInternal _DetectedLaneBoundary_default_instance_;
class DetectedLaneBoundary_CandidateLaneBoundary;
class DetectedLaneBoundary_CandidateLaneBoundaryDefaultTypeInternal;
extern DetectedLaneBoundary_CandidateLaneBoundaryDefaultTypeInternal _DetectedLaneBoundary_CandidateLaneBoundary_default_instance_;
class DetectedLane_CandidateLane;
class DetectedLane_CandidateLaneDefaultTypeInternal;
extern DetectedLane_CandidateLaneDefaultTypeInternal _DetectedLane_CandidateLane_default_instance_;
}  // namespace osi3
namespace osi3 {

// ===================================================================

class DetectedLane_CandidateLane : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedLane.CandidateLane) */ {
 public:
  DetectedLane_CandidateLane();
  virtual ~DetectedLane_CandidateLane();

  DetectedLane_CandidateLane(const DetectedLane_CandidateLane& from);

  inline DetectedLane_CandidateLane& operator=(const DetectedLane_CandidateLane& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedLane_CandidateLane(DetectedLane_CandidateLane&& from) noexcept
    : DetectedLane_CandidateLane() {
    *this = ::std::move(from);
  }

  inline DetectedLane_CandidateLane& operator=(DetectedLane_CandidateLane&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedLane_CandidateLane& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedLane_CandidateLane* internal_default_instance() {
    return reinterpret_cast<const DetectedLane_CandidateLane*>(
               &_DetectedLane_CandidateLane_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DetectedLane_CandidateLane* other);
  friend void swap(DetectedLane_CandidateLane& a, DetectedLane_CandidateLane& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedLane_CandidateLane* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedLane_CandidateLane* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedLane_CandidateLane& from);
  void MergeFrom(const DetectedLane_CandidateLane& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedLane_CandidateLane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.Lane.Classification classification = 2;
  bool has_classification() const;
  void clear_classification();
  static const int kClassificationFieldNumber = 2;
  const ::osi3::Lane_Classification& classification() const;
  ::osi3::Lane_Classification* release_classification();
  ::osi3::Lane_Classification* mutable_classification();
  void set_allocated_classification(::osi3::Lane_Classification* classification);

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedLane.CandidateLane)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::Lane_Classification* classification_;
  double probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedlane_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLane_CandidateLaneImpl();
};
// -------------------------------------------------------------------

class DetectedLane : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedLane) */ {
 public:
  DetectedLane();
  virtual ~DetectedLane();

  DetectedLane(const DetectedLane& from);

  inline DetectedLane& operator=(const DetectedLane& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedLane(DetectedLane&& from) noexcept
    : DetectedLane() {
    *this = ::std::move(from);
  }

  inline DetectedLane& operator=(DetectedLane&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedLane& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedLane* internal_default_instance() {
    return reinterpret_cast<const DetectedLane*>(
               &_DetectedLane_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DetectedLane* other);
  friend void swap(DetectedLane& a, DetectedLane& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedLane* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedLane* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedLane& from);
  void MergeFrom(const DetectedLane& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedLane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedLane_CandidateLane CandidateLane;

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedLane.CandidateLane candidate = 2;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 2;
  const ::osi3::DetectedLane_CandidateLane& candidate(int index) const;
  ::osi3::DetectedLane_CandidateLane* mutable_candidate(int index);
  ::osi3::DetectedLane_CandidateLane* add_candidate();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLane_CandidateLane >*
      mutable_candidate();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLane_CandidateLane >&
      candidate() const;

  // .osi3.DetectedItemHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::osi3::DetectedItemHeader& header() const;
  ::osi3::DetectedItemHeader* release_header();
  ::osi3::DetectedItemHeader* mutable_header();
  void set_allocated_header(::osi3::DetectedItemHeader* header);

  // @@protoc_insertion_point(class_scope:osi3.DetectedLane)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLane_CandidateLane > candidate_;
  ::osi3::DetectedItemHeader* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedlane_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneImpl();
};
// -------------------------------------------------------------------

class DetectedLaneBoundary_CandidateLaneBoundary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedLaneBoundary.CandidateLaneBoundary) */ {
 public:
  DetectedLaneBoundary_CandidateLaneBoundary();
  virtual ~DetectedLaneBoundary_CandidateLaneBoundary();

  DetectedLaneBoundary_CandidateLaneBoundary(const DetectedLaneBoundary_CandidateLaneBoundary& from);

  inline DetectedLaneBoundary_CandidateLaneBoundary& operator=(const DetectedLaneBoundary_CandidateLaneBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedLaneBoundary_CandidateLaneBoundary(DetectedLaneBoundary_CandidateLaneBoundary&& from) noexcept
    : DetectedLaneBoundary_CandidateLaneBoundary() {
    *this = ::std::move(from);
  }

  inline DetectedLaneBoundary_CandidateLaneBoundary& operator=(DetectedLaneBoundary_CandidateLaneBoundary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedLaneBoundary_CandidateLaneBoundary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedLaneBoundary_CandidateLaneBoundary* internal_default_instance() {
    return reinterpret_cast<const DetectedLaneBoundary_CandidateLaneBoundary*>(
               &_DetectedLaneBoundary_CandidateLaneBoundary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DetectedLaneBoundary_CandidateLaneBoundary* other);
  friend void swap(DetectedLaneBoundary_CandidateLaneBoundary& a, DetectedLaneBoundary_CandidateLaneBoundary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedLaneBoundary_CandidateLaneBoundary* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedLaneBoundary_CandidateLaneBoundary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedLaneBoundary_CandidateLaneBoundary& from);
  void MergeFrom(const DetectedLaneBoundary_CandidateLaneBoundary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedLaneBoundary_CandidateLaneBoundary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.LaneBoundary.Classification classification = 2;
  bool has_classification() const;
  void clear_classification();
  static const int kClassificationFieldNumber = 2;
  const ::osi3::LaneBoundary_Classification& classification() const;
  ::osi3::LaneBoundary_Classification* release_classification();
  ::osi3::LaneBoundary_Classification* mutable_classification();
  void set_allocated_classification(::osi3::LaneBoundary_Classification* classification);

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::LaneBoundary_Classification* classification_;
  double probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedlane_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundary_CandidateLaneBoundaryImpl();
};
// -------------------------------------------------------------------

class DetectedLaneBoundary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedLaneBoundary) */ {
 public:
  DetectedLaneBoundary();
  virtual ~DetectedLaneBoundary();

  DetectedLaneBoundary(const DetectedLaneBoundary& from);

  inline DetectedLaneBoundary& operator=(const DetectedLaneBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedLaneBoundary(DetectedLaneBoundary&& from) noexcept
    : DetectedLaneBoundary() {
    *this = ::std::move(from);
  }

  inline DetectedLaneBoundary& operator=(DetectedLaneBoundary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedLaneBoundary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedLaneBoundary* internal_default_instance() {
    return reinterpret_cast<const DetectedLaneBoundary*>(
               &_DetectedLaneBoundary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DetectedLaneBoundary* other);
  friend void swap(DetectedLaneBoundary& a, DetectedLaneBoundary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedLaneBoundary* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedLaneBoundary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedLaneBoundary& from);
  void MergeFrom(const DetectedLaneBoundary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedLaneBoundary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedLaneBoundary_CandidateLaneBoundary CandidateLaneBoundary;

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedLaneBoundary.CandidateLaneBoundary candidate = 2;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 2;
  const ::osi3::DetectedLaneBoundary_CandidateLaneBoundary& candidate(int index) const;
  ::osi3::DetectedLaneBoundary_CandidateLaneBoundary* mutable_candidate(int index);
  ::osi3::DetectedLaneBoundary_CandidateLaneBoundary* add_candidate();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLaneBoundary_CandidateLaneBoundary >*
      mutable_candidate();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLaneBoundary_CandidateLaneBoundary >&
      candidate() const;

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line = 3;
  int boundary_line_size() const;
  void clear_boundary_line();
  static const int kBoundaryLineFieldNumber = 3;
  const ::osi3::LaneBoundary_BoundaryPoint& boundary_line(int index) const;
  ::osi3::LaneBoundary_BoundaryPoint* mutable_boundary_line(int index);
  ::osi3::LaneBoundary_BoundaryPoint* add_boundary_line();
  ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >*
      mutable_boundary_line();
  const ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >&
      boundary_line() const;

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line_rmse = 4;
  int boundary_line_rmse_size() const;
  void clear_boundary_line_rmse();
  static const int kBoundaryLineRmseFieldNumber = 4;
  const ::osi3::LaneBoundary_BoundaryPoint& boundary_line_rmse(int index) const;
  ::osi3::LaneBoundary_BoundaryPoint* mutable_boundary_line_rmse(int index);
  ::osi3::LaneBoundary_BoundaryPoint* add_boundary_line_rmse();
  ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >*
      mutable_boundary_line_rmse();
  const ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >&
      boundary_line_rmse() const;

  // repeated double boundary_line_confidences = 5;
  int boundary_line_confidences_size() const;
  void clear_boundary_line_confidences();
  static const int kBoundaryLineConfidencesFieldNumber = 5;
  double boundary_line_confidences(int index) const;
  void set_boundary_line_confidences(int index, double value);
  void add_boundary_line_confidences(double value);
  const ::google::protobuf::RepeatedField< double >&
      boundary_line_confidences() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_boundary_line_confidences();

  // .osi3.DetectedItemHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::osi3::DetectedItemHeader& header() const;
  ::osi3::DetectedItemHeader* release_header();
  ::osi3::DetectedItemHeader* mutable_header();
  void set_allocated_header(::osi3::DetectedItemHeader* header);

  // @@protoc_insertion_point(class_scope:osi3.DetectedLaneBoundary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLaneBoundary_CandidateLaneBoundary > candidate_;
  ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint > boundary_line_;
  ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint > boundary_line_rmse_;
  ::google::protobuf::RepeatedField< double > boundary_line_confidences_;
  mutable int _boundary_line_confidences_cached_byte_size_;
  ::osi3::DetectedItemHeader* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedlane_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundaryImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectedLane_CandidateLane

// double probability = 1;
inline void DetectedLane_CandidateLane::clear_probability() {
  probability_ = 0;
}
inline double DetectedLane_CandidateLane::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLane.CandidateLane.probability)
  return probability_;
}
inline void DetectedLane_CandidateLane::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedLane.CandidateLane.probability)
}

// .osi3.Lane.Classification classification = 2;
inline bool DetectedLane_CandidateLane::has_classification() const {
  return this != internal_default_instance() && classification_ != NULL;
}
inline const ::osi3::Lane_Classification& DetectedLane_CandidateLane::classification() const {
  const ::osi3::Lane_Classification* p = classification_;
  // @@protoc_insertion_point(field_get:osi3.DetectedLane.CandidateLane.classification)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::Lane_Classification*>(
      &::osi3::_Lane_Classification_default_instance_);
}
inline ::osi3::Lane_Classification* DetectedLane_CandidateLane::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedLane.CandidateLane.classification)
  
  ::osi3::Lane_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
inline ::osi3::Lane_Classification* DetectedLane_CandidateLane::mutable_classification() {
  
  if (classification_ == NULL) {
    classification_ = new ::osi3::Lane_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLane.CandidateLane.classification)
  return classification_;
}
inline void DetectedLane_CandidateLane::set_allocated_classification(::osi3::Lane_Classification* classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(classification_);
  }
  if (classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification, submessage_arena);
    }
    
  } else {
    
  }
  classification_ = classification;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedLane.CandidateLane.classification)
}

// -------------------------------------------------------------------

// DetectedLane

// .osi3.DetectedItemHeader header = 1;
inline bool DetectedLane::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::osi3::DetectedItemHeader& DetectedLane::header() const {
  const ::osi3::DetectedItemHeader* p = header_;
  // @@protoc_insertion_point(field_get:osi3.DetectedLane.header)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::DetectedItemHeader*>(
      &::osi3::_DetectedItemHeader_default_instance_);
}
inline ::osi3::DetectedItemHeader* DetectedLane::release_header() {
  // @@protoc_insertion_point(field_release:osi3.DetectedLane.header)
  
  ::osi3::DetectedItemHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::osi3::DetectedItemHeader* DetectedLane::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::osi3::DetectedItemHeader;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLane.header)
  return header_;
}
inline void DetectedLane::set_allocated_header(::osi3::DetectedItemHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedLane.header)
}

// repeated .osi3.DetectedLane.CandidateLane candidate = 2;
inline int DetectedLane::candidate_size() const {
  return candidate_.size();
}
inline void DetectedLane::clear_candidate() {
  candidate_.Clear();
}
inline const ::osi3::DetectedLane_CandidateLane& DetectedLane::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLane.candidate)
  return candidate_.Get(index);
}
inline ::osi3::DetectedLane_CandidateLane* DetectedLane::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLane.candidate)
  return candidate_.Mutable(index);
}
inline ::osi3::DetectedLane_CandidateLane* DetectedLane::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedLane.candidate)
  return candidate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLane_CandidateLane >*
DetectedLane::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedLane.candidate)
  return &candidate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLane_CandidateLane >&
DetectedLane::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedLane.candidate)
  return candidate_;
}

// -------------------------------------------------------------------

// DetectedLaneBoundary_CandidateLaneBoundary

// double probability = 1;
inline void DetectedLaneBoundary_CandidateLaneBoundary::clear_probability() {
  probability_ = 0;
}
inline double DetectedLaneBoundary_CandidateLaneBoundary::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.CandidateLaneBoundary.probability)
  return probability_;
}
inline void DetectedLaneBoundary_CandidateLaneBoundary::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedLaneBoundary.CandidateLaneBoundary.probability)
}

// .osi3.LaneBoundary.Classification classification = 2;
inline bool DetectedLaneBoundary_CandidateLaneBoundary::has_classification() const {
  return this != internal_default_instance() && classification_ != NULL;
}
inline const ::osi3::LaneBoundary_Classification& DetectedLaneBoundary_CandidateLaneBoundary::classification() const {
  const ::osi3::LaneBoundary_Classification* p = classification_;
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.CandidateLaneBoundary.classification)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::LaneBoundary_Classification*>(
      &::osi3::_LaneBoundary_Classification_default_instance_);
}
inline ::osi3::LaneBoundary_Classification* DetectedLaneBoundary_CandidateLaneBoundary::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedLaneBoundary.CandidateLaneBoundary.classification)
  
  ::osi3::LaneBoundary_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
inline ::osi3::LaneBoundary_Classification* DetectedLaneBoundary_CandidateLaneBoundary::mutable_classification() {
  
  if (classification_ == NULL) {
    classification_ = new ::osi3::LaneBoundary_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLaneBoundary.CandidateLaneBoundary.classification)
  return classification_;
}
inline void DetectedLaneBoundary_CandidateLaneBoundary::set_allocated_classification(::osi3::LaneBoundary_Classification* classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(classification_);
  }
  if (classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification, submessage_arena);
    }
    
  } else {
    
  }
  classification_ = classification;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedLaneBoundary.CandidateLaneBoundary.classification)
}

// -------------------------------------------------------------------

// DetectedLaneBoundary

// .osi3.DetectedItemHeader header = 1;
inline bool DetectedLaneBoundary::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::osi3::DetectedItemHeader& DetectedLaneBoundary::header() const {
  const ::osi3::DetectedItemHeader* p = header_;
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.header)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::DetectedItemHeader*>(
      &::osi3::_DetectedItemHeader_default_instance_);
}
inline ::osi3::DetectedItemHeader* DetectedLaneBoundary::release_header() {
  // @@protoc_insertion_point(field_release:osi3.DetectedLaneBoundary.header)
  
  ::osi3::DetectedItemHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::osi3::DetectedItemHeader* DetectedLaneBoundary::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::osi3::DetectedItemHeader;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLaneBoundary.header)
  return header_;
}
inline void DetectedLaneBoundary::set_allocated_header(::osi3::DetectedItemHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedLaneBoundary.header)
}

// repeated .osi3.DetectedLaneBoundary.CandidateLaneBoundary candidate = 2;
inline int DetectedLaneBoundary::candidate_size() const {
  return candidate_.size();
}
inline void DetectedLaneBoundary::clear_candidate() {
  candidate_.Clear();
}
inline const ::osi3::DetectedLaneBoundary_CandidateLaneBoundary& DetectedLaneBoundary::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.candidate)
  return candidate_.Get(index);
}
inline ::osi3::DetectedLaneBoundary_CandidateLaneBoundary* DetectedLaneBoundary::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLaneBoundary.candidate)
  return candidate_.Mutable(index);
}
inline ::osi3::DetectedLaneBoundary_CandidateLaneBoundary* DetectedLaneBoundary::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedLaneBoundary.candidate)
  return candidate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLaneBoundary_CandidateLaneBoundary >*
DetectedLaneBoundary::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedLaneBoundary.candidate)
  return &candidate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedLaneBoundary_CandidateLaneBoundary >&
DetectedLaneBoundary::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedLaneBoundary.candidate)
  return candidate_;
}

// repeated .osi3.LaneBoundary.BoundaryPoint boundary_line = 3;
inline int DetectedLaneBoundary::boundary_line_size() const {
  return boundary_line_.size();
}
inline const ::osi3::LaneBoundary_BoundaryPoint& DetectedLaneBoundary::boundary_line(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.boundary_line)
  return boundary_line_.Get(index);
}
inline ::osi3::LaneBoundary_BoundaryPoint* DetectedLaneBoundary::mutable_boundary_line(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLaneBoundary.boundary_line)
  return boundary_line_.Mutable(index);
}
inline ::osi3::LaneBoundary_BoundaryPoint* DetectedLaneBoundary::add_boundary_line() {
  // @@protoc_insertion_point(field_add:osi3.DetectedLaneBoundary.boundary_line)
  return boundary_line_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >*
DetectedLaneBoundary::mutable_boundary_line() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedLaneBoundary.boundary_line)
  return &boundary_line_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >&
DetectedLaneBoundary::boundary_line() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedLaneBoundary.boundary_line)
  return boundary_line_;
}

// repeated .osi3.LaneBoundary.BoundaryPoint boundary_line_rmse = 4;
inline int DetectedLaneBoundary::boundary_line_rmse_size() const {
  return boundary_line_rmse_.size();
}
inline const ::osi3::LaneBoundary_BoundaryPoint& DetectedLaneBoundary::boundary_line_rmse(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.boundary_line_rmse)
  return boundary_line_rmse_.Get(index);
}
inline ::osi3::LaneBoundary_BoundaryPoint* DetectedLaneBoundary::mutable_boundary_line_rmse(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedLaneBoundary.boundary_line_rmse)
  return boundary_line_rmse_.Mutable(index);
}
inline ::osi3::LaneBoundary_BoundaryPoint* DetectedLaneBoundary::add_boundary_line_rmse() {
  // @@protoc_insertion_point(field_add:osi3.DetectedLaneBoundary.boundary_line_rmse)
  return boundary_line_rmse_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >*
DetectedLaneBoundary::mutable_boundary_line_rmse() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedLaneBoundary.boundary_line_rmse)
  return &boundary_line_rmse_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::LaneBoundary_BoundaryPoint >&
DetectedLaneBoundary::boundary_line_rmse() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedLaneBoundary.boundary_line_rmse)
  return boundary_line_rmse_;
}

// repeated double boundary_line_confidences = 5;
inline int DetectedLaneBoundary::boundary_line_confidences_size() const {
  return boundary_line_confidences_.size();
}
inline void DetectedLaneBoundary::clear_boundary_line_confidences() {
  boundary_line_confidences_.Clear();
}
inline double DetectedLaneBoundary::boundary_line_confidences(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedLaneBoundary.boundary_line_confidences)
  return boundary_line_confidences_.Get(index);
}
inline void DetectedLaneBoundary::set_boundary_line_confidences(int index, double value) {
  boundary_line_confidences_.Set(index, value);
  // @@protoc_insertion_point(field_set:osi3.DetectedLaneBoundary.boundary_line_confidences)
}
inline void DetectedLaneBoundary::add_boundary_line_confidences(double value) {
  boundary_line_confidences_.Add(value);
  // @@protoc_insertion_point(field_add:osi3.DetectedLaneBoundary.boundary_line_confidences)
}
inline const ::google::protobuf::RepeatedField< double >&
DetectedLaneBoundary::boundary_line_confidences() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedLaneBoundary.boundary_line_confidences)
  return boundary_line_confidences_;
}
inline ::google::protobuf::RepeatedField< double >*
DetectedLaneBoundary::mutable_boundary_line_confidences() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedLaneBoundary.boundary_line_confidences)
  return &boundary_line_confidences_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fdetectedlane_2eproto__INCLUDED
