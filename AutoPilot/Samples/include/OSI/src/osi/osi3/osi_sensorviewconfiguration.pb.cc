// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_sensorviewconfiguration.proto

#include "osi_sensorviewconfiguration.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class SensorViewConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorViewConfiguration>
      _instance;
} _SensorViewConfiguration_default_instance_;
class GenericSensorViewConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericSensorViewConfiguration>
      _instance;
} _GenericSensorViewConfiguration_default_instance_;
class RadarSensorViewConfiguration_AntennaDiagramEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadarSensorViewConfiguration_AntennaDiagramEntry>
      _instance;
} _RadarSensorViewConfiguration_AntennaDiagramEntry_default_instance_;
class RadarSensorViewConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadarSensorViewConfiguration>
      _instance;
} _RadarSensorViewConfiguration_default_instance_;
class LidarSensorViewConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LidarSensorViewConfiguration>
      _instance;
} _LidarSensorViewConfiguration_default_instance_;
class CameraSensorViewConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CameraSensorViewConfiguration>
      _instance;
} _CameraSensorViewConfiguration_default_instance_;
class UltrasonicSensorViewConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UltrasonicSensorViewConfiguration>
      _instance;
} _UltrasonicSensorViewConfiguration_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fsensorviewconfiguration_2eproto {
void InitDefaultsSensorViewConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fversion_2eproto::InitDefaultsInterfaceVersion();
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  protobuf_osi_5fcommon_2eproto::InitDefaultsTimestamp();
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsGenericSensorViewConfiguration();
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration();
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsLidarSensorViewConfiguration();
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsCameraSensorViewConfiguration();
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsUltrasonicSensorViewConfiguration();
  {
    void* ptr = &::osi3::_SensorViewConfiguration_default_instance_;
    new (ptr) ::osi3::SensorViewConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::SensorViewConfiguration::InitAsDefaultInstance();
}

void InitDefaultsSensorViewConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSensorViewConfigurationImpl);
}

void InitDefaultsGenericSensorViewConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  {
    void* ptr = &::osi3::_GenericSensorViewConfiguration_default_instance_;
    new (ptr) ::osi3::GenericSensorViewConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::GenericSensorViewConfiguration::InitAsDefaultInstance();
}

void InitDefaultsGenericSensorViewConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenericSensorViewConfigurationImpl);
}

void InitDefaultsRadarSensorViewConfiguration_AntennaDiagramEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_RadarSensorViewConfiguration_AntennaDiagramEntry_default_instance_;
    new (ptr) ::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::InitAsDefaultInstance();
}

void InitDefaultsRadarSensorViewConfiguration_AntennaDiagramEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRadarSensorViewConfiguration_AntennaDiagramEntryImpl);
}

void InitDefaultsRadarSensorViewConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration_AntennaDiagramEntry();
  {
    void* ptr = &::osi3::_RadarSensorViewConfiguration_default_instance_;
    new (ptr) ::osi3::RadarSensorViewConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::RadarSensorViewConfiguration::InitAsDefaultInstance();
}

void InitDefaultsRadarSensorViewConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRadarSensorViewConfigurationImpl);
}

void InitDefaultsLidarSensorViewConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  protobuf_osi_5fcommon_2eproto::InitDefaultsVector3d();
  {
    void* ptr = &::osi3::_LidarSensorViewConfiguration_default_instance_;
    new (ptr) ::osi3::LidarSensorViewConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::LidarSensorViewConfiguration::InitAsDefaultInstance();
}

void InitDefaultsLidarSensorViewConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLidarSensorViewConfigurationImpl);
}

void InitDefaultsCameraSensorViewConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  {
    void* ptr = &::osi3::_CameraSensorViewConfiguration_default_instance_;
    new (ptr) ::osi3::CameraSensorViewConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::CameraSensorViewConfiguration::InitAsDefaultInstance();
}

void InitDefaultsCameraSensorViewConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCameraSensorViewConfigurationImpl);
}

void InitDefaultsUltrasonicSensorViewConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5fcommon_2eproto::InitDefaultsMountingPosition();
  {
    void* ptr = &::osi3::_UltrasonicSensorViewConfiguration_default_instance_;
    new (ptr) ::osi3::UltrasonicSensorViewConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::UltrasonicSensorViewConfiguration::InitAsDefaultInstance();
}

void InitDefaultsUltrasonicSensorViewConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUltrasonicSensorViewConfigurationImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, field_of_view_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, field_of_view_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, update_cycle_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, update_cycle_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, simulation_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, generic_sensor_view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, radar_sensor_view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, lidar_sensor_view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, camera_sensor_view_configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::SensorViewConfiguration, ultrasonic_sensor_view_configuration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorViewConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorViewConfiguration, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorViewConfiguration, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorViewConfiguration, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorViewConfiguration, field_of_view_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::GenericSensorViewConfiguration, field_of_view_vertical_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry, horizontal_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry, vertical_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, field_of_view_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, field_of_view_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, number_of_rays_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, number_of_rays_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, max_number_of_interactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, emitter_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, tx_antenna_diagram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::RadarSensorViewConfiguration, rx_antenna_diagram_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, field_of_view_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, field_of_view_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, number_of_rays_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, number_of_rays_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, max_number_of_interactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, emitter_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, num_of_pixels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, directions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::LidarSensorViewConfiguration, timings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, field_of_view_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, field_of_view_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, number_of_pixels_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, number_of_pixels_vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::CameraSensorViewConfiguration, channel_format_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorViewConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorViewConfiguration, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorViewConfiguration, mounting_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorViewConfiguration, mounting_position_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorViewConfiguration, field_of_view_horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::UltrasonicSensorViewConfiguration, field_of_view_vertical_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::SensorViewConfiguration)},
  { 20, -1, sizeof(::osi3::GenericSensorViewConfiguration)},
  { 30, -1, sizeof(::osi3::RadarSensorViewConfiguration_AntennaDiagramEntry)},
  { 38, -1, sizeof(::osi3::RadarSensorViewConfiguration)},
  { 54, -1, sizeof(::osi3::LidarSensorViewConfiguration)},
  { 71, -1, sizeof(::osi3::CameraSensorViewConfiguration)},
  { 84, -1, sizeof(::osi3::UltrasonicSensorViewConfiguration)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_SensorViewConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_GenericSensorViewConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_RadarSensorViewConfiguration_AntennaDiagramEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_RadarSensorViewConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_LidarSensorViewConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_CameraSensorViewConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_UltrasonicSensorViewConfiguration_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_sensorviewconfiguration.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!osi_sensorviewconfiguration.proto\022\004osi"
      "3\032\020osi_common.proto\032\021osi_version.proto\"\303"
      "\006\n\027SensorViewConfiguration\022\'\n\007version\030\001 "
      "\001(\0132\026.osi3.InterfaceVersion\022#\n\tsensor_id"
      "\030\002 \001(\0132\020.osi3.Identifier\0221\n\021mounting_pos"
      "ition\030\003 \001(\0132\026.osi3.MountingPosition\0226\n\026m"
      "ounting_position_rmse\030\004 \001(\0132\026.osi3.Mount"
      "ingPosition\022 \n\030field_of_view_horizontal\030"
      "\005 \001(\001\022\036\n\026field_of_view_vertical\030\006 \001(\001\022\r\n"
      "\005range\030\007 \001(\001\022*\n\021update_cycle_time\030\010 \001(\0132"
      "\017.osi3.Timestamp\022,\n\023update_cycle_offset\030"
      "\t \001(\0132\017.osi3.Timestamp\022.\n\025simulation_sta"
      "rt_time\030\n \001(\0132\017.osi3.Timestamp\022P\n!generi"
      "c_sensor_view_configuration\030\350\007 \003(\0132$.osi"
      "3.GenericSensorViewConfiguration\022L\n\037rada"
      "r_sensor_view_configuration\030\351\007 \003(\0132\".osi"
      "3.RadarSensorViewConfiguration\022L\n\037lidar_"
      "sensor_view_configuration\030\352\007 \003(\0132\".osi3."
      "LidarSensorViewConfiguration\022N\n camera_s"
      "ensor_view_configuration\030\353\007 \003(\0132#.osi3.C"
      "ameraSensorViewConfiguration\022V\n$ultrason"
      "ic_sensor_view_configuration\030\354\007 \003(\0132\'.os"
      "i3.UltrasonicSensorViewConfiguration\"\362\001\n"
      "\036GenericSensorViewConfiguration\022#\n\tsenso"
      "r_id\030\001 \001(\0132\020.osi3.Identifier\0221\n\021mounting"
      "_position\030\002 \001(\0132\026.osi3.MountingPosition\022"
      "6\n\026mounting_position_rmse\030\003 \001(\0132\026.osi3.M"
      "ountingPosition\022 \n\030field_of_view_horizon"
      "tal\030\004 \001(\001\022\036\n\026field_of_view_vertical\030\005 \001("
      "\001\"\366\004\n\034RadarSensorViewConfiguration\022#\n\tse"
      "nsor_id\030\001 \001(\0132\020.osi3.Identifier\0221\n\021mount"
      "ing_position\030\002 \001(\0132\026.osi3.MountingPositi"
      "on\0226\n\026mounting_position_rmse\030\003 \001(\0132\026.osi"
      "3.MountingPosition\022 \n\030field_of_view_hori"
      "zontal\030\004 \001(\001\022\036\n\026field_of_view_vertical\030\005"
      " \001(\001\022!\n\031number_of_rays_horizontal\030\006 \001(\r\022"
      "\037\n\027number_of_rays_vertical\030\007 \001(\r\022\"\n\032max_"
      "number_of_interactions\030\010 \001(\r\022\031\n\021emitter_"
      "frequency\030\t \001(\001\022R\n\022tx_antenna_diagram\030\n "
      "\003(\01326.osi3.RadarSensorViewConfiguration."
      "AntennaDiagramEntry\022R\n\022rx_antenna_diagra"
      "m\030\013 \003(\01326.osi3.RadarSensorViewConfigurat"
      "ion.AntennaDiagramEntry\032Y\n\023AntennaDiagra"
      "mEntry\022\030\n\020horizontal_angle\030\001 \001(\001\022\026\n\016vert"
      "ical_angle\030\002 \001(\001\022\020\n\010response\030\003 \001(\001\"\277\003\n\034L"
      "idarSensorViewConfiguration\022#\n\tsensor_id"
      "\030\001 \001(\0132\020.osi3.Identifier\0221\n\021mounting_pos"
      "ition\030\002 \001(\0132\026.osi3.MountingPosition\0226\n\026m"
      "ounting_position_rmse\030\003 \001(\0132\026.osi3.Mount"
      "ingPosition\022 \n\030field_of_view_horizontal\030"
      "\004 \001(\001\022\036\n\026field_of_view_vertical\030\005 \001(\001\022!\n"
      "\031number_of_rays_horizontal\030\006 \001(\r\022\037\n\027numb"
      "er_of_rays_vertical\030\007 \001(\r\022\"\n\032max_number_"
      "of_interactions\030\010 \001(\r\022\031\n\021emitter_frequen"
      "cy\030\t \001(\001\022\025\n\rnum_of_pixels\030\n \001(\r\022\"\n\ndirec"
      "tions\030\013 \003(\0132\016.osi3.Vector3d\022\017\n\007timings\030\014"
      " \003(\r\"\351\006\n\035CameraSensorViewConfiguration\022#"
      "\n\tsensor_id\030\001 \001(\0132\020.osi3.Identifier\0221\n\021m"
      "ounting_position\030\002 \001(\0132\026.osi3.MountingPo"
      "sition\0226\n\026mounting_position_rmse\030\003 \001(\0132\026"
      ".osi3.MountingPosition\022 \n\030field_of_view_"
      "horizontal\030\004 \001(\001\022\036\n\026field_of_view_vertic"
      "al\030\005 \001(\001\022#\n\033number_of_pixels_horizontal\030"
      "\006 \001(\r\022!\n\031number_of_pixels_vertical\030\007 \001(\r"
      "\022I\n\016channel_format\030\010 \003(\01621.osi3.CameraSe"
      "nsorViewConfiguration.ChannelFormat\"\342\003\n\r"
      "ChannelFormat\022\032\n\026CHANNEL_FORMAT_UNKNOWN\020"
      "\000\022\030\n\024CHANNEL_FORMAT_OTHER\020\001\022\036\n\032CHANNEL_F"
      "ORMAT_MONO_U8_LIN\020\002\022\037\n\033CHANNEL_FORMAT_MO"
      "NO_U16_LIN\020\003\022\037\n\033CHANNEL_FORMAT_MONO_U32_"
      "LIN\020\004\022\037\n\033CHANNEL_FORMAT_MONO_F32_LIN\020\005\022\035"
      "\n\031CHANNEL_FORMAT_RGB_U8_LIN\020\006\022\036\n\032CHANNEL"
      "_FORMAT_RGB_U16_LIN\020\007\022\036\n\032CHANNEL_FORMAT_"
      "RGB_U32_LIN\020\010\022\036\n\032CHANNEL_FORMAT_RGB_F32_"
      "LIN\020\t\022$\n CHANNEL_FORMAT_BAYER_BGGR_U8_LI"
      "N\020\n\022%\n!CHANNEL_FORMAT_BAYER_BGGR_U16_LIN"
      "\020\013\022%\n!CHANNEL_FORMAT_BAYER_BGGR_U32_LIN\020"
      "\014\022%\n!CHANNEL_FORMAT_BAYER_BGGR_F32_LIN\020\r"
      "\"\365\001\n!UltrasonicSensorViewConfiguration\022#"
      "\n\tsensor_id\030\001 \001(\0132\020.osi3.Identifier\0221\n\021m"
      "ounting_position\030\002 \001(\0132\026.osi3.MountingPo"
      "sition\0226\n\026mounting_position_rmse\030\003 \001(\0132\026"
      ".osi3.MountingPosition\022 \n\030field_of_view_"
      "horizontal\030\004 \001(\001\022\036\n\026field_of_view_vertic"
      "al\030\005 \001(\001B\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_sensorviewconfiguration.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5fcommon_2eproto::AddDescriptors();
  ::protobuf_osi_5fversion_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fsensorviewconfiguration_2eproto
namespace osi3 {
const ::google::protobuf::EnumDescriptor* CameraSensorViewConfiguration_ChannelFormat_descriptor() {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_enum_descriptors[0];
}
bool CameraSensorViewConfiguration_ChannelFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_UNKNOWN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_OTHER;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_MONO_U8_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_MONO_U16_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_MONO_U32_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_MONO_F32_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_RGB_U8_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_RGB_U16_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_RGB_U32_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_RGB_F32_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_BAYER_BGGR_U8_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_BAYER_BGGR_U16_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_BAYER_BGGR_U32_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::CHANNEL_FORMAT_BAYER_BGGR_F32_LIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::ChannelFormat_MIN;
const CameraSensorViewConfiguration_ChannelFormat CameraSensorViewConfiguration::ChannelFormat_MAX;
const int CameraSensorViewConfiguration::ChannelFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SensorViewConfiguration::InitAsDefaultInstance() {
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->version_ = const_cast< ::osi3::InterfaceVersion*>(
      ::osi3::InterfaceVersion::internal_default_instance());
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->update_cycle_time_ = const_cast< ::osi3::Timestamp*>(
      ::osi3::Timestamp::internal_default_instance());
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->update_cycle_offset_ = const_cast< ::osi3::Timestamp*>(
      ::osi3::Timestamp::internal_default_instance());
  ::osi3::_SensorViewConfiguration_default_instance_._instance.get_mutable()->simulation_start_time_ = const_cast< ::osi3::Timestamp*>(
      ::osi3::Timestamp::internal_default_instance());
}
void SensorViewConfiguration::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
void SensorViewConfiguration::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void SensorViewConfiguration::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void SensorViewConfiguration::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
void SensorViewConfiguration::clear_update_cycle_time() {
  if (GetArenaNoVirtual() == NULL && update_cycle_time_ != NULL) {
    delete update_cycle_time_;
  }
  update_cycle_time_ = NULL;
}
void SensorViewConfiguration::clear_update_cycle_offset() {
  if (GetArenaNoVirtual() == NULL && update_cycle_offset_ != NULL) {
    delete update_cycle_offset_;
  }
  update_cycle_offset_ = NULL;
}
void SensorViewConfiguration::clear_simulation_start_time() {
  if (GetArenaNoVirtual() == NULL && simulation_start_time_ != NULL) {
    delete simulation_start_time_;
  }
  simulation_start_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorViewConfiguration::kVersionFieldNumber;
const int SensorViewConfiguration::kSensorIdFieldNumber;
const int SensorViewConfiguration::kMountingPositionFieldNumber;
const int SensorViewConfiguration::kMountingPositionRmseFieldNumber;
const int SensorViewConfiguration::kFieldOfViewHorizontalFieldNumber;
const int SensorViewConfiguration::kFieldOfViewVerticalFieldNumber;
const int SensorViewConfiguration::kRangeFieldNumber;
const int SensorViewConfiguration::kUpdateCycleTimeFieldNumber;
const int SensorViewConfiguration::kUpdateCycleOffsetFieldNumber;
const int SensorViewConfiguration::kSimulationStartTimeFieldNumber;
const int SensorViewConfiguration::kGenericSensorViewConfigurationFieldNumber;
const int SensorViewConfiguration::kRadarSensorViewConfigurationFieldNumber;
const int SensorViewConfiguration::kLidarSensorViewConfigurationFieldNumber;
const int SensorViewConfiguration::kCameraSensorViewConfigurationFieldNumber;
const int SensorViewConfiguration::kUltrasonicSensorViewConfigurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorViewConfiguration::SensorViewConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsSensorViewConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.SensorViewConfiguration)
}
SensorViewConfiguration::SensorViewConfiguration(const SensorViewConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      generic_sensor_view_configuration_(from.generic_sensor_view_configuration_),
      radar_sensor_view_configuration_(from.radar_sensor_view_configuration_),
      lidar_sensor_view_configuration_(from.lidar_sensor_view_configuration_),
      camera_sensor_view_configuration_(from.camera_sensor_view_configuration_),
      ultrasonic_sensor_view_configuration_(from.ultrasonic_sensor_view_configuration_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::osi3::InterfaceVersion(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  if (from.has_update_cycle_time()) {
    update_cycle_time_ = new ::osi3::Timestamp(*from.update_cycle_time_);
  } else {
    update_cycle_time_ = NULL;
  }
  if (from.has_update_cycle_offset()) {
    update_cycle_offset_ = new ::osi3::Timestamp(*from.update_cycle_offset_);
  } else {
    update_cycle_offset_ = NULL;
  }
  if (from.has_simulation_start_time()) {
    simulation_start_time_ = new ::osi3::Timestamp(*from.simulation_start_time_);
  } else {
    simulation_start_time_ = NULL;
  }
  ::memcpy(&field_of_view_horizontal_, &from.field_of_view_horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(range_));
  // @@protoc_insertion_point(copy_constructor:osi3.SensorViewConfiguration)
}

void SensorViewConfiguration::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_) -
      reinterpret_cast<char*>(&version_)) + sizeof(range_));
  _cached_size_ = 0;
}

SensorViewConfiguration::~SensorViewConfiguration() {
  // @@protoc_insertion_point(destructor:osi3.SensorViewConfiguration)
  SharedDtor();
}

void SensorViewConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
  if (this != internal_default_instance()) delete update_cycle_time_;
  if (this != internal_default_instance()) delete update_cycle_offset_;
  if (this != internal_default_instance()) delete simulation_start_time_;
}

void SensorViewConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorViewConfiguration::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorViewConfiguration& SensorViewConfiguration::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsSensorViewConfiguration();
  return *internal_default_instance();
}

SensorViewConfiguration* SensorViewConfiguration::New(::google::protobuf::Arena* arena) const {
  SensorViewConfiguration* n = new SensorViewConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SensorViewConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.SensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generic_sensor_view_configuration_.Clear();
  radar_sensor_view_configuration_.Clear();
  lidar_sensor_view_configuration_.Clear();
  camera_sensor_view_configuration_.Clear();
  ultrasonic_sensor_view_configuration_.Clear();
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_cycle_time_ != NULL) {
    delete update_cycle_time_;
  }
  update_cycle_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_cycle_offset_ != NULL) {
    delete update_cycle_offset_;
  }
  update_cycle_offset_ = NULL;
  if (GetArenaNoVirtual() == NULL && simulation_start_time_ != NULL) {
    delete simulation_start_time_;
  }
  simulation_start_time_ = NULL;
  ::memset(&field_of_view_horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_) -
      reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(range_));
  _internal_metadata_.Clear();
}

bool SensorViewConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.SensorViewConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.InterfaceVersion version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Identifier sensor_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_horizontal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_vertical = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Timestamp update_cycle_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_cycle_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Timestamp update_cycle_offset = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_cycle_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Timestamp simulation_start_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_simulation_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.GenericSensorViewConfiguration generic_sensor_view_configuration = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 8002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_generic_sensor_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.RadarSensorViewConfiguration radar_sensor_view_configuration = 1001;
      case 1001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 8010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_radar_sensor_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.LidarSensorViewConfiguration lidar_sensor_view_configuration = 1002;
      case 1002: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 8018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_lidar_sensor_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.CameraSensorViewConfiguration camera_sensor_view_configuration = 1003;
      case 1003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 8026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_camera_sensor_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.UltrasonicSensorViewConfiguration ultrasonic_sensor_view_configuration = 1004;
      case 1004: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 8034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ultrasonic_sensor_view_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.SensorViewConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.SensorViewConfiguration)
  return false;
#undef DO_
}

void SensorViewConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.SensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.InterfaceVersion version = 1;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->version_, output);
  }

  // .osi3.Identifier sensor_id = 2;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 3;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 4;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mounting_position_rmse_, output);
  }

  // double field_of_view_horizontal = 5;
  if (this->field_of_view_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->field_of_view_horizontal(), output);
  }

  // double field_of_view_vertical = 6;
  if (this->field_of_view_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->field_of_view_vertical(), output);
  }

  // double range = 7;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->range(), output);
  }

  // .osi3.Timestamp update_cycle_time = 8;
  if (this->has_update_cycle_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->update_cycle_time_, output);
  }

  // .osi3.Timestamp update_cycle_offset = 9;
  if (this->has_update_cycle_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->update_cycle_offset_, output);
  }

  // .osi3.Timestamp simulation_start_time = 10;
  if (this->has_simulation_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->simulation_start_time_, output);
  }

  // repeated .osi3.GenericSensorViewConfiguration generic_sensor_view_configuration = 1000;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->generic_sensor_view_configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->generic_sensor_view_configuration(static_cast<int>(i)), output);
  }

  // repeated .osi3.RadarSensorViewConfiguration radar_sensor_view_configuration = 1001;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radar_sensor_view_configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1001, this->radar_sensor_view_configuration(static_cast<int>(i)), output);
  }

  // repeated .osi3.LidarSensorViewConfiguration lidar_sensor_view_configuration = 1002;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lidar_sensor_view_configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1002, this->lidar_sensor_view_configuration(static_cast<int>(i)), output);
  }

  // repeated .osi3.CameraSensorViewConfiguration camera_sensor_view_configuration = 1003;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camera_sensor_view_configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1003, this->camera_sensor_view_configuration(static_cast<int>(i)), output);
  }

  // repeated .osi3.UltrasonicSensorViewConfiguration ultrasonic_sensor_view_configuration = 1004;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ultrasonic_sensor_view_configuration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1004, this->ultrasonic_sensor_view_configuration(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.SensorViewConfiguration)
}

::google::protobuf::uint8* SensorViewConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.SensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.InterfaceVersion version = 1;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->version_, deterministic, target);
  }

  // .osi3.Identifier sensor_id = 2;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 3;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 4;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->mounting_position_rmse_, deterministic, target);
  }

  // double field_of_view_horizontal = 5;
  if (this->field_of_view_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->field_of_view_horizontal(), target);
  }

  // double field_of_view_vertical = 6;
  if (this->field_of_view_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->field_of_view_vertical(), target);
  }

  // double range = 7;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->range(), target);
  }

  // .osi3.Timestamp update_cycle_time = 8;
  if (this->has_update_cycle_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->update_cycle_time_, deterministic, target);
  }

  // .osi3.Timestamp update_cycle_offset = 9;
  if (this->has_update_cycle_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->update_cycle_offset_, deterministic, target);
  }

  // .osi3.Timestamp simulation_start_time = 10;
  if (this->has_simulation_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->simulation_start_time_, deterministic, target);
  }

  // repeated .osi3.GenericSensorViewConfiguration generic_sensor_view_configuration = 1000;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->generic_sensor_view_configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1000, this->generic_sensor_view_configuration(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.RadarSensorViewConfiguration radar_sensor_view_configuration = 1001;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radar_sensor_view_configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1001, this->radar_sensor_view_configuration(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.LidarSensorViewConfiguration lidar_sensor_view_configuration = 1002;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lidar_sensor_view_configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1002, this->lidar_sensor_view_configuration(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.CameraSensorViewConfiguration camera_sensor_view_configuration = 1003;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camera_sensor_view_configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1003, this->camera_sensor_view_configuration(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.UltrasonicSensorViewConfiguration ultrasonic_sensor_view_configuration = 1004;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ultrasonic_sensor_view_configuration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1004, this->ultrasonic_sensor_view_configuration(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.SensorViewConfiguration)
  return target;
}

size_t SensorViewConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.SensorViewConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.GenericSensorViewConfiguration generic_sensor_view_configuration = 1000;
  {
    unsigned int count = static_cast<unsigned int>(this->generic_sensor_view_configuration_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->generic_sensor_view_configuration(static_cast<int>(i)));
    }
  }

  // repeated .osi3.RadarSensorViewConfiguration radar_sensor_view_configuration = 1001;
  {
    unsigned int count = static_cast<unsigned int>(this->radar_sensor_view_configuration_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->radar_sensor_view_configuration(static_cast<int>(i)));
    }
  }

  // repeated .osi3.LidarSensorViewConfiguration lidar_sensor_view_configuration = 1002;
  {
    unsigned int count = static_cast<unsigned int>(this->lidar_sensor_view_configuration_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lidar_sensor_view_configuration(static_cast<int>(i)));
    }
  }

  // repeated .osi3.CameraSensorViewConfiguration camera_sensor_view_configuration = 1003;
  {
    unsigned int count = static_cast<unsigned int>(this->camera_sensor_view_configuration_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->camera_sensor_view_configuration(static_cast<int>(i)));
    }
  }

  // repeated .osi3.UltrasonicSensorViewConfiguration ultrasonic_sensor_view_configuration = 1004;
  {
    unsigned int count = static_cast<unsigned int>(this->ultrasonic_sensor_view_configuration_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ultrasonic_sensor_view_configuration(static_cast<int>(i)));
    }
  }

  // .osi3.InterfaceVersion version = 1;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->version_);
  }

  // .osi3.Identifier sensor_id = 2;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 3;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 4;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // .osi3.Timestamp update_cycle_time = 8;
  if (this->has_update_cycle_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_cycle_time_);
  }

  // .osi3.Timestamp update_cycle_offset = 9;
  if (this->has_update_cycle_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->update_cycle_offset_);
  }

  // .osi3.Timestamp simulation_start_time = 10;
  if (this->has_simulation_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->simulation_start_time_);
  }

  // double field_of_view_horizontal = 5;
  if (this->field_of_view_horizontal() != 0) {
    total_size += 1 + 8;
  }

  // double field_of_view_vertical = 6;
  if (this->field_of_view_vertical() != 0) {
    total_size += 1 + 8;
  }

  // double range = 7;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorViewConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.SensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorViewConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorViewConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.SensorViewConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.SensorViewConfiguration)
    MergeFrom(*source);
  }
}

void SensorViewConfiguration::MergeFrom(const SensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.SensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  generic_sensor_view_configuration_.MergeFrom(from.generic_sensor_view_configuration_);
  radar_sensor_view_configuration_.MergeFrom(from.radar_sensor_view_configuration_);
  lidar_sensor_view_configuration_.MergeFrom(from.lidar_sensor_view_configuration_);
  camera_sensor_view_configuration_.MergeFrom(from.camera_sensor_view_configuration_);
  ultrasonic_sensor_view_configuration_.MergeFrom(from.ultrasonic_sensor_view_configuration_);
  if (from.has_version()) {
    mutable_version()->::osi3::InterfaceVersion::MergeFrom(from.version());
  }
  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.has_update_cycle_time()) {
    mutable_update_cycle_time()->::osi3::Timestamp::MergeFrom(from.update_cycle_time());
  }
  if (from.has_update_cycle_offset()) {
    mutable_update_cycle_offset()->::osi3::Timestamp::MergeFrom(from.update_cycle_offset());
  }
  if (from.has_simulation_start_time()) {
    mutable_simulation_start_time()->::osi3::Timestamp::MergeFrom(from.simulation_start_time());
  }
  if (from.field_of_view_horizontal() != 0) {
    set_field_of_view_horizontal(from.field_of_view_horizontal());
  }
  if (from.field_of_view_vertical() != 0) {
    set_field_of_view_vertical(from.field_of_view_vertical());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
}

void SensorViewConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.SensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorViewConfiguration::CopyFrom(const SensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.SensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorViewConfiguration::IsInitialized() const {
  return true;
}

void SensorViewConfiguration::Swap(SensorViewConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorViewConfiguration::InternalSwap(SensorViewConfiguration* other) {
  using std::swap;
  generic_sensor_view_configuration_.InternalSwap(&other->generic_sensor_view_configuration_);
  radar_sensor_view_configuration_.InternalSwap(&other->radar_sensor_view_configuration_);
  lidar_sensor_view_configuration_.InternalSwap(&other->lidar_sensor_view_configuration_);
  camera_sensor_view_configuration_.InternalSwap(&other->camera_sensor_view_configuration_);
  ultrasonic_sensor_view_configuration_.InternalSwap(&other->ultrasonic_sensor_view_configuration_);
  swap(version_, other->version_);
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(update_cycle_time_, other->update_cycle_time_);
  swap(update_cycle_offset_, other->update_cycle_offset_);
  swap(simulation_start_time_, other->simulation_start_time_);
  swap(field_of_view_horizontal_, other->field_of_view_horizontal_);
  swap(field_of_view_vertical_, other->field_of_view_vertical_);
  swap(range_, other->range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SensorViewConfiguration::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenericSensorViewConfiguration::InitAsDefaultInstance() {
  ::osi3::_GenericSensorViewConfiguration_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_GenericSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_GenericSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
}
void GenericSensorViewConfiguration::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void GenericSensorViewConfiguration::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void GenericSensorViewConfiguration::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericSensorViewConfiguration::kSensorIdFieldNumber;
const int GenericSensorViewConfiguration::kMountingPositionFieldNumber;
const int GenericSensorViewConfiguration::kMountingPositionRmseFieldNumber;
const int GenericSensorViewConfiguration::kFieldOfViewHorizontalFieldNumber;
const int GenericSensorViewConfiguration::kFieldOfViewVerticalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericSensorViewConfiguration::GenericSensorViewConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsGenericSensorViewConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.GenericSensorViewConfiguration)
}
GenericSensorViewConfiguration::GenericSensorViewConfiguration(const GenericSensorViewConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  ::memcpy(&field_of_view_horizontal_, &from.field_of_view_horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_of_view_vertical_) -
    reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(field_of_view_vertical_));
  // @@protoc_insertion_point(copy_constructor:osi3.GenericSensorViewConfiguration)
}

void GenericSensorViewConfiguration::SharedCtor() {
  ::memset(&sensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_of_view_vertical_) -
      reinterpret_cast<char*>(&sensor_id_)) + sizeof(field_of_view_vertical_));
  _cached_size_ = 0;
}

GenericSensorViewConfiguration::~GenericSensorViewConfiguration() {
  // @@protoc_insertion_point(destructor:osi3.GenericSensorViewConfiguration)
  SharedDtor();
}

void GenericSensorViewConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
}

void GenericSensorViewConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericSensorViewConfiguration::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericSensorViewConfiguration& GenericSensorViewConfiguration::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsGenericSensorViewConfiguration();
  return *internal_default_instance();
}

GenericSensorViewConfiguration* GenericSensorViewConfiguration::New(::google::protobuf::Arena* arena) const {
  GenericSensorViewConfiguration* n = new GenericSensorViewConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericSensorViewConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.GenericSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  ::memset(&field_of_view_horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_of_view_vertical_) -
      reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(field_of_view_vertical_));
  _internal_metadata_.Clear();
}

bool GenericSensorViewConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.GenericSensorViewConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier sensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_horizontal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_vertical = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.GenericSensorViewConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.GenericSensorViewConfiguration)
  return false;
#undef DO_
}

void GenericSensorViewConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.GenericSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mounting_position_rmse_, output);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->field_of_view_horizontal(), output);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->field_of_view_vertical(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.GenericSensorViewConfiguration)
}

::google::protobuf::uint8* GenericSensorViewConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.GenericSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mounting_position_rmse_, deterministic, target);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->field_of_view_horizontal(), target);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->field_of_view_vertical(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.GenericSensorViewConfiguration)
  return target;
}

size_t GenericSensorViewConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.GenericSensorViewConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    total_size += 1 + 8;
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericSensorViewConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.GenericSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericSensorViewConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericSensorViewConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.GenericSensorViewConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.GenericSensorViewConfiguration)
    MergeFrom(*source);
  }
}

void GenericSensorViewConfiguration::MergeFrom(const GenericSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.GenericSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.field_of_view_horizontal() != 0) {
    set_field_of_view_horizontal(from.field_of_view_horizontal());
  }
  if (from.field_of_view_vertical() != 0) {
    set_field_of_view_vertical(from.field_of_view_vertical());
  }
}

void GenericSensorViewConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.GenericSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericSensorViewConfiguration::CopyFrom(const GenericSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.GenericSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericSensorViewConfiguration::IsInitialized() const {
  return true;
}

void GenericSensorViewConfiguration::Swap(GenericSensorViewConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericSensorViewConfiguration::InternalSwap(GenericSensorViewConfiguration* other) {
  using std::swap;
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(field_of_view_horizontal_, other->field_of_view_horizontal_);
  swap(field_of_view_vertical_, other->field_of_view_vertical_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericSensorViewConfiguration::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadarSensorViewConfiguration_AntennaDiagramEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSensorViewConfiguration_AntennaDiagramEntry::kHorizontalAngleFieldNumber;
const int RadarSensorViewConfiguration_AntennaDiagramEntry::kVerticalAngleFieldNumber;
const int RadarSensorViewConfiguration_AntennaDiagramEntry::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSensorViewConfiguration_AntennaDiagramEntry::RadarSensorViewConfiguration_AntennaDiagramEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration_AntennaDiagramEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
}
RadarSensorViewConfiguration_AntennaDiagramEntry::RadarSensorViewConfiguration_AntennaDiagramEntry(const RadarSensorViewConfiguration_AntennaDiagramEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&horizontal_angle_, &from.horizontal_angle_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&horizontal_angle_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::SharedCtor() {
  ::memset(&horizontal_angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&horizontal_angle_)) + sizeof(response_));
  _cached_size_ = 0;
}

RadarSensorViewConfiguration_AntennaDiagramEntry::~RadarSensorViewConfiguration_AntennaDiagramEntry() {
  // @@protoc_insertion_point(destructor:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  SharedDtor();
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::SharedDtor() {
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSensorViewConfiguration_AntennaDiagramEntry::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSensorViewConfiguration_AntennaDiagramEntry& RadarSensorViewConfiguration_AntennaDiagramEntry::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration_AntennaDiagramEntry();
  return *internal_default_instance();
}

RadarSensorViewConfiguration_AntennaDiagramEntry* RadarSensorViewConfiguration_AntennaDiagramEntry::New(::google::protobuf::Arena* arena) const {
  RadarSensorViewConfiguration_AntennaDiagramEntry* n = new RadarSensorViewConfiguration_AntennaDiagramEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&horizontal_angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&horizontal_angle_)) + sizeof(response_));
  _internal_metadata_.Clear();
}

bool RadarSensorViewConfiguration_AntennaDiagramEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double horizontal_angle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &horizontal_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vertical_angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vertical_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  return false;
#undef DO_
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double horizontal_angle = 1;
  if (this->horizontal_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->horizontal_angle(), output);
  }

  // double vertical_angle = 2;
  if (this->vertical_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vertical_angle(), output);
  }

  // double response = 3;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
}

::google::protobuf::uint8* RadarSensorViewConfiguration_AntennaDiagramEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double horizontal_angle = 1;
  if (this->horizontal_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->horizontal_angle(), target);
  }

  // double vertical_angle = 2;
  if (this->vertical_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vertical_angle(), target);
  }

  // double response = 3;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->response(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  return target;
}

size_t RadarSensorViewConfiguration_AntennaDiagramEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double horizontal_angle = 1;
  if (this->horizontal_angle() != 0) {
    total_size += 1 + 8;
  }

  // double vertical_angle = 2;
  if (this->vertical_angle() != 0) {
    total_size += 1 + 8;
  }

  // double response = 3;
  if (this->response() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSensorViewConfiguration_AntennaDiagramEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSensorViewConfiguration_AntennaDiagramEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
    MergeFrom(*source);
  }
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::MergeFrom(const RadarSensorViewConfiguration_AntennaDiagramEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.horizontal_angle() != 0) {
    set_horizontal_angle(from.horizontal_angle());
  }
  if (from.vertical_angle() != 0) {
    set_vertical_angle(from.vertical_angle());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::CopyFrom(const RadarSensorViewConfiguration_AntennaDiagramEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.RadarSensorViewConfiguration.AntennaDiagramEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSensorViewConfiguration_AntennaDiagramEntry::IsInitialized() const {
  return true;
}

void RadarSensorViewConfiguration_AntennaDiagramEntry::Swap(RadarSensorViewConfiguration_AntennaDiagramEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSensorViewConfiguration_AntennaDiagramEntry::InternalSwap(RadarSensorViewConfiguration_AntennaDiagramEntry* other) {
  using std::swap;
  swap(horizontal_angle_, other->horizontal_angle_);
  swap(vertical_angle_, other->vertical_angle_);
  swap(response_, other->response_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSensorViewConfiguration_AntennaDiagramEntry::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadarSensorViewConfiguration::InitAsDefaultInstance() {
  ::osi3::_RadarSensorViewConfiguration_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_RadarSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_RadarSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
}
void RadarSensorViewConfiguration::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void RadarSensorViewConfiguration::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void RadarSensorViewConfiguration::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSensorViewConfiguration::kSensorIdFieldNumber;
const int RadarSensorViewConfiguration::kMountingPositionFieldNumber;
const int RadarSensorViewConfiguration::kMountingPositionRmseFieldNumber;
const int RadarSensorViewConfiguration::kFieldOfViewHorizontalFieldNumber;
const int RadarSensorViewConfiguration::kFieldOfViewVerticalFieldNumber;
const int RadarSensorViewConfiguration::kNumberOfRaysHorizontalFieldNumber;
const int RadarSensorViewConfiguration::kNumberOfRaysVerticalFieldNumber;
const int RadarSensorViewConfiguration::kMaxNumberOfInteractionsFieldNumber;
const int RadarSensorViewConfiguration::kEmitterFrequencyFieldNumber;
const int RadarSensorViewConfiguration::kTxAntennaDiagramFieldNumber;
const int RadarSensorViewConfiguration::kRxAntennaDiagramFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSensorViewConfiguration::RadarSensorViewConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.RadarSensorViewConfiguration)
}
RadarSensorViewConfiguration::RadarSensorViewConfiguration(const RadarSensorViewConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tx_antenna_diagram_(from.tx_antenna_diagram_),
      rx_antenna_diagram_(from.rx_antenna_diagram_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  ::memcpy(&field_of_view_horizontal_, &from.field_of_view_horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_number_of_interactions_) -
    reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(max_number_of_interactions_));
  // @@protoc_insertion_point(copy_constructor:osi3.RadarSensorViewConfiguration)
}

void RadarSensorViewConfiguration::SharedCtor() {
  ::memset(&sensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_number_of_interactions_) -
      reinterpret_cast<char*>(&sensor_id_)) + sizeof(max_number_of_interactions_));
  _cached_size_ = 0;
}

RadarSensorViewConfiguration::~RadarSensorViewConfiguration() {
  // @@protoc_insertion_point(destructor:osi3.RadarSensorViewConfiguration)
  SharedDtor();
}

void RadarSensorViewConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
}

void RadarSensorViewConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSensorViewConfiguration::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSensorViewConfiguration& RadarSensorViewConfiguration::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsRadarSensorViewConfiguration();
  return *internal_default_instance();
}

RadarSensorViewConfiguration* RadarSensorViewConfiguration::New(::google::protobuf::Arena* arena) const {
  RadarSensorViewConfiguration* n = new RadarSensorViewConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSensorViewConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.RadarSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_antenna_diagram_.Clear();
  rx_antenna_diagram_.Clear();
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  ::memset(&field_of_view_horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_number_of_interactions_) -
      reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(max_number_of_interactions_));
  _internal_metadata_.Clear();
}

bool RadarSensorViewConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.RadarSensorViewConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier sensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_horizontal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_vertical = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_rays_horizontal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_rays_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_rays_vertical = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_rays_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_number_of_interactions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_number_of_interactions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double emitter_frequency = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &emitter_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry tx_antenna_diagram = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tx_antenna_diagram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry rx_antenna_diagram = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rx_antenna_diagram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.RadarSensorViewConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.RadarSensorViewConfiguration)
  return false;
#undef DO_
}

void RadarSensorViewConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.RadarSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mounting_position_rmse_, output);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->field_of_view_horizontal(), output);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->field_of_view_vertical(), output);
  }

  // uint32 number_of_rays_horizontal = 6;
  if (this->number_of_rays_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->number_of_rays_horizontal(), output);
  }

  // uint32 number_of_rays_vertical = 7;
  if (this->number_of_rays_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->number_of_rays_vertical(), output);
  }

  // uint32 max_number_of_interactions = 8;
  if (this->max_number_of_interactions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->max_number_of_interactions(), output);
  }

  // double emitter_frequency = 9;
  if (this->emitter_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->emitter_frequency(), output);
  }

  // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry tx_antenna_diagram = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tx_antenna_diagram_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->tx_antenna_diagram(static_cast<int>(i)), output);
  }

  // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry rx_antenna_diagram = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rx_antenna_diagram_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->rx_antenna_diagram(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.RadarSensorViewConfiguration)
}

::google::protobuf::uint8* RadarSensorViewConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.RadarSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mounting_position_rmse_, deterministic, target);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->field_of_view_horizontal(), target);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->field_of_view_vertical(), target);
  }

  // uint32 number_of_rays_horizontal = 6;
  if (this->number_of_rays_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->number_of_rays_horizontal(), target);
  }

  // uint32 number_of_rays_vertical = 7;
  if (this->number_of_rays_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->number_of_rays_vertical(), target);
  }

  // uint32 max_number_of_interactions = 8;
  if (this->max_number_of_interactions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->max_number_of_interactions(), target);
  }

  // double emitter_frequency = 9;
  if (this->emitter_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->emitter_frequency(), target);
  }

  // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry tx_antenna_diagram = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tx_antenna_diagram_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->tx_antenna_diagram(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry rx_antenna_diagram = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rx_antenna_diagram_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->rx_antenna_diagram(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.RadarSensorViewConfiguration)
  return target;
}

size_t RadarSensorViewConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.RadarSensorViewConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry tx_antenna_diagram = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->tx_antenna_diagram_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tx_antenna_diagram(static_cast<int>(i)));
    }
  }

  // repeated .osi3.RadarSensorViewConfiguration.AntennaDiagramEntry rx_antenna_diagram = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->rx_antenna_diagram_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rx_antenna_diagram(static_cast<int>(i)));
    }
  }

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    total_size += 1 + 8;
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    total_size += 1 + 8;
  }

  // uint32 number_of_rays_horizontal = 6;
  if (this->number_of_rays_horizontal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_rays_horizontal());
  }

  // uint32 number_of_rays_vertical = 7;
  if (this->number_of_rays_vertical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_rays_vertical());
  }

  // double emitter_frequency = 9;
  if (this->emitter_frequency() != 0) {
    total_size += 1 + 8;
  }

  // uint32 max_number_of_interactions = 8;
  if (this->max_number_of_interactions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_number_of_interactions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSensorViewConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.RadarSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSensorViewConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSensorViewConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.RadarSensorViewConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.RadarSensorViewConfiguration)
    MergeFrom(*source);
  }
}

void RadarSensorViewConfiguration::MergeFrom(const RadarSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.RadarSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tx_antenna_diagram_.MergeFrom(from.tx_antenna_diagram_);
  rx_antenna_diagram_.MergeFrom(from.rx_antenna_diagram_);
  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.field_of_view_horizontal() != 0) {
    set_field_of_view_horizontal(from.field_of_view_horizontal());
  }
  if (from.field_of_view_vertical() != 0) {
    set_field_of_view_vertical(from.field_of_view_vertical());
  }
  if (from.number_of_rays_horizontal() != 0) {
    set_number_of_rays_horizontal(from.number_of_rays_horizontal());
  }
  if (from.number_of_rays_vertical() != 0) {
    set_number_of_rays_vertical(from.number_of_rays_vertical());
  }
  if (from.emitter_frequency() != 0) {
    set_emitter_frequency(from.emitter_frequency());
  }
  if (from.max_number_of_interactions() != 0) {
    set_max_number_of_interactions(from.max_number_of_interactions());
  }
}

void RadarSensorViewConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.RadarSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSensorViewConfiguration::CopyFrom(const RadarSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.RadarSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSensorViewConfiguration::IsInitialized() const {
  return true;
}

void RadarSensorViewConfiguration::Swap(RadarSensorViewConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSensorViewConfiguration::InternalSwap(RadarSensorViewConfiguration* other) {
  using std::swap;
  tx_antenna_diagram_.InternalSwap(&other->tx_antenna_diagram_);
  rx_antenna_diagram_.InternalSwap(&other->rx_antenna_diagram_);
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(field_of_view_horizontal_, other->field_of_view_horizontal_);
  swap(field_of_view_vertical_, other->field_of_view_vertical_);
  swap(number_of_rays_horizontal_, other->number_of_rays_horizontal_);
  swap(number_of_rays_vertical_, other->number_of_rays_vertical_);
  swap(emitter_frequency_, other->emitter_frequency_);
  swap(max_number_of_interactions_, other->max_number_of_interactions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSensorViewConfiguration::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LidarSensorViewConfiguration::InitAsDefaultInstance() {
  ::osi3::_LidarSensorViewConfiguration_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_LidarSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_LidarSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
}
void LidarSensorViewConfiguration::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void LidarSensorViewConfiguration::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void LidarSensorViewConfiguration::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
void LidarSensorViewConfiguration::clear_directions() {
  directions_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LidarSensorViewConfiguration::kSensorIdFieldNumber;
const int LidarSensorViewConfiguration::kMountingPositionFieldNumber;
const int LidarSensorViewConfiguration::kMountingPositionRmseFieldNumber;
const int LidarSensorViewConfiguration::kFieldOfViewHorizontalFieldNumber;
const int LidarSensorViewConfiguration::kFieldOfViewVerticalFieldNumber;
const int LidarSensorViewConfiguration::kNumberOfRaysHorizontalFieldNumber;
const int LidarSensorViewConfiguration::kNumberOfRaysVerticalFieldNumber;
const int LidarSensorViewConfiguration::kMaxNumberOfInteractionsFieldNumber;
const int LidarSensorViewConfiguration::kEmitterFrequencyFieldNumber;
const int LidarSensorViewConfiguration::kNumOfPixelsFieldNumber;
const int LidarSensorViewConfiguration::kDirectionsFieldNumber;
const int LidarSensorViewConfiguration::kTimingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LidarSensorViewConfiguration::LidarSensorViewConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsLidarSensorViewConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.LidarSensorViewConfiguration)
}
LidarSensorViewConfiguration::LidarSensorViewConfiguration(const LidarSensorViewConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      directions_(from.directions_),
      timings_(from.timings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  ::memcpy(&field_of_view_horizontal_, &from.field_of_view_horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_of_pixels_) -
    reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(num_of_pixels_));
  // @@protoc_insertion_point(copy_constructor:osi3.LidarSensorViewConfiguration)
}

void LidarSensorViewConfiguration::SharedCtor() {
  ::memset(&sensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_pixels_) -
      reinterpret_cast<char*>(&sensor_id_)) + sizeof(num_of_pixels_));
  _cached_size_ = 0;
}

LidarSensorViewConfiguration::~LidarSensorViewConfiguration() {
  // @@protoc_insertion_point(destructor:osi3.LidarSensorViewConfiguration)
  SharedDtor();
}

void LidarSensorViewConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
}

void LidarSensorViewConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LidarSensorViewConfiguration::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LidarSensorViewConfiguration& LidarSensorViewConfiguration::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsLidarSensorViewConfiguration();
  return *internal_default_instance();
}

LidarSensorViewConfiguration* LidarSensorViewConfiguration::New(::google::protobuf::Arena* arena) const {
  LidarSensorViewConfiguration* n = new LidarSensorViewConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LidarSensorViewConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.LidarSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  directions_.Clear();
  timings_.Clear();
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  ::memset(&field_of_view_horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_pixels_) -
      reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(num_of_pixels_));
  _internal_metadata_.Clear();
}

bool LidarSensorViewConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.LidarSensorViewConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier sensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_horizontal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_vertical = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_rays_horizontal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_rays_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_rays_vertical = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_rays_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_number_of_interactions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_number_of_interactions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double emitter_frequency = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &emitter_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_of_pixels = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_of_pixels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.Vector3d directions = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_directions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 timings = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_timings())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_timings())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.LidarSensorViewConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.LidarSensorViewConfiguration)
  return false;
#undef DO_
}

void LidarSensorViewConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.LidarSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mounting_position_rmse_, output);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->field_of_view_horizontal(), output);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->field_of_view_vertical(), output);
  }

  // uint32 number_of_rays_horizontal = 6;
  if (this->number_of_rays_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->number_of_rays_horizontal(), output);
  }

  // uint32 number_of_rays_vertical = 7;
  if (this->number_of_rays_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->number_of_rays_vertical(), output);
  }

  // uint32 max_number_of_interactions = 8;
  if (this->max_number_of_interactions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->max_number_of_interactions(), output);
  }

  // double emitter_frequency = 9;
  if (this->emitter_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->emitter_frequency(), output);
  }

  // uint32 num_of_pixels = 10;
  if (this->num_of_pixels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->num_of_pixels(), output);
  }

  // repeated .osi3.Vector3d directions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->directions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->directions(static_cast<int>(i)), output);
  }

  // repeated uint32 timings = 12;
  if (this->timings_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _timings_cached_byte_size_));
  }
  for (int i = 0, n = this->timings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->timings(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.LidarSensorViewConfiguration)
}

::google::protobuf::uint8* LidarSensorViewConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.LidarSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mounting_position_rmse_, deterministic, target);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->field_of_view_horizontal(), target);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->field_of_view_vertical(), target);
  }

  // uint32 number_of_rays_horizontal = 6;
  if (this->number_of_rays_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->number_of_rays_horizontal(), target);
  }

  // uint32 number_of_rays_vertical = 7;
  if (this->number_of_rays_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->number_of_rays_vertical(), target);
  }

  // uint32 max_number_of_interactions = 8;
  if (this->max_number_of_interactions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->max_number_of_interactions(), target);
  }

  // double emitter_frequency = 9;
  if (this->emitter_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->emitter_frequency(), target);
  }

  // uint32 num_of_pixels = 10;
  if (this->num_of_pixels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->num_of_pixels(), target);
  }

  // repeated .osi3.Vector3d directions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->directions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->directions(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 timings = 12;
  if (this->timings_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _timings_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->timings_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.LidarSensorViewConfiguration)
  return target;
}

size_t LidarSensorViewConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.LidarSensorViewConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.Vector3d directions = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->directions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->directions(static_cast<int>(i)));
    }
  }

  // repeated uint32 timings = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->timings_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _timings_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    total_size += 1 + 8;
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    total_size += 1 + 8;
  }

  // uint32 number_of_rays_horizontal = 6;
  if (this->number_of_rays_horizontal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_rays_horizontal());
  }

  // uint32 number_of_rays_vertical = 7;
  if (this->number_of_rays_vertical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_rays_vertical());
  }

  // double emitter_frequency = 9;
  if (this->emitter_frequency() != 0) {
    total_size += 1 + 8;
  }

  // uint32 max_number_of_interactions = 8;
  if (this->max_number_of_interactions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_number_of_interactions());
  }

  // uint32 num_of_pixels = 10;
  if (this->num_of_pixels() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_of_pixels());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LidarSensorViewConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.LidarSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const LidarSensorViewConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LidarSensorViewConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.LidarSensorViewConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.LidarSensorViewConfiguration)
    MergeFrom(*source);
  }
}

void LidarSensorViewConfiguration::MergeFrom(const LidarSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.LidarSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  directions_.MergeFrom(from.directions_);
  timings_.MergeFrom(from.timings_);
  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.field_of_view_horizontal() != 0) {
    set_field_of_view_horizontal(from.field_of_view_horizontal());
  }
  if (from.field_of_view_vertical() != 0) {
    set_field_of_view_vertical(from.field_of_view_vertical());
  }
  if (from.number_of_rays_horizontal() != 0) {
    set_number_of_rays_horizontal(from.number_of_rays_horizontal());
  }
  if (from.number_of_rays_vertical() != 0) {
    set_number_of_rays_vertical(from.number_of_rays_vertical());
  }
  if (from.emitter_frequency() != 0) {
    set_emitter_frequency(from.emitter_frequency());
  }
  if (from.max_number_of_interactions() != 0) {
    set_max_number_of_interactions(from.max_number_of_interactions());
  }
  if (from.num_of_pixels() != 0) {
    set_num_of_pixels(from.num_of_pixels());
  }
}

void LidarSensorViewConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.LidarSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LidarSensorViewConfiguration::CopyFrom(const LidarSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.LidarSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LidarSensorViewConfiguration::IsInitialized() const {
  return true;
}

void LidarSensorViewConfiguration::Swap(LidarSensorViewConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LidarSensorViewConfiguration::InternalSwap(LidarSensorViewConfiguration* other) {
  using std::swap;
  directions_.InternalSwap(&other->directions_);
  timings_.InternalSwap(&other->timings_);
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(field_of_view_horizontal_, other->field_of_view_horizontal_);
  swap(field_of_view_vertical_, other->field_of_view_vertical_);
  swap(number_of_rays_horizontal_, other->number_of_rays_horizontal_);
  swap(number_of_rays_vertical_, other->number_of_rays_vertical_);
  swap(emitter_frequency_, other->emitter_frequency_);
  swap(max_number_of_interactions_, other->max_number_of_interactions_);
  swap(num_of_pixels_, other->num_of_pixels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LidarSensorViewConfiguration::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CameraSensorViewConfiguration::InitAsDefaultInstance() {
  ::osi3::_CameraSensorViewConfiguration_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_CameraSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_CameraSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
}
void CameraSensorViewConfiguration::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void CameraSensorViewConfiguration::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void CameraSensorViewConfiguration::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraSensorViewConfiguration::kSensorIdFieldNumber;
const int CameraSensorViewConfiguration::kMountingPositionFieldNumber;
const int CameraSensorViewConfiguration::kMountingPositionRmseFieldNumber;
const int CameraSensorViewConfiguration::kFieldOfViewHorizontalFieldNumber;
const int CameraSensorViewConfiguration::kFieldOfViewVerticalFieldNumber;
const int CameraSensorViewConfiguration::kNumberOfPixelsHorizontalFieldNumber;
const int CameraSensorViewConfiguration::kNumberOfPixelsVerticalFieldNumber;
const int CameraSensorViewConfiguration::kChannelFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraSensorViewConfiguration::CameraSensorViewConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsCameraSensorViewConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.CameraSensorViewConfiguration)
}
CameraSensorViewConfiguration::CameraSensorViewConfiguration(const CameraSensorViewConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_format_(from.channel_format_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  ::memcpy(&field_of_view_horizontal_, &from.field_of_view_horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_of_pixels_vertical_) -
    reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(number_of_pixels_vertical_));
  // @@protoc_insertion_point(copy_constructor:osi3.CameraSensorViewConfiguration)
}

void CameraSensorViewConfiguration::SharedCtor() {
  ::memset(&sensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_pixels_vertical_) -
      reinterpret_cast<char*>(&sensor_id_)) + sizeof(number_of_pixels_vertical_));
  _cached_size_ = 0;
}

CameraSensorViewConfiguration::~CameraSensorViewConfiguration() {
  // @@protoc_insertion_point(destructor:osi3.CameraSensorViewConfiguration)
  SharedDtor();
}

void CameraSensorViewConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
}

void CameraSensorViewConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraSensorViewConfiguration::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CameraSensorViewConfiguration& CameraSensorViewConfiguration::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsCameraSensorViewConfiguration();
  return *internal_default_instance();
}

CameraSensorViewConfiguration* CameraSensorViewConfiguration::New(::google::protobuf::Arena* arena) const {
  CameraSensorViewConfiguration* n = new CameraSensorViewConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraSensorViewConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.CameraSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_format_.Clear();
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  ::memset(&field_of_view_horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_pixels_vertical_) -
      reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(number_of_pixels_vertical_));
  _internal_metadata_.Clear();
}

bool CameraSensorViewConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.CameraSensorViewConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier sensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_horizontal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_vertical = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_pixels_horizontal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_pixels_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_pixels_vertical = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_pixels_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.CameraSensorViewConfiguration.ChannelFormat channel_format = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_channel_format(static_cast< ::osi3::CameraSensorViewConfiguration_ChannelFormat >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_channel_format(static_cast< ::osi3::CameraSensorViewConfiguration_ChannelFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.CameraSensorViewConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.CameraSensorViewConfiguration)
  return false;
#undef DO_
}

void CameraSensorViewConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.CameraSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mounting_position_rmse_, output);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->field_of_view_horizontal(), output);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->field_of_view_vertical(), output);
  }

  // uint32 number_of_pixels_horizontal = 6;
  if (this->number_of_pixels_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->number_of_pixels_horizontal(), output);
  }

  // uint32 number_of_pixels_vertical = 7;
  if (this->number_of_pixels_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->number_of_pixels_vertical(), output);
  }

  // repeated .osi3.CameraSensorViewConfiguration.ChannelFormat channel_format = 8;
  if (this->channel_format_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_channel_format_cached_byte_size_));
  }
  for (int i = 0, n = this->channel_format_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->channel_format(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.CameraSensorViewConfiguration)
}

::google::protobuf::uint8* CameraSensorViewConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.CameraSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mounting_position_rmse_, deterministic, target);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->field_of_view_horizontal(), target);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->field_of_view_vertical(), target);
  }

  // uint32 number_of_pixels_horizontal = 6;
  if (this->number_of_pixels_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->number_of_pixels_horizontal(), target);
  }

  // uint32 number_of_pixels_vertical = 7;
  if (this->number_of_pixels_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->number_of_pixels_vertical(), target);
  }

  // repeated .osi3.CameraSensorViewConfiguration.ChannelFormat channel_format = 8;
  if (this->channel_format_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _channel_format_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->channel_format_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.CameraSensorViewConfiguration)
  return target;
}

size_t CameraSensorViewConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.CameraSensorViewConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.CameraSensorViewConfiguration.ChannelFormat channel_format = 8;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->channel_format_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->channel_format(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _channel_format_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    total_size += 1 + 8;
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    total_size += 1 + 8;
  }

  // uint32 number_of_pixels_horizontal = 6;
  if (this->number_of_pixels_horizontal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_pixels_horizontal());
  }

  // uint32 number_of_pixels_vertical = 7;
  if (this->number_of_pixels_vertical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_pixels_vertical());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraSensorViewConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.CameraSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraSensorViewConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraSensorViewConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.CameraSensorViewConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.CameraSensorViewConfiguration)
    MergeFrom(*source);
  }
}

void CameraSensorViewConfiguration::MergeFrom(const CameraSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.CameraSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_format_.MergeFrom(from.channel_format_);
  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.field_of_view_horizontal() != 0) {
    set_field_of_view_horizontal(from.field_of_view_horizontal());
  }
  if (from.field_of_view_vertical() != 0) {
    set_field_of_view_vertical(from.field_of_view_vertical());
  }
  if (from.number_of_pixels_horizontal() != 0) {
    set_number_of_pixels_horizontal(from.number_of_pixels_horizontal());
  }
  if (from.number_of_pixels_vertical() != 0) {
    set_number_of_pixels_vertical(from.number_of_pixels_vertical());
  }
}

void CameraSensorViewConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.CameraSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraSensorViewConfiguration::CopyFrom(const CameraSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.CameraSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraSensorViewConfiguration::IsInitialized() const {
  return true;
}

void CameraSensorViewConfiguration::Swap(CameraSensorViewConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraSensorViewConfiguration::InternalSwap(CameraSensorViewConfiguration* other) {
  using std::swap;
  channel_format_.InternalSwap(&other->channel_format_);
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(field_of_view_horizontal_, other->field_of_view_horizontal_);
  swap(field_of_view_vertical_, other->field_of_view_vertical_);
  swap(number_of_pixels_horizontal_, other->number_of_pixels_horizontal_);
  swap(number_of_pixels_vertical_, other->number_of_pixels_vertical_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraSensorViewConfiguration::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UltrasonicSensorViewConfiguration::InitAsDefaultInstance() {
  ::osi3::_UltrasonicSensorViewConfiguration_default_instance_._instance.get_mutable()->sensor_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_UltrasonicSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
  ::osi3::_UltrasonicSensorViewConfiguration_default_instance_._instance.get_mutable()->mounting_position_rmse_ = const_cast< ::osi3::MountingPosition*>(
      ::osi3::MountingPosition::internal_default_instance());
}
void UltrasonicSensorViewConfiguration::clear_sensor_id() {
  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
}
void UltrasonicSensorViewConfiguration::clear_mounting_position() {
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
}
void UltrasonicSensorViewConfiguration::clear_mounting_position_rmse() {
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UltrasonicSensorViewConfiguration::kSensorIdFieldNumber;
const int UltrasonicSensorViewConfiguration::kMountingPositionFieldNumber;
const int UltrasonicSensorViewConfiguration::kMountingPositionRmseFieldNumber;
const int UltrasonicSensorViewConfiguration::kFieldOfViewHorizontalFieldNumber;
const int UltrasonicSensorViewConfiguration::kFieldOfViewVerticalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UltrasonicSensorViewConfiguration::UltrasonicSensorViewConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsUltrasonicSensorViewConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.UltrasonicSensorViewConfiguration)
}
UltrasonicSensorViewConfiguration::UltrasonicSensorViewConfiguration(const UltrasonicSensorViewConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sensor_id()) {
    sensor_id_ = new ::osi3::Identifier(*from.sensor_id_);
  } else {
    sensor_id_ = NULL;
  }
  if (from.has_mounting_position()) {
    mounting_position_ = new ::osi3::MountingPosition(*from.mounting_position_);
  } else {
    mounting_position_ = NULL;
  }
  if (from.has_mounting_position_rmse()) {
    mounting_position_rmse_ = new ::osi3::MountingPosition(*from.mounting_position_rmse_);
  } else {
    mounting_position_rmse_ = NULL;
  }
  ::memcpy(&field_of_view_horizontal_, &from.field_of_view_horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_of_view_vertical_) -
    reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(field_of_view_vertical_));
  // @@protoc_insertion_point(copy_constructor:osi3.UltrasonicSensorViewConfiguration)
}

void UltrasonicSensorViewConfiguration::SharedCtor() {
  ::memset(&sensor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_of_view_vertical_) -
      reinterpret_cast<char*>(&sensor_id_)) + sizeof(field_of_view_vertical_));
  _cached_size_ = 0;
}

UltrasonicSensorViewConfiguration::~UltrasonicSensorViewConfiguration() {
  // @@protoc_insertion_point(destructor:osi3.UltrasonicSensorViewConfiguration)
  SharedDtor();
}

void UltrasonicSensorViewConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete sensor_id_;
  if (this != internal_default_instance()) delete mounting_position_;
  if (this != internal_default_instance()) delete mounting_position_rmse_;
}

void UltrasonicSensorViewConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UltrasonicSensorViewConfiguration::descriptor() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UltrasonicSensorViewConfiguration& UltrasonicSensorViewConfiguration::default_instance() {
  ::protobuf_osi_5fsensorviewconfiguration_2eproto::InitDefaultsUltrasonicSensorViewConfiguration();
  return *internal_default_instance();
}

UltrasonicSensorViewConfiguration* UltrasonicSensorViewConfiguration::New(::google::protobuf::Arena* arena) const {
  UltrasonicSensorViewConfiguration* n = new UltrasonicSensorViewConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UltrasonicSensorViewConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.UltrasonicSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sensor_id_ != NULL) {
    delete sensor_id_;
  }
  sensor_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_ != NULL) {
    delete mounting_position_;
  }
  mounting_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && mounting_position_rmse_ != NULL) {
    delete mounting_position_rmse_;
  }
  mounting_position_rmse_ = NULL;
  ::memset(&field_of_view_horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_of_view_vertical_) -
      reinterpret_cast<char*>(&field_of_view_horizontal_)) + sizeof(field_of_view_vertical_));
  _internal_metadata_.Clear();
}

bool UltrasonicSensorViewConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.UltrasonicSensorViewConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier sensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MountingPosition mounting_position_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mounting_position_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_horizontal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double field_of_view_vertical = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &field_of_view_vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.UltrasonicSensorViewConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.UltrasonicSensorViewConfiguration)
  return false;
#undef DO_
}

void UltrasonicSensorViewConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.UltrasonicSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sensor_id_, output);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mounting_position_, output);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mounting_position_rmse_, output);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->field_of_view_horizontal(), output);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->field_of_view_vertical(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.UltrasonicSensorViewConfiguration)
}

::google::protobuf::uint8* UltrasonicSensorViewConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.UltrasonicSensorViewConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sensor_id_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mounting_position_, deterministic, target);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mounting_position_rmse_, deterministic, target);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->field_of_view_horizontal(), target);
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->field_of_view_vertical(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.UltrasonicSensorViewConfiguration)
  return target;
}

size_t UltrasonicSensorViewConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.UltrasonicSensorViewConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Identifier sensor_id = 1;
  if (this->has_sensor_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sensor_id_);
  }

  // .osi3.MountingPosition mounting_position = 2;
  if (this->has_mounting_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_);
  }

  // .osi3.MountingPosition mounting_position_rmse = 3;
  if (this->has_mounting_position_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mounting_position_rmse_);
  }

  // double field_of_view_horizontal = 4;
  if (this->field_of_view_horizontal() != 0) {
    total_size += 1 + 8;
  }

  // double field_of_view_vertical = 5;
  if (this->field_of_view_vertical() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UltrasonicSensorViewConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.UltrasonicSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const UltrasonicSensorViewConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UltrasonicSensorViewConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.UltrasonicSensorViewConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.UltrasonicSensorViewConfiguration)
    MergeFrom(*source);
  }
}

void UltrasonicSensorViewConfiguration::MergeFrom(const UltrasonicSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.UltrasonicSensorViewConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sensor_id()) {
    mutable_sensor_id()->::osi3::Identifier::MergeFrom(from.sensor_id());
  }
  if (from.has_mounting_position()) {
    mutable_mounting_position()->::osi3::MountingPosition::MergeFrom(from.mounting_position());
  }
  if (from.has_mounting_position_rmse()) {
    mutable_mounting_position_rmse()->::osi3::MountingPosition::MergeFrom(from.mounting_position_rmse());
  }
  if (from.field_of_view_horizontal() != 0) {
    set_field_of_view_horizontal(from.field_of_view_horizontal());
  }
  if (from.field_of_view_vertical() != 0) {
    set_field_of_view_vertical(from.field_of_view_vertical());
  }
}

void UltrasonicSensorViewConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.UltrasonicSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UltrasonicSensorViewConfiguration::CopyFrom(const UltrasonicSensorViewConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.UltrasonicSensorViewConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UltrasonicSensorViewConfiguration::IsInitialized() const {
  return true;
}

void UltrasonicSensorViewConfiguration::Swap(UltrasonicSensorViewConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UltrasonicSensorViewConfiguration::InternalSwap(UltrasonicSensorViewConfiguration* other) {
  using std::swap;
  swap(sensor_id_, other->sensor_id_);
  swap(mounting_position_, other->mounting_position_);
  swap(mounting_position_rmse_, other->mounting_position_rmse_);
  swap(field_of_view_horizontal_, other->field_of_view_horizontal_);
  swap(field_of_view_vertical_, other->field_of_view_vertical_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UltrasonicSensorViewConfiguration::GetMetadata() const {
  protobuf_osi_5fsensorviewconfiguration_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fsensorviewconfiguration_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
