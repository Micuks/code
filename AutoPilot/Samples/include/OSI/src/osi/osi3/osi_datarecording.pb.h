// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_datarecording.proto

#ifndef PROTOBUF_osi_5fdatarecording_2eproto__INCLUDED
#define PROTOBUF_osi_5fdatarecording_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "osi_sensordata.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_osi_5fdatarecording_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSensorDataSeriesImpl();
void InitDefaultsSensorDataSeries();
void InitDefaultsSensorDataSeriesListImpl();
void InitDefaultsSensorDataSeriesList();
inline void InitDefaults() {
  InitDefaultsSensorDataSeries();
  InitDefaultsSensorDataSeriesList();
}
}  // namespace protobuf_osi_5fdatarecording_2eproto
namespace osi3 {
class SensorDataSeries;
class SensorDataSeriesDefaultTypeInternal;
extern SensorDataSeriesDefaultTypeInternal _SensorDataSeries_default_instance_;
class SensorDataSeriesList;
class SensorDataSeriesListDefaultTypeInternal;
extern SensorDataSeriesListDefaultTypeInternal _SensorDataSeriesList_default_instance_;
}  // namespace osi3
namespace osi3 {

// ===================================================================

class SensorDataSeries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.SensorDataSeries) */ {
 public:
  SensorDataSeries();
  virtual ~SensorDataSeries();

  SensorDataSeries(const SensorDataSeries& from);

  inline SensorDataSeries& operator=(const SensorDataSeries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorDataSeries(SensorDataSeries&& from) noexcept
    : SensorDataSeries() {
    *this = ::std::move(from);
  }

  inline SensorDataSeries& operator=(SensorDataSeries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorDataSeries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorDataSeries* internal_default_instance() {
    return reinterpret_cast<const SensorDataSeries*>(
               &_SensorDataSeries_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SensorDataSeries* other);
  friend void swap(SensorDataSeries& a, SensorDataSeries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorDataSeries* New() const PROTOBUF_FINAL { return New(NULL); }

  SensorDataSeries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SensorDataSeries& from);
  void MergeFrom(const SensorDataSeries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SensorDataSeries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .osi3.SensorData sensor_data = 1;
  int sensor_data_size() const;
  void clear_sensor_data();
  static const int kSensorDataFieldNumber = 1;
  const ::osi3::SensorData& sensor_data(int index) const;
  ::osi3::SensorData* mutable_sensor_data(int index);
  ::osi3::SensorData* add_sensor_data();
  ::google::protobuf::RepeatedPtrField< ::osi3::SensorData >*
      mutable_sensor_data();
  const ::google::protobuf::RepeatedPtrField< ::osi3::SensorData >&
      sensor_data() const;

  // @@protoc_insertion_point(class_scope:osi3.SensorDataSeries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::SensorData > sensor_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdatarecording_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdatarecording_2eproto::InitDefaultsSensorDataSeriesImpl();
};
// -------------------------------------------------------------------

class SensorDataSeriesList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.SensorDataSeriesList) */ {
 public:
  SensorDataSeriesList();
  virtual ~SensorDataSeriesList();

  SensorDataSeriesList(const SensorDataSeriesList& from);

  inline SensorDataSeriesList& operator=(const SensorDataSeriesList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorDataSeriesList(SensorDataSeriesList&& from) noexcept
    : SensorDataSeriesList() {
    *this = ::std::move(from);
  }

  inline SensorDataSeriesList& operator=(SensorDataSeriesList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorDataSeriesList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorDataSeriesList* internal_default_instance() {
    return reinterpret_cast<const SensorDataSeriesList*>(
               &_SensorDataSeriesList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SensorDataSeriesList* other);
  friend void swap(SensorDataSeriesList& a, SensorDataSeriesList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorDataSeriesList* New() const PROTOBUF_FINAL { return New(NULL); }

  SensorDataSeriesList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SensorDataSeriesList& from);
  void MergeFrom(const SensorDataSeriesList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SensorDataSeriesList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .osi3.SensorDataSeries sensor = 1;
  int sensor_size() const;
  void clear_sensor();
  static const int kSensorFieldNumber = 1;
  const ::osi3::SensorDataSeries& sensor(int index) const;
  ::osi3::SensorDataSeries* mutable_sensor(int index);
  ::osi3::SensorDataSeries* add_sensor();
  ::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries >*
      mutable_sensor();
  const ::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries >&
      sensor() const;

  // @@protoc_insertion_point(class_scope:osi3.SensorDataSeriesList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries > sensor_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdatarecording_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdatarecording_2eproto::InitDefaultsSensorDataSeriesListImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SensorDataSeries

// repeated .osi3.SensorData sensor_data = 1;
inline int SensorDataSeries::sensor_data_size() const {
  return sensor_data_.size();
}
inline const ::osi3::SensorData& SensorDataSeries::sensor_data(int index) const {
  // @@protoc_insertion_point(field_get:osi3.SensorDataSeries.sensor_data)
  return sensor_data_.Get(index);
}
inline ::osi3::SensorData* SensorDataSeries::mutable_sensor_data(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.SensorDataSeries.sensor_data)
  return sensor_data_.Mutable(index);
}
inline ::osi3::SensorData* SensorDataSeries::add_sensor_data() {
  // @@protoc_insertion_point(field_add:osi3.SensorDataSeries.sensor_data)
  return sensor_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::SensorData >*
SensorDataSeries::mutable_sensor_data() {
  // @@protoc_insertion_point(field_mutable_list:osi3.SensorDataSeries.sensor_data)
  return &sensor_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::SensorData >&
SensorDataSeries::sensor_data() const {
  // @@protoc_insertion_point(field_list:osi3.SensorDataSeries.sensor_data)
  return sensor_data_;
}

// -------------------------------------------------------------------

// SensorDataSeriesList

// repeated .osi3.SensorDataSeries sensor = 1;
inline int SensorDataSeriesList::sensor_size() const {
  return sensor_.size();
}
inline void SensorDataSeriesList::clear_sensor() {
  sensor_.Clear();
}
inline const ::osi3::SensorDataSeries& SensorDataSeriesList::sensor(int index) const {
  // @@protoc_insertion_point(field_get:osi3.SensorDataSeriesList.sensor)
  return sensor_.Get(index);
}
inline ::osi3::SensorDataSeries* SensorDataSeriesList::mutable_sensor(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.SensorDataSeriesList.sensor)
  return sensor_.Mutable(index);
}
inline ::osi3::SensorDataSeries* SensorDataSeriesList::add_sensor() {
  // @@protoc_insertion_point(field_add:osi3.SensorDataSeriesList.sensor)
  return sensor_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries >*
SensorDataSeriesList::mutable_sensor() {
  // @@protoc_insertion_point(field_mutable_list:osi3.SensorDataSeriesList.sensor)
  return &sensor_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries >&
SensorDataSeriesList::sensor() const {
  // @@protoc_insertion_point(field_list:osi3.SensorDataSeriesList.sensor)
  return sensor_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fdatarecording_2eproto__INCLUDED
