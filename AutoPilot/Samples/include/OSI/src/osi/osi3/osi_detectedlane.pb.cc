// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedlane.proto

#include "osi_detectedlane.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class DetectedLane_CandidateLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedLane_CandidateLane>
      _instance;
} _DetectedLane_CandidateLane_default_instance_;
class DetectedLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedLane>
      _instance;
} _DetectedLane_default_instance_;
class DetectedLaneBoundary_CandidateLaneBoundaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedLaneBoundary_CandidateLaneBoundary>
      _instance;
} _DetectedLaneBoundary_CandidateLaneBoundary_default_instance_;
class DetectedLaneBoundaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedLaneBoundary>
      _instance;
} _DetectedLaneBoundary_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fdetectedlane_2eproto {
void InitDefaultsDetectedLane_CandidateLaneImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5flane_2eproto::InitDefaultsLane_Classification();
  {
    void* ptr = &::osi3::_DetectedLane_CandidateLane_default_instance_;
    new (ptr) ::osi3::DetectedLane_CandidateLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedLane_CandidateLane::InitAsDefaultInstance();
}

void InitDefaultsDetectedLane_CandidateLane() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedLane_CandidateLaneImpl);
}

void InitDefaultsDetectedLaneImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLane_CandidateLane();
  {
    void* ptr = &::osi3::_DetectedLane_default_instance_;
    new (ptr) ::osi3::DetectedLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedLane::InitAsDefaultInstance();
}

void InitDefaultsDetectedLane() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedLaneImpl);
}

void InitDefaultsDetectedLaneBoundary_CandidateLaneBoundaryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5flane_2eproto::InitDefaultsLaneBoundary_Classification();
  {
    void* ptr = &::osi3::_DetectedLaneBoundary_CandidateLaneBoundary_default_instance_;
    new (ptr) ::osi3::DetectedLaneBoundary_CandidateLaneBoundary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedLaneBoundary_CandidateLaneBoundary::InitAsDefaultInstance();
}

void InitDefaultsDetectedLaneBoundary_CandidateLaneBoundary() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedLaneBoundary_CandidateLaneBoundaryImpl);
}

void InitDefaultsDetectedLaneBoundaryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundary_CandidateLaneBoundary();
  protobuf_osi_5flane_2eproto::InitDefaultsLaneBoundary_BoundaryPoint();
  {
    void* ptr = &::osi3::_DetectedLaneBoundary_default_instance_;
    new (ptr) ::osi3::DetectedLaneBoundary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedLaneBoundary::InitAsDefaultInstance();
}

void InitDefaultsDetectedLaneBoundary() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedLaneBoundaryImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLane_CandidateLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLane_CandidateLane, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLane_CandidateLane, classification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLane, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLane, candidate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary_CandidateLaneBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary_CandidateLaneBoundary, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary_CandidateLaneBoundary, classification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary, candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary, boundary_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary, boundary_line_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedLaneBoundary, boundary_line_confidences_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::DetectedLane_CandidateLane)},
  { 7, -1, sizeof(::osi3::DetectedLane)},
  { 14, -1, sizeof(::osi3::DetectedLaneBoundary_CandidateLaneBoundary)},
  { 21, -1, sizeof(::osi3::DetectedLaneBoundary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedLane_CandidateLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedLaneBoundary_CandidateLaneBoundary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedLaneBoundary_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_detectedlane.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026osi_detectedlane.proto\022\004osi3\032\016osi_lane"
      ".proto\032\030osi_detectedobject.proto\"\306\001\n\014Det"
      "ectedLane\022(\n\006header\030\001 \001(\0132\030.osi3.Detecte"
      "dItemHeader\0223\n\tcandidate\030\002 \003(\0132 .osi3.De"
      "tectedLane.CandidateLane\032W\n\rCandidateLan"
      "e\022\023\n\013probability\030\001 \001(\001\0221\n\016classification"
      "\030\002 \001(\0132\031.osi3.Lane.Classification\"\210\003\n\024De"
      "tectedLaneBoundary\022(\n\006header\030\001 \001(\0132\030.osi"
      "3.DetectedItemHeader\022C\n\tcandidate\030\002 \003(\0132"
      "0.osi3.DetectedLaneBoundary.CandidateLan"
      "eBoundary\0227\n\rboundary_line\030\003 \003(\0132 .osi3."
      "LaneBoundary.BoundaryPoint\022<\n\022boundary_l"
      "ine_rmse\030\004 \003(\0132 .osi3.LaneBoundary.Bound"
      "aryPoint\022!\n\031boundary_line_confidences\030\005 "
      "\003(\001\032g\n\025CandidateLaneBoundary\022\023\n\013probabil"
      "ity\030\001 \001(\001\0229\n\016classification\030\002 \001(\0132!.osi3"
      ".LaneBoundary.ClassificationB\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 680);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_detectedlane.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5flane_2eproto::AddDescriptors();
  ::protobuf_osi_5fdetectedobject_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fdetectedlane_2eproto
namespace osi3 {

// ===================================================================

void DetectedLane_CandidateLane::InitAsDefaultInstance() {
  ::osi3::_DetectedLane_CandidateLane_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::Lane_Classification*>(
      ::osi3::Lane_Classification::internal_default_instance());
}
void DetectedLane_CandidateLane::clear_classification() {
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedLane_CandidateLane::kProbabilityFieldNumber;
const int DetectedLane_CandidateLane::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedLane_CandidateLane::DetectedLane_CandidateLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLane_CandidateLane();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedLane.CandidateLane)
}
DetectedLane_CandidateLane::DetectedLane_CandidateLane(const DetectedLane_CandidateLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_classification()) {
    classification_ = new ::osi3::Lane_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedLane.CandidateLane)
}

void DetectedLane_CandidateLane::SharedCtor() {
  ::memset(&classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&classification_)) + sizeof(probability_));
  _cached_size_ = 0;
}

DetectedLane_CandidateLane::~DetectedLane_CandidateLane() {
  // @@protoc_insertion_point(destructor:osi3.DetectedLane.CandidateLane)
  SharedDtor();
}

void DetectedLane_CandidateLane::SharedDtor() {
  if (this != internal_default_instance()) delete classification_;
}

void DetectedLane_CandidateLane::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedLane_CandidateLane::descriptor() {
  ::protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedLane_CandidateLane& DetectedLane_CandidateLane::default_instance() {
  ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLane_CandidateLane();
  return *internal_default_instance();
}

DetectedLane_CandidateLane* DetectedLane_CandidateLane::New(::google::protobuf::Arena* arena) const {
  DetectedLane_CandidateLane* n = new DetectedLane_CandidateLane;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedLane_CandidateLane::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedLane.CandidateLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedLane_CandidateLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedLane.CandidateLane)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Lane.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedLane.CandidateLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedLane.CandidateLane)
  return false;
#undef DO_
}

void DetectedLane_CandidateLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedLane.CandidateLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.Lane.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedLane.CandidateLane)
}

::google::protobuf::uint8* DetectedLane_CandidateLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedLane.CandidateLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.Lane.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedLane.CandidateLane)
  return target;
}

size_t DetectedLane_CandidateLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedLane.CandidateLane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Lane.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedLane_CandidateLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedLane.CandidateLane)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedLane_CandidateLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedLane_CandidateLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedLane.CandidateLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedLane.CandidateLane)
    MergeFrom(*source);
  }
}

void DetectedLane_CandidateLane::MergeFrom(const DetectedLane_CandidateLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedLane.CandidateLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_classification()) {
    mutable_classification()->::osi3::Lane_Classification::MergeFrom(from.classification());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void DetectedLane_CandidateLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedLane.CandidateLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedLane_CandidateLane::CopyFrom(const DetectedLane_CandidateLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedLane.CandidateLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedLane_CandidateLane::IsInitialized() const {
  return true;
}

void DetectedLane_CandidateLane::Swap(DetectedLane_CandidateLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedLane_CandidateLane::InternalSwap(DetectedLane_CandidateLane* other) {
  using std::swap;
  swap(classification_, other->classification_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedLane_CandidateLane::GetMetadata() const {
  protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedLane::InitAsDefaultInstance() {
  ::osi3::_DetectedLane_default_instance_._instance.get_mutable()->header_ = const_cast< ::osi3::DetectedItemHeader*>(
      ::osi3::DetectedItemHeader::internal_default_instance());
}
void DetectedLane::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedLane::kHeaderFieldNumber;
const int DetectedLane::kCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedLane::DetectedLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLane();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedLane)
}
DetectedLane::DetectedLane(const DetectedLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::osi3::DetectedItemHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedLane)
}

void DetectedLane::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

DetectedLane::~DetectedLane() {
  // @@protoc_insertion_point(destructor:osi3.DetectedLane)
  SharedDtor();
}

void DetectedLane::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void DetectedLane::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedLane::descriptor() {
  ::protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedLane& DetectedLane::default_instance() {
  ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLane();
  return *internal_default_instance();
}

DetectedLane* DetectedLane::New(::google::protobuf::Arena* arena) const {
  DetectedLane* n = new DetectedLane;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedLane::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectedLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedLane)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.DetectedLane.CandidateLane candidate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedLane)
  return false;
#undef DO_
}

void DetectedLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .osi3.DetectedLane.CandidateLane candidate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->candidate(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedLane)
}

::google::protobuf::uint8* DetectedLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .osi3.DetectedLane.CandidateLane candidate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedLane)
  return target;
}

size_t DetectedLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedLane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedLane.CandidateLane candidate = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedLane)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedLane)
    MergeFrom(*source);
  }
}

void DetectedLane::MergeFrom(const DetectedLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.has_header()) {
    mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
  }
}

void DetectedLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedLane::CopyFrom(const DetectedLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedLane::IsInitialized() const {
  return true;
}

void DetectedLane::Swap(DetectedLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedLane::InternalSwap(DetectedLane* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedLane::GetMetadata() const {
  protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedLaneBoundary_CandidateLaneBoundary::InitAsDefaultInstance() {
  ::osi3::_DetectedLaneBoundary_CandidateLaneBoundary_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::LaneBoundary_Classification*>(
      ::osi3::LaneBoundary_Classification::internal_default_instance());
}
void DetectedLaneBoundary_CandidateLaneBoundary::clear_classification() {
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedLaneBoundary_CandidateLaneBoundary::kProbabilityFieldNumber;
const int DetectedLaneBoundary_CandidateLaneBoundary::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedLaneBoundary_CandidateLaneBoundary::DetectedLaneBoundary_CandidateLaneBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundary_CandidateLaneBoundary();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
}
DetectedLaneBoundary_CandidateLaneBoundary::DetectedLaneBoundary_CandidateLaneBoundary(const DetectedLaneBoundary_CandidateLaneBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_classification()) {
    classification_ = new ::osi3::LaneBoundary_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
}

void DetectedLaneBoundary_CandidateLaneBoundary::SharedCtor() {
  ::memset(&classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&classification_)) + sizeof(probability_));
  _cached_size_ = 0;
}

DetectedLaneBoundary_CandidateLaneBoundary::~DetectedLaneBoundary_CandidateLaneBoundary() {
  // @@protoc_insertion_point(destructor:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  SharedDtor();
}

void DetectedLaneBoundary_CandidateLaneBoundary::SharedDtor() {
  if (this != internal_default_instance()) delete classification_;
}

void DetectedLaneBoundary_CandidateLaneBoundary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedLaneBoundary_CandidateLaneBoundary::descriptor() {
  ::protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedLaneBoundary_CandidateLaneBoundary& DetectedLaneBoundary_CandidateLaneBoundary::default_instance() {
  ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundary_CandidateLaneBoundary();
  return *internal_default_instance();
}

DetectedLaneBoundary_CandidateLaneBoundary* DetectedLaneBoundary_CandidateLaneBoundary::New(::google::protobuf::Arena* arena) const {
  DetectedLaneBoundary_CandidateLaneBoundary* n = new DetectedLaneBoundary_CandidateLaneBoundary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedLaneBoundary_CandidateLaneBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedLaneBoundary_CandidateLaneBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.LaneBoundary.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  return false;
#undef DO_
}

void DetectedLaneBoundary_CandidateLaneBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.LaneBoundary.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
}

::google::protobuf::uint8* DetectedLaneBoundary_CandidateLaneBoundary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.LaneBoundary.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  return target;
}

size_t DetectedLaneBoundary_CandidateLaneBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.LaneBoundary.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedLaneBoundary_CandidateLaneBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedLaneBoundary_CandidateLaneBoundary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedLaneBoundary_CandidateLaneBoundary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
    MergeFrom(*source);
  }
}

void DetectedLaneBoundary_CandidateLaneBoundary::MergeFrom(const DetectedLaneBoundary_CandidateLaneBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_classification()) {
    mutable_classification()->::osi3::LaneBoundary_Classification::MergeFrom(from.classification());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void DetectedLaneBoundary_CandidateLaneBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedLaneBoundary_CandidateLaneBoundary::CopyFrom(const DetectedLaneBoundary_CandidateLaneBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedLaneBoundary.CandidateLaneBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedLaneBoundary_CandidateLaneBoundary::IsInitialized() const {
  return true;
}

void DetectedLaneBoundary_CandidateLaneBoundary::Swap(DetectedLaneBoundary_CandidateLaneBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedLaneBoundary_CandidateLaneBoundary::InternalSwap(DetectedLaneBoundary_CandidateLaneBoundary* other) {
  using std::swap;
  swap(classification_, other->classification_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedLaneBoundary_CandidateLaneBoundary::GetMetadata() const {
  protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedLaneBoundary::InitAsDefaultInstance() {
  ::osi3::_DetectedLaneBoundary_default_instance_._instance.get_mutable()->header_ = const_cast< ::osi3::DetectedItemHeader*>(
      ::osi3::DetectedItemHeader::internal_default_instance());
}
void DetectedLaneBoundary::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void DetectedLaneBoundary::clear_boundary_line() {
  boundary_line_.Clear();
}
void DetectedLaneBoundary::clear_boundary_line_rmse() {
  boundary_line_rmse_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedLaneBoundary::kHeaderFieldNumber;
const int DetectedLaneBoundary::kCandidateFieldNumber;
const int DetectedLaneBoundary::kBoundaryLineFieldNumber;
const int DetectedLaneBoundary::kBoundaryLineRmseFieldNumber;
const int DetectedLaneBoundary::kBoundaryLineConfidencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedLaneBoundary::DetectedLaneBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundary();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedLaneBoundary)
}
DetectedLaneBoundary::DetectedLaneBoundary(const DetectedLaneBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      boundary_line_(from.boundary_line_),
      boundary_line_rmse_(from.boundary_line_rmse_),
      boundary_line_confidences_(from.boundary_line_confidences_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::osi3::DetectedItemHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedLaneBoundary)
}

void DetectedLaneBoundary::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

DetectedLaneBoundary::~DetectedLaneBoundary() {
  // @@protoc_insertion_point(destructor:osi3.DetectedLaneBoundary)
  SharedDtor();
}

void DetectedLaneBoundary::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void DetectedLaneBoundary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedLaneBoundary::descriptor() {
  ::protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedLaneBoundary& DetectedLaneBoundary::default_instance() {
  ::protobuf_osi_5fdetectedlane_2eproto::InitDefaultsDetectedLaneBoundary();
  return *internal_default_instance();
}

DetectedLaneBoundary* DetectedLaneBoundary::New(::google::protobuf::Arena* arena) const {
  DetectedLaneBoundary* n = new DetectedLaneBoundary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedLaneBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedLaneBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  boundary_line_.Clear();
  boundary_line_rmse_.Clear();
  boundary_line_confidences_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectedLaneBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedLaneBoundary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.DetectedLaneBoundary.CandidateLaneBoundary candidate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_boundary_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line_rmse = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_boundary_line_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double boundary_line_confidences = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_boundary_line_confidences())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 42u, input, this->mutable_boundary_line_confidences())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedLaneBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedLaneBoundary)
  return false;
#undef DO_
}

void DetectedLaneBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedLaneBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .osi3.DetectedLaneBoundary.CandidateLaneBoundary candidate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->candidate(static_cast<int>(i)), output);
  }

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_line_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->boundary_line(static_cast<int>(i)), output);
  }

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line_rmse = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_line_rmse_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->boundary_line_rmse(static_cast<int>(i)), output);
  }

  // repeated double boundary_line_confidences = 5;
  if (this->boundary_line_confidences_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _boundary_line_confidences_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->boundary_line_confidences().data(), this->boundary_line_confidences_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedLaneBoundary)
}

::google::protobuf::uint8* DetectedLaneBoundary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedLaneBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .osi3.DetectedLaneBoundary.CandidateLaneBoundary candidate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_line_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->boundary_line(static_cast<int>(i)), deterministic, target);
  }

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line_rmse = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_line_rmse_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->boundary_line_rmse(static_cast<int>(i)), deterministic, target);
  }

  // repeated double boundary_line_confidences = 5;
  if (this->boundary_line_confidences_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _boundary_line_confidences_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->boundary_line_confidences_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedLaneBoundary)
  return target;
}

size_t DetectedLaneBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedLaneBoundary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedLaneBoundary.CandidateLaneBoundary candidate = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_line_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary_line(static_cast<int>(i)));
    }
  }

  // repeated .osi3.LaneBoundary.BoundaryPoint boundary_line_rmse = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_line_rmse_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary_line_rmse(static_cast<int>(i)));
    }
  }

  // repeated double boundary_line_confidences = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_line_confidences_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _boundary_line_confidences_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedLaneBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedLaneBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedLaneBoundary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedLaneBoundary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedLaneBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedLaneBoundary)
    MergeFrom(*source);
  }
}

void DetectedLaneBoundary::MergeFrom(const DetectedLaneBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedLaneBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  boundary_line_.MergeFrom(from.boundary_line_);
  boundary_line_rmse_.MergeFrom(from.boundary_line_rmse_);
  boundary_line_confidences_.MergeFrom(from.boundary_line_confidences_);
  if (from.has_header()) {
    mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
  }
}

void DetectedLaneBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedLaneBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedLaneBoundary::CopyFrom(const DetectedLaneBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedLaneBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedLaneBoundary::IsInitialized() const {
  return true;
}

void DetectedLaneBoundary::Swap(DetectedLaneBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedLaneBoundary::InternalSwap(DetectedLaneBoundary* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  boundary_line_.InternalSwap(&other->boundary_line_);
  boundary_line_rmse_.InternalSwap(&other->boundary_line_rmse_);
  boundary_line_confidences_.InternalSwap(&other->boundary_line_confidences_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedLaneBoundary::GetMetadata() const {
  protobuf_osi_5fdetectedlane_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedlane_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
