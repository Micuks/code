// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_occupant.proto

#include "osi_occupant.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class Occupant_ClassificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Occupant_Classification>
      _instance;
} _Occupant_Classification_default_instance_;
class OccupantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Occupant>
      _instance;
} _Occupant_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5foccupant_2eproto {
void InitDefaultsOccupant_ClassificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::osi3::_Occupant_Classification_default_instance_;
    new (ptr) ::osi3::Occupant_Classification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Occupant_Classification::InitAsDefaultInstance();
}

void InitDefaultsOccupant_Classification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOccupant_ClassificationImpl);
}

void InitDefaultsOccupantImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  protobuf_osi_5foccupant_2eproto::InitDefaultsOccupant_Classification();
  {
    void* ptr = &::osi3::_Occupant_default_instance_;
    new (ptr) ::osi3::Occupant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::Occupant::InitAsDefaultInstance();
}

void InitDefaultsOccupant() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOccupantImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant_Classification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant_Classification, is_driver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant_Classification, seat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant_Classification, steering_control_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::Occupant, classification_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::Occupant_Classification)},
  { 8, -1, sizeof(::osi3::Occupant)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Occupant_Classification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_Occupant_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_occupant.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022osi_occupant.proto\022\004osi3\032\020osi_common.p"
      "roto\"\347\005\n\010Occupant\022\034\n\002id\030\001 \001(\0132\020.osi3.Ide"
      "ntifier\0225\n\016classification\030\002 \001(\0132\035.osi3.O"
      "ccupant.Classification\032\205\005\n\016Classificatio"
      "n\022\021\n\tis_driver\030\002 \001(\010\0220\n\004seat\030\003 \001(\0162\".osi"
      "3.Occupant.Classification.Seat\022G\n\020steeri"
      "ng_control\030\004 \001(\0162-.osi3.Occupant.Classif"
      "ication.SteeringControl\"\367\001\n\004Seat\022\020\n\014SEAT"
      "_UNKNOWN\020\000\022\016\n\nSEAT_OTHER\020\001\022\023\n\017SEAT_FRONT"
      "_LEFT\020\002\022\024\n\020SEAT_FRONT_RIGHT\020\003\022\025\n\021SEAT_FR"
      "ONT_MIDDLE\020\004\022\022\n\016SEAT_BACK_LEFT\020\005\022\023\n\017SEAT"
      "_BACK_RIGHT\020\006\022\024\n\020SEAT_BACK_MIDDLE\020\007\022\027\n\023S"
      "EAT_THIRD_ROW_LEFT\020\010\022\030\n\024SEAT_THIRD_ROW_R"
      "IGHT\020\t\022\031\n\025SEAT_THIRD_ROW_MIDDLE\020\n\"\352\001\n\017St"
      "eeringControl\022\034\n\030STEERING_CONTROL_UNKNOW"
      "N\020\000\022\032\n\026STEERING_CONTROL_OTHER\020\001\022\034\n\030STEER"
      "ING_CONTROL_NO_HAND\020\002\022\035\n\031STEERING_CONTRO"
      "L_ONE_HAND\020\003\022\037\n\033STEERING_CONTROL_BOTH_HA"
      "NDS\020\004\022\036\n\032STEERING_CONTROL_LEFT_HAND\020\005\022\037\n"
      "\033STEERING_CONTROL_RIGHT_HAND\020\006B\002H\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 802);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_occupant.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5foccupant_2eproto
namespace osi3 {
const ::google::protobuf::EnumDescriptor* Occupant_Classification_Seat_descriptor() {
  protobuf_osi_5foccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5foccupant_2eproto::file_level_enum_descriptors[0];
}
bool Occupant_Classification_Seat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Occupant_Classification_Seat Occupant_Classification::SEAT_UNKNOWN;
const Occupant_Classification_Seat Occupant_Classification::SEAT_OTHER;
const Occupant_Classification_Seat Occupant_Classification::SEAT_FRONT_LEFT;
const Occupant_Classification_Seat Occupant_Classification::SEAT_FRONT_RIGHT;
const Occupant_Classification_Seat Occupant_Classification::SEAT_FRONT_MIDDLE;
const Occupant_Classification_Seat Occupant_Classification::SEAT_BACK_LEFT;
const Occupant_Classification_Seat Occupant_Classification::SEAT_BACK_RIGHT;
const Occupant_Classification_Seat Occupant_Classification::SEAT_BACK_MIDDLE;
const Occupant_Classification_Seat Occupant_Classification::SEAT_THIRD_ROW_LEFT;
const Occupant_Classification_Seat Occupant_Classification::SEAT_THIRD_ROW_RIGHT;
const Occupant_Classification_Seat Occupant_Classification::SEAT_THIRD_ROW_MIDDLE;
const Occupant_Classification_Seat Occupant_Classification::Seat_MIN;
const Occupant_Classification_Seat Occupant_Classification::Seat_MAX;
const int Occupant_Classification::Seat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Occupant_Classification_SteeringControl_descriptor() {
  protobuf_osi_5foccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5foccupant_2eproto::file_level_enum_descriptors[1];
}
bool Occupant_Classification_SteeringControl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_UNKNOWN;
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_OTHER;
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_NO_HAND;
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_ONE_HAND;
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_BOTH_HANDS;
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_LEFT_HAND;
const Occupant_Classification_SteeringControl Occupant_Classification::STEERING_CONTROL_RIGHT_HAND;
const Occupant_Classification_SteeringControl Occupant_Classification::SteeringControl_MIN;
const Occupant_Classification_SteeringControl Occupant_Classification::SteeringControl_MAX;
const int Occupant_Classification::SteeringControl_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Occupant_Classification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Occupant_Classification::kIsDriverFieldNumber;
const int Occupant_Classification::kSeatFieldNumber;
const int Occupant_Classification::kSteeringControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Occupant_Classification::Occupant_Classification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5foccupant_2eproto::InitDefaultsOccupant_Classification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Occupant.Classification)
}
Occupant_Classification::Occupant_Classification(const Occupant_Classification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_driver_, &from.is_driver_,
    static_cast<size_t>(reinterpret_cast<char*>(&steering_control_) -
    reinterpret_cast<char*>(&is_driver_)) + sizeof(steering_control_));
  // @@protoc_insertion_point(copy_constructor:osi3.Occupant.Classification)
}

void Occupant_Classification::SharedCtor() {
  ::memset(&is_driver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steering_control_) -
      reinterpret_cast<char*>(&is_driver_)) + sizeof(steering_control_));
  _cached_size_ = 0;
}

Occupant_Classification::~Occupant_Classification() {
  // @@protoc_insertion_point(destructor:osi3.Occupant.Classification)
  SharedDtor();
}

void Occupant_Classification::SharedDtor() {
}

void Occupant_Classification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Occupant_Classification::descriptor() {
  ::protobuf_osi_5foccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5foccupant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Occupant_Classification& Occupant_Classification::default_instance() {
  ::protobuf_osi_5foccupant_2eproto::InitDefaultsOccupant_Classification();
  return *internal_default_instance();
}

Occupant_Classification* Occupant_Classification::New(::google::protobuf::Arena* arena) const {
  Occupant_Classification* n = new Occupant_Classification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Occupant_Classification::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Occupant.Classification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_driver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steering_control_) -
      reinterpret_cast<char*>(&is_driver_)) + sizeof(steering_control_));
  _internal_metadata_.Clear();
}

bool Occupant_Classification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Occupant.Classification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_driver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_driver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Occupant.Classification.Seat seat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_seat(static_cast< ::osi3::Occupant_Classification_Seat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Occupant.Classification.SteeringControl steering_control = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_steering_control(static_cast< ::osi3::Occupant_Classification_SteeringControl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Occupant.Classification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Occupant.Classification)
  return false;
#undef DO_
}

void Occupant_Classification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Occupant.Classification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_driver = 2;
  if (this->is_driver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_driver(), output);
  }

  // .osi3.Occupant.Classification.Seat seat = 3;
  if (this->seat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->seat(), output);
  }

  // .osi3.Occupant.Classification.SteeringControl steering_control = 4;
  if (this->steering_control() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->steering_control(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Occupant.Classification)
}

::google::protobuf::uint8* Occupant_Classification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Occupant.Classification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_driver = 2;
  if (this->is_driver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_driver(), target);
  }

  // .osi3.Occupant.Classification.Seat seat = 3;
  if (this->seat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->seat(), target);
  }

  // .osi3.Occupant.Classification.SteeringControl steering_control = 4;
  if (this->steering_control() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->steering_control(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Occupant.Classification)
  return target;
}

size_t Occupant_Classification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Occupant.Classification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_driver = 2;
  if (this->is_driver() != 0) {
    total_size += 1 + 1;
  }

  // .osi3.Occupant.Classification.Seat seat = 3;
  if (this->seat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->seat());
  }

  // .osi3.Occupant.Classification.SteeringControl steering_control = 4;
  if (this->steering_control() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->steering_control());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Occupant_Classification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Occupant.Classification)
  GOOGLE_DCHECK_NE(&from, this);
  const Occupant_Classification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Occupant_Classification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Occupant.Classification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Occupant.Classification)
    MergeFrom(*source);
  }
}

void Occupant_Classification::MergeFrom(const Occupant_Classification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Occupant.Classification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_driver() != 0) {
    set_is_driver(from.is_driver());
  }
  if (from.seat() != 0) {
    set_seat(from.seat());
  }
  if (from.steering_control() != 0) {
    set_steering_control(from.steering_control());
  }
}

void Occupant_Classification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Occupant.Classification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Occupant_Classification::CopyFrom(const Occupant_Classification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Occupant.Classification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Occupant_Classification::IsInitialized() const {
  return true;
}

void Occupant_Classification::Swap(Occupant_Classification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Occupant_Classification::InternalSwap(Occupant_Classification* other) {
  using std::swap;
  swap(is_driver_, other->is_driver_);
  swap(seat_, other->seat_);
  swap(steering_control_, other->steering_control_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Occupant_Classification::GetMetadata() const {
  protobuf_osi_5foccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5foccupant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Occupant::InitAsDefaultInstance() {
  ::osi3::_Occupant_default_instance_._instance.get_mutable()->id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
  ::osi3::_Occupant_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::Occupant_Classification*>(
      ::osi3::Occupant_Classification::internal_default_instance());
}
void Occupant::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Occupant::kIdFieldNumber;
const int Occupant::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Occupant::Occupant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5foccupant_2eproto::InitDefaultsOccupant();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.Occupant)
}
Occupant::Occupant(const Occupant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::osi3::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_classification()) {
    classification_ = new ::osi3::Occupant_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.Occupant)
}

void Occupant::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&classification_) -
      reinterpret_cast<char*>(&id_)) + sizeof(classification_));
  _cached_size_ = 0;
}

Occupant::~Occupant() {
  // @@protoc_insertion_point(destructor:osi3.Occupant)
  SharedDtor();
}

void Occupant::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete classification_;
}

void Occupant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Occupant::descriptor() {
  ::protobuf_osi_5foccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5foccupant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Occupant& Occupant::default_instance() {
  ::protobuf_osi_5foccupant_2eproto::InitDefaultsOccupant();
  return *internal_default_instance();
}

Occupant* Occupant::New(::google::protobuf::Arena* arena) const {
  Occupant* n = new Occupant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Occupant::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.Occupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  _internal_metadata_.Clear();
}

bool Occupant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.Occupant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Occupant.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.Occupant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.Occupant)
  return false;
#undef DO_
}

void Occupant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.Occupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // .osi3.Occupant.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.Occupant)
}

::google::protobuf::uint8* Occupant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.Occupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  // .osi3.Occupant.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.Occupant)
  return target;
}

size_t Occupant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.Occupant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  // .osi3.Occupant.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Occupant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.Occupant)
  GOOGLE_DCHECK_NE(&from, this);
  const Occupant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Occupant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.Occupant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.Occupant)
    MergeFrom(*source);
  }
}

void Occupant::MergeFrom(const Occupant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.Occupant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::osi3::Identifier::MergeFrom(from.id());
  }
  if (from.has_classification()) {
    mutable_classification()->::osi3::Occupant_Classification::MergeFrom(from.classification());
  }
}

void Occupant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.Occupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Occupant::CopyFrom(const Occupant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.Occupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Occupant::IsInitialized() const {
  return true;
}

void Occupant::Swap(Occupant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Occupant::InternalSwap(Occupant* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(classification_, other->classification_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Occupant::GetMetadata() const {
  protobuf_osi_5foccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5foccupant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
