// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedobject.proto

#ifndef PROTOBUF_osi_5fdetectedobject_2eproto__INCLUDED
#define PROTOBUF_osi_5fdetectedobject_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "osi_common.pb.h"
#include "osi_object.pb.h"
#include "osi_sensorspecific.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_osi_5fdetectedobject_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDetectedItemHeaderImpl();
void InitDefaultsDetectedItemHeader();
void InitDefaultsDetectedStationaryObject_CandidateStationaryObjectImpl();
void InitDefaultsDetectedStationaryObject_CandidateStationaryObject();
void InitDefaultsDetectedStationaryObjectImpl();
void InitDefaultsDetectedStationaryObject();
void InitDefaultsDetectedMovingObject_CandidateMovingObjectImpl();
void InitDefaultsDetectedMovingObject_CandidateMovingObject();
void InitDefaultsDetectedMovingObjectImpl();
void InitDefaultsDetectedMovingObject();
inline void InitDefaults() {
  InitDefaultsDetectedItemHeader();
  InitDefaultsDetectedStationaryObject_CandidateStationaryObject();
  InitDefaultsDetectedStationaryObject();
  InitDefaultsDetectedMovingObject_CandidateMovingObject();
  InitDefaultsDetectedMovingObject();
}
}  // namespace protobuf_osi_5fdetectedobject_2eproto
namespace osi3 {
class DetectedItemHeader;
class DetectedItemHeaderDefaultTypeInternal;
extern DetectedItemHeaderDefaultTypeInternal _DetectedItemHeader_default_instance_;
class DetectedMovingObject;
class DetectedMovingObjectDefaultTypeInternal;
extern DetectedMovingObjectDefaultTypeInternal _DetectedMovingObject_default_instance_;
class DetectedMovingObject_CandidateMovingObject;
class DetectedMovingObject_CandidateMovingObjectDefaultTypeInternal;
extern DetectedMovingObject_CandidateMovingObjectDefaultTypeInternal _DetectedMovingObject_CandidateMovingObject_default_instance_;
class DetectedStationaryObject;
class DetectedStationaryObjectDefaultTypeInternal;
extern DetectedStationaryObjectDefaultTypeInternal _DetectedStationaryObject_default_instance_;
class DetectedStationaryObject_CandidateStationaryObject;
class DetectedStationaryObject_CandidateStationaryObjectDefaultTypeInternal;
extern DetectedStationaryObject_CandidateStationaryObjectDefaultTypeInternal _DetectedStationaryObject_CandidateStationaryObject_default_instance_;
}  // namespace osi3
namespace osi3 {

enum DetectedItemHeader_MeasurementState {
  DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_UNKNOWN = 0,
  DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_OTHER = 1,
  DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_MEASURED = 2,
  DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_PREDICTED = 3,
  DetectedItemHeader_MeasurementState_DetectedItemHeader_MeasurementState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectedItemHeader_MeasurementState_DetectedItemHeader_MeasurementState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectedItemHeader_MeasurementState_IsValid(int value);
const DetectedItemHeader_MeasurementState DetectedItemHeader_MeasurementState_MeasurementState_MIN = DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_UNKNOWN;
const DetectedItemHeader_MeasurementState DetectedItemHeader_MeasurementState_MeasurementState_MAX = DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_PREDICTED;
const int DetectedItemHeader_MeasurementState_MeasurementState_ARRAYSIZE = DetectedItemHeader_MeasurementState_MeasurementState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectedItemHeader_MeasurementState_descriptor();
inline const ::std::string& DetectedItemHeader_MeasurementState_Name(DetectedItemHeader_MeasurementState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectedItemHeader_MeasurementState_descriptor(), value);
}
inline bool DetectedItemHeader_MeasurementState_Parse(
    const ::std::string& name, DetectedItemHeader_MeasurementState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectedItemHeader_MeasurementState>(
    DetectedItemHeader_MeasurementState_descriptor(), name, value);
}
enum DetectedMovingObject_ReferencePoint {
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_UNKNOWN = 0,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_OTHER = 1,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_CENTER = 2,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_MIDDLE_LEFT = 3,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_MIDDLE_RIGHT = 4,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_REAR_MIDDLE = 5,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_REAR_LEFT = 6,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_REAR_RIGHT = 7,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_MIDDLE = 8,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_LEFT = 9,
  DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_RIGHT = 10,
  DetectedMovingObject_ReferencePoint_DetectedMovingObject_ReferencePoint_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectedMovingObject_ReferencePoint_DetectedMovingObject_ReferencePoint_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectedMovingObject_ReferencePoint_IsValid(int value);
const DetectedMovingObject_ReferencePoint DetectedMovingObject_ReferencePoint_ReferencePoint_MIN = DetectedMovingObject_ReferencePoint_REFERENCE_POINT_UNKNOWN;
const DetectedMovingObject_ReferencePoint DetectedMovingObject_ReferencePoint_ReferencePoint_MAX = DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_RIGHT;
const int DetectedMovingObject_ReferencePoint_ReferencePoint_ARRAYSIZE = DetectedMovingObject_ReferencePoint_ReferencePoint_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectedMovingObject_ReferencePoint_descriptor();
inline const ::std::string& DetectedMovingObject_ReferencePoint_Name(DetectedMovingObject_ReferencePoint value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectedMovingObject_ReferencePoint_descriptor(), value);
}
inline bool DetectedMovingObject_ReferencePoint_Parse(
    const ::std::string& name, DetectedMovingObject_ReferencePoint* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectedMovingObject_ReferencePoint>(
    DetectedMovingObject_ReferencePoint_descriptor(), name, value);
}
enum DetectedMovingObject_MovementState {
  DetectedMovingObject_MovementState_MOVEMENT_STATE_UNKNOWN = 0,
  DetectedMovingObject_MovementState_MOVEMENT_STATE_OTHER = 1,
  DetectedMovingObject_MovementState_MOVEMENT_STATE_STATIONARY = 2,
  DetectedMovingObject_MovementState_MOVEMENT_STATE_MOVING = 3,
  DetectedMovingObject_MovementState_MOVEMENT_STATE_STOPPED = 4,
  DetectedMovingObject_MovementState_DetectedMovingObject_MovementState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectedMovingObject_MovementState_DetectedMovingObject_MovementState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectedMovingObject_MovementState_IsValid(int value);
const DetectedMovingObject_MovementState DetectedMovingObject_MovementState_MovementState_MIN = DetectedMovingObject_MovementState_MOVEMENT_STATE_UNKNOWN;
const DetectedMovingObject_MovementState DetectedMovingObject_MovementState_MovementState_MAX = DetectedMovingObject_MovementState_MOVEMENT_STATE_STOPPED;
const int DetectedMovingObject_MovementState_MovementState_ARRAYSIZE = DetectedMovingObject_MovementState_MovementState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectedMovingObject_MovementState_descriptor();
inline const ::std::string& DetectedMovingObject_MovementState_Name(DetectedMovingObject_MovementState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectedMovingObject_MovementState_descriptor(), value);
}
inline bool DetectedMovingObject_MovementState_Parse(
    const ::std::string& name, DetectedMovingObject_MovementState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectedMovingObject_MovementState>(
    DetectedMovingObject_MovementState_descriptor(), name, value);
}
// ===================================================================

class DetectedItemHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedItemHeader) */ {
 public:
  DetectedItemHeader();
  virtual ~DetectedItemHeader();

  DetectedItemHeader(const DetectedItemHeader& from);

  inline DetectedItemHeader& operator=(const DetectedItemHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedItemHeader(DetectedItemHeader&& from) noexcept
    : DetectedItemHeader() {
    *this = ::std::move(from);
  }

  inline DetectedItemHeader& operator=(DetectedItemHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedItemHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedItemHeader* internal_default_instance() {
    return reinterpret_cast<const DetectedItemHeader*>(
               &_DetectedItemHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DetectedItemHeader* other);
  friend void swap(DetectedItemHeader& a, DetectedItemHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedItemHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedItemHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedItemHeader& from);
  void MergeFrom(const DetectedItemHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedItemHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedItemHeader_MeasurementState MeasurementState;
  static const MeasurementState MEASUREMENT_STATE_UNKNOWN =
    DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_UNKNOWN;
  static const MeasurementState MEASUREMENT_STATE_OTHER =
    DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_OTHER;
  static const MeasurementState MEASUREMENT_STATE_MEASURED =
    DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_MEASURED;
  static const MeasurementState MEASUREMENT_STATE_PREDICTED =
    DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_PREDICTED;
  static inline bool MeasurementState_IsValid(int value) {
    return DetectedItemHeader_MeasurementState_IsValid(value);
  }
  static const MeasurementState MeasurementState_MIN =
    DetectedItemHeader_MeasurementState_MeasurementState_MIN;
  static const MeasurementState MeasurementState_MAX =
    DetectedItemHeader_MeasurementState_MeasurementState_MAX;
  static const int MeasurementState_ARRAYSIZE =
    DetectedItemHeader_MeasurementState_MeasurementState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MeasurementState_descriptor() {
    return DetectedItemHeader_MeasurementState_descriptor();
  }
  static inline const ::std::string& MeasurementState_Name(MeasurementState value) {
    return DetectedItemHeader_MeasurementState_Name(value);
  }
  static inline bool MeasurementState_Parse(const ::std::string& name,
      MeasurementState* value) {
    return DetectedItemHeader_MeasurementState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .osi3.Identifier ground_truth_id = 2;
  int ground_truth_id_size() const;
  void clear_ground_truth_id();
  static const int kGroundTruthIdFieldNumber = 2;
  const ::osi3::Identifier& ground_truth_id(int index) const;
  ::osi3::Identifier* mutable_ground_truth_id(int index);
  ::osi3::Identifier* add_ground_truth_id();
  ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >*
      mutable_ground_truth_id();
  const ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >&
      ground_truth_id() const;

  // repeated .osi3.Identifier sensor_id = 6;
  int sensor_id_size() const;
  void clear_sensor_id();
  static const int kSensorIdFieldNumber = 6;
  const ::osi3::Identifier& sensor_id(int index) const;
  ::osi3::Identifier* mutable_sensor_id(int index);
  ::osi3::Identifier* add_sensor_id();
  ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >*
      mutable_sensor_id();
  const ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >&
      sensor_id() const;

  // .osi3.Identifier tracking_id = 1;
  bool has_tracking_id() const;
  void clear_tracking_id();
  static const int kTrackingIdFieldNumber = 1;
  const ::osi3::Identifier& tracking_id() const;
  ::osi3::Identifier* release_tracking_id();
  ::osi3::Identifier* mutable_tracking_id();
  void set_allocated_tracking_id(::osi3::Identifier* tracking_id);

  // double existence_probability = 3;
  void clear_existence_probability();
  static const int kExistenceProbabilityFieldNumber = 3;
  double existence_probability() const;
  void set_existence_probability(double value);

  // double age = 4;
  void clear_age();
  static const int kAgeFieldNumber = 4;
  double age() const;
  void set_age(double value);

  // .osi3.DetectedItemHeader.MeasurementState measurement_state = 5;
  void clear_measurement_state();
  static const int kMeasurementStateFieldNumber = 5;
  ::osi3::DetectedItemHeader_MeasurementState measurement_state() const;
  void set_measurement_state(::osi3::DetectedItemHeader_MeasurementState value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedItemHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::Identifier > ground_truth_id_;
  ::google::protobuf::RepeatedPtrField< ::osi3::Identifier > sensor_id_;
  ::osi3::Identifier* tracking_id_;
  double existence_probability_;
  double age_;
  int measurement_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedobject_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeaderImpl();
};
// -------------------------------------------------------------------

class DetectedStationaryObject_CandidateStationaryObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedStationaryObject.CandidateStationaryObject) */ {
 public:
  DetectedStationaryObject_CandidateStationaryObject();
  virtual ~DetectedStationaryObject_CandidateStationaryObject();

  DetectedStationaryObject_CandidateStationaryObject(const DetectedStationaryObject_CandidateStationaryObject& from);

  inline DetectedStationaryObject_CandidateStationaryObject& operator=(const DetectedStationaryObject_CandidateStationaryObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedStationaryObject_CandidateStationaryObject(DetectedStationaryObject_CandidateStationaryObject&& from) noexcept
    : DetectedStationaryObject_CandidateStationaryObject() {
    *this = ::std::move(from);
  }

  inline DetectedStationaryObject_CandidateStationaryObject& operator=(DetectedStationaryObject_CandidateStationaryObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedStationaryObject_CandidateStationaryObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedStationaryObject_CandidateStationaryObject* internal_default_instance() {
    return reinterpret_cast<const DetectedStationaryObject_CandidateStationaryObject*>(
               &_DetectedStationaryObject_CandidateStationaryObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DetectedStationaryObject_CandidateStationaryObject* other);
  friend void swap(DetectedStationaryObject_CandidateStationaryObject& a, DetectedStationaryObject_CandidateStationaryObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedStationaryObject_CandidateStationaryObject* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedStationaryObject_CandidateStationaryObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedStationaryObject_CandidateStationaryObject& from);
  void MergeFrom(const DetectedStationaryObject_CandidateStationaryObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedStationaryObject_CandidateStationaryObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.StationaryObject.Classification classification = 2;
  bool has_classification() const;
  void clear_classification();
  static const int kClassificationFieldNumber = 2;
  const ::osi3::StationaryObject_Classification& classification() const;
  ::osi3::StationaryObject_Classification* release_classification();
  ::osi3::StationaryObject_Classification* mutable_classification();
  void set_allocated_classification(::osi3::StationaryObject_Classification* classification);

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedStationaryObject.CandidateStationaryObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::StationaryObject_Classification* classification_;
  double probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedobject_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObject_CandidateStationaryObjectImpl();
};
// -------------------------------------------------------------------

class DetectedStationaryObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedStationaryObject) */ {
 public:
  DetectedStationaryObject();
  virtual ~DetectedStationaryObject();

  DetectedStationaryObject(const DetectedStationaryObject& from);

  inline DetectedStationaryObject& operator=(const DetectedStationaryObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedStationaryObject(DetectedStationaryObject&& from) noexcept
    : DetectedStationaryObject() {
    *this = ::std::move(from);
  }

  inline DetectedStationaryObject& operator=(DetectedStationaryObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedStationaryObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedStationaryObject* internal_default_instance() {
    return reinterpret_cast<const DetectedStationaryObject*>(
               &_DetectedStationaryObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DetectedStationaryObject* other);
  friend void swap(DetectedStationaryObject& a, DetectedStationaryObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedStationaryObject* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedStationaryObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedStationaryObject& from);
  void MergeFrom(const DetectedStationaryObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedStationaryObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedStationaryObject_CandidateStationaryObject CandidateStationaryObject;

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedStationaryObject.CandidateStationaryObject candidate = 4;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 4;
  const ::osi3::DetectedStationaryObject_CandidateStationaryObject& candidate(int index) const;
  ::osi3::DetectedStationaryObject_CandidateStationaryObject* mutable_candidate(int index);
  ::osi3::DetectedStationaryObject_CandidateStationaryObject* add_candidate();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedStationaryObject_CandidateStationaryObject >*
      mutable_candidate();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedStationaryObject_CandidateStationaryObject >&
      candidate() const;

  // .osi3.DetectedItemHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::osi3::DetectedItemHeader& header() const;
  ::osi3::DetectedItemHeader* release_header();
  ::osi3::DetectedItemHeader* mutable_header();
  void set_allocated_header(::osi3::DetectedItemHeader* header);

  // .osi3.BaseStationary base = 2;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 2;
  const ::osi3::BaseStationary& base() const;
  ::osi3::BaseStationary* release_base();
  ::osi3::BaseStationary* mutable_base();
  void set_allocated_base(::osi3::BaseStationary* base);

  // .osi3.BaseStationary base_rmse = 3;
  bool has_base_rmse() const;
  void clear_base_rmse();
  static const int kBaseRmseFieldNumber = 3;
  const ::osi3::BaseStationary& base_rmse() const;
  ::osi3::BaseStationary* release_base_rmse();
  ::osi3::BaseStationary* mutable_base_rmse();
  void set_allocated_base_rmse(::osi3::BaseStationary* base_rmse);

  // @@protoc_insertion_point(class_scope:osi3.DetectedStationaryObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedStationaryObject_CandidateStationaryObject > candidate_;
  ::osi3::DetectedItemHeader* header_;
  ::osi3::BaseStationary* base_;
  ::osi3::BaseStationary* base_rmse_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedobject_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObjectImpl();
};
// -------------------------------------------------------------------

class DetectedMovingObject_CandidateMovingObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedMovingObject.CandidateMovingObject) */ {
 public:
  DetectedMovingObject_CandidateMovingObject();
  virtual ~DetectedMovingObject_CandidateMovingObject();

  DetectedMovingObject_CandidateMovingObject(const DetectedMovingObject_CandidateMovingObject& from);

  inline DetectedMovingObject_CandidateMovingObject& operator=(const DetectedMovingObject_CandidateMovingObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedMovingObject_CandidateMovingObject(DetectedMovingObject_CandidateMovingObject&& from) noexcept
    : DetectedMovingObject_CandidateMovingObject() {
    *this = ::std::move(from);
  }

  inline DetectedMovingObject_CandidateMovingObject& operator=(DetectedMovingObject_CandidateMovingObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedMovingObject_CandidateMovingObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedMovingObject_CandidateMovingObject* internal_default_instance() {
    return reinterpret_cast<const DetectedMovingObject_CandidateMovingObject*>(
               &_DetectedMovingObject_CandidateMovingObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DetectedMovingObject_CandidateMovingObject* other);
  friend void swap(DetectedMovingObject_CandidateMovingObject& a, DetectedMovingObject_CandidateMovingObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedMovingObject_CandidateMovingObject* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedMovingObject_CandidateMovingObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedMovingObject_CandidateMovingObject& from);
  void MergeFrom(const DetectedMovingObject_CandidateMovingObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedMovingObject_CandidateMovingObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.MovingObject.VehicleClassification vehicle_classification = 3;
  bool has_vehicle_classification() const;
  void clear_vehicle_classification();
  static const int kVehicleClassificationFieldNumber = 3;
  const ::osi3::MovingObject_VehicleClassification& vehicle_classification() const;
  ::osi3::MovingObject_VehicleClassification* release_vehicle_classification();
  ::osi3::MovingObject_VehicleClassification* mutable_vehicle_classification();
  void set_allocated_vehicle_classification(::osi3::MovingObject_VehicleClassification* vehicle_classification);

  // .osi3.Orientation3d head_pose = 4;
  bool has_head_pose() const;
  void clear_head_pose();
  static const int kHeadPoseFieldNumber = 4;
  const ::osi3::Orientation3d& head_pose() const;
  ::osi3::Orientation3d* release_head_pose();
  ::osi3::Orientation3d* mutable_head_pose();
  void set_allocated_head_pose(::osi3::Orientation3d* head_pose);

  // .osi3.Orientation3d upper_body_pose = 5;
  bool has_upper_body_pose() const;
  void clear_upper_body_pose();
  static const int kUpperBodyPoseFieldNumber = 5;
  const ::osi3::Orientation3d& upper_body_pose() const;
  ::osi3::Orientation3d* release_upper_body_pose();
  ::osi3::Orientation3d* mutable_upper_body_pose();
  void set_allocated_upper_body_pose(::osi3::Orientation3d* upper_body_pose);

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // .osi3.MovingObject.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::osi3::MovingObject_Type type() const;
  void set_type(::osi3::MovingObject_Type value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedMovingObject.CandidateMovingObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::MovingObject_VehicleClassification* vehicle_classification_;
  ::osi3::Orientation3d* head_pose_;
  ::osi3::Orientation3d* upper_body_pose_;
  double probability_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedobject_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObject_CandidateMovingObjectImpl();
};
// -------------------------------------------------------------------

class DetectedMovingObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedMovingObject) */ {
 public:
  DetectedMovingObject();
  virtual ~DetectedMovingObject();

  DetectedMovingObject(const DetectedMovingObject& from);

  inline DetectedMovingObject& operator=(const DetectedMovingObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedMovingObject(DetectedMovingObject&& from) noexcept
    : DetectedMovingObject() {
    *this = ::std::move(from);
  }

  inline DetectedMovingObject& operator=(DetectedMovingObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedMovingObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedMovingObject* internal_default_instance() {
    return reinterpret_cast<const DetectedMovingObject*>(
               &_DetectedMovingObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DetectedMovingObject* other);
  friend void swap(DetectedMovingObject& a, DetectedMovingObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedMovingObject* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedMovingObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedMovingObject& from);
  void MergeFrom(const DetectedMovingObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedMovingObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedMovingObject_CandidateMovingObject CandidateMovingObject;

  typedef DetectedMovingObject_ReferencePoint ReferencePoint;
  static const ReferencePoint REFERENCE_POINT_UNKNOWN =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_UNKNOWN;
  static const ReferencePoint REFERENCE_POINT_OTHER =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_OTHER;
  static const ReferencePoint REFERENCE_POINT_CENTER =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_CENTER;
  static const ReferencePoint REFERENCE_POINT_MIDDLE_LEFT =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_MIDDLE_LEFT;
  static const ReferencePoint REFERENCE_POINT_MIDDLE_RIGHT =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_MIDDLE_RIGHT;
  static const ReferencePoint REFERENCE_POINT_REAR_MIDDLE =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_REAR_MIDDLE;
  static const ReferencePoint REFERENCE_POINT_REAR_LEFT =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_REAR_LEFT;
  static const ReferencePoint REFERENCE_POINT_REAR_RIGHT =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_REAR_RIGHT;
  static const ReferencePoint REFERENCE_POINT_FRONT_MIDDLE =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_MIDDLE;
  static const ReferencePoint REFERENCE_POINT_FRONT_LEFT =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_LEFT;
  static const ReferencePoint REFERENCE_POINT_FRONT_RIGHT =
    DetectedMovingObject_ReferencePoint_REFERENCE_POINT_FRONT_RIGHT;
  static inline bool ReferencePoint_IsValid(int value) {
    return DetectedMovingObject_ReferencePoint_IsValid(value);
  }
  static const ReferencePoint ReferencePoint_MIN =
    DetectedMovingObject_ReferencePoint_ReferencePoint_MIN;
  static const ReferencePoint ReferencePoint_MAX =
    DetectedMovingObject_ReferencePoint_ReferencePoint_MAX;
  static const int ReferencePoint_ARRAYSIZE =
    DetectedMovingObject_ReferencePoint_ReferencePoint_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReferencePoint_descriptor() {
    return DetectedMovingObject_ReferencePoint_descriptor();
  }
  static inline const ::std::string& ReferencePoint_Name(ReferencePoint value) {
    return DetectedMovingObject_ReferencePoint_Name(value);
  }
  static inline bool ReferencePoint_Parse(const ::std::string& name,
      ReferencePoint* value) {
    return DetectedMovingObject_ReferencePoint_Parse(name, value);
  }

  typedef DetectedMovingObject_MovementState MovementState;
  static const MovementState MOVEMENT_STATE_UNKNOWN =
    DetectedMovingObject_MovementState_MOVEMENT_STATE_UNKNOWN;
  static const MovementState MOVEMENT_STATE_OTHER =
    DetectedMovingObject_MovementState_MOVEMENT_STATE_OTHER;
  static const MovementState MOVEMENT_STATE_STATIONARY =
    DetectedMovingObject_MovementState_MOVEMENT_STATE_STATIONARY;
  static const MovementState MOVEMENT_STATE_MOVING =
    DetectedMovingObject_MovementState_MOVEMENT_STATE_MOVING;
  static const MovementState MOVEMENT_STATE_STOPPED =
    DetectedMovingObject_MovementState_MOVEMENT_STATE_STOPPED;
  static inline bool MovementState_IsValid(int value) {
    return DetectedMovingObject_MovementState_IsValid(value);
  }
  static const MovementState MovementState_MIN =
    DetectedMovingObject_MovementState_MovementState_MIN;
  static const MovementState MovementState_MAX =
    DetectedMovingObject_MovementState_MovementState_MAX;
  static const int MovementState_ARRAYSIZE =
    DetectedMovingObject_MovementState_MovementState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MovementState_descriptor() {
    return DetectedMovingObject_MovementState_descriptor();
  }
  static inline const ::std::string& MovementState_Name(MovementState value) {
    return DetectedMovingObject_MovementState_Name(value);
  }
  static inline bool MovementState_Parse(const ::std::string& name,
      MovementState* value) {
    return DetectedMovingObject_MovementState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedMovingObject.CandidateMovingObject candidate = 8;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 8;
  const ::osi3::DetectedMovingObject_CandidateMovingObject& candidate(int index) const;
  ::osi3::DetectedMovingObject_CandidateMovingObject* mutable_candidate(int index);
  ::osi3::DetectedMovingObject_CandidateMovingObject* add_candidate();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedMovingObject_CandidateMovingObject >*
      mutable_candidate();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedMovingObject_CandidateMovingObject >&
      candidate() const;

  // .osi3.DetectedItemHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::osi3::DetectedItemHeader& header() const;
  ::osi3::DetectedItemHeader* release_header();
  ::osi3::DetectedItemHeader* mutable_header();
  void set_allocated_header(::osi3::DetectedItemHeader* header);

  // .osi3.BaseMoving base = 2;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 2;
  const ::osi3::BaseMoving& base() const;
  ::osi3::BaseMoving* release_base();
  ::osi3::BaseMoving* mutable_base();
  void set_allocated_base(::osi3::BaseMoving* base);

  // .osi3.BaseMoving base_rmse = 3;
  bool has_base_rmse() const;
  void clear_base_rmse();
  static const int kBaseRmseFieldNumber = 3;
  const ::osi3::BaseMoving& base_rmse() const;
  ::osi3::BaseMoving* release_base_rmse();
  ::osi3::BaseMoving* mutable_base_rmse();
  void set_allocated_base_rmse(::osi3::BaseMoving* base_rmse);

  // .osi3.RadarSpecificObjectData radar_specifics = 100;
  bool has_radar_specifics() const;
  void clear_radar_specifics();
  static const int kRadarSpecificsFieldNumber = 100;
  const ::osi3::RadarSpecificObjectData& radar_specifics() const;
  ::osi3::RadarSpecificObjectData* release_radar_specifics();
  ::osi3::RadarSpecificObjectData* mutable_radar_specifics();
  void set_allocated_radar_specifics(::osi3::RadarSpecificObjectData* radar_specifics);

  // .osi3.LidarSpecificObjectData lidar_specifics = 101;
  bool has_lidar_specifics() const;
  void clear_lidar_specifics();
  static const int kLidarSpecificsFieldNumber = 101;
  const ::osi3::LidarSpecificObjectData& lidar_specifics() const;
  ::osi3::LidarSpecificObjectData* release_lidar_specifics();
  ::osi3::LidarSpecificObjectData* mutable_lidar_specifics();
  void set_allocated_lidar_specifics(::osi3::LidarSpecificObjectData* lidar_specifics);

  // .osi3.CameraSpecificObjectData camera_specifics = 102;
  bool has_camera_specifics() const;
  void clear_camera_specifics();
  static const int kCameraSpecificsFieldNumber = 102;
  const ::osi3::CameraSpecificObjectData& camera_specifics() const;
  ::osi3::CameraSpecificObjectData* release_camera_specifics();
  ::osi3::CameraSpecificObjectData* mutable_camera_specifics();
  void set_allocated_camera_specifics(::osi3::CameraSpecificObjectData* camera_specifics);

  // .osi3.UltrasonicSpecificObjectData ultrasonic_specifics = 103;
  bool has_ultrasonic_specifics() const;
  void clear_ultrasonic_specifics();
  static const int kUltrasonicSpecificsFieldNumber = 103;
  const ::osi3::UltrasonicSpecificObjectData& ultrasonic_specifics() const;
  ::osi3::UltrasonicSpecificObjectData* release_ultrasonic_specifics();
  ::osi3::UltrasonicSpecificObjectData* mutable_ultrasonic_specifics();
  void set_allocated_ultrasonic_specifics(::osi3::UltrasonicSpecificObjectData* ultrasonic_specifics);

  // .osi3.DetectedMovingObject.ReferencePoint reference_point = 4;
  void clear_reference_point();
  static const int kReferencePointFieldNumber = 4;
  ::osi3::DetectedMovingObject_ReferencePoint reference_point() const;
  void set_reference_point(::osi3::DetectedMovingObject_ReferencePoint value);

  // .osi3.DetectedMovingObject.MovementState movement_state = 5;
  void clear_movement_state();
  static const int kMovementStateFieldNumber = 5;
  ::osi3::DetectedMovingObject_MovementState movement_state() const;
  void set_movement_state(::osi3::DetectedMovingObject_MovementState value);

  // double percentage_side_lane_left = 6;
  void clear_percentage_side_lane_left();
  static const int kPercentageSideLaneLeftFieldNumber = 6;
  double percentage_side_lane_left() const;
  void set_percentage_side_lane_left(double value);

  // double percentage_side_lane_right = 7;
  void clear_percentage_side_lane_right();
  static const int kPercentageSideLaneRightFieldNumber = 7;
  double percentage_side_lane_right() const;
  void set_percentage_side_lane_right(double value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedMovingObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedMovingObject_CandidateMovingObject > candidate_;
  ::osi3::DetectedItemHeader* header_;
  ::osi3::BaseMoving* base_;
  ::osi3::BaseMoving* base_rmse_;
  ::osi3::RadarSpecificObjectData* radar_specifics_;
  ::osi3::LidarSpecificObjectData* lidar_specifics_;
  ::osi3::CameraSpecificObjectData* camera_specifics_;
  ::osi3::UltrasonicSpecificObjectData* ultrasonic_specifics_;
  int reference_point_;
  int movement_state_;
  double percentage_side_lane_left_;
  double percentage_side_lane_right_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedobject_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObjectImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectedItemHeader

// .osi3.Identifier tracking_id = 1;
inline bool DetectedItemHeader::has_tracking_id() const {
  return this != internal_default_instance() && tracking_id_ != NULL;
}
inline const ::osi3::Identifier& DetectedItemHeader::tracking_id() const {
  const ::osi3::Identifier* p = tracking_id_;
  // @@protoc_insertion_point(field_get:osi3.DetectedItemHeader.tracking_id)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::Identifier*>(
      &::osi3::_Identifier_default_instance_);
}
inline ::osi3::Identifier* DetectedItemHeader::release_tracking_id() {
  // @@protoc_insertion_point(field_release:osi3.DetectedItemHeader.tracking_id)
  
  ::osi3::Identifier* temp = tracking_id_;
  tracking_id_ = NULL;
  return temp;
}
inline ::osi3::Identifier* DetectedItemHeader::mutable_tracking_id() {
  
  if (tracking_id_ == NULL) {
    tracking_id_ = new ::osi3::Identifier;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedItemHeader.tracking_id)
  return tracking_id_;
}
inline void DetectedItemHeader::set_allocated_tracking_id(::osi3::Identifier* tracking_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tracking_id_);
  }
  if (tracking_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tracking_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tracking_id, submessage_arena);
    }
    
  } else {
    
  }
  tracking_id_ = tracking_id;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedItemHeader.tracking_id)
}

// repeated .osi3.Identifier ground_truth_id = 2;
inline int DetectedItemHeader::ground_truth_id_size() const {
  return ground_truth_id_.size();
}
inline const ::osi3::Identifier& DetectedItemHeader::ground_truth_id(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedItemHeader.ground_truth_id)
  return ground_truth_id_.Get(index);
}
inline ::osi3::Identifier* DetectedItemHeader::mutable_ground_truth_id(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedItemHeader.ground_truth_id)
  return ground_truth_id_.Mutable(index);
}
inline ::osi3::Identifier* DetectedItemHeader::add_ground_truth_id() {
  // @@protoc_insertion_point(field_add:osi3.DetectedItemHeader.ground_truth_id)
  return ground_truth_id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >*
DetectedItemHeader::mutable_ground_truth_id() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedItemHeader.ground_truth_id)
  return &ground_truth_id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >&
DetectedItemHeader::ground_truth_id() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedItemHeader.ground_truth_id)
  return ground_truth_id_;
}

// double existence_probability = 3;
inline void DetectedItemHeader::clear_existence_probability() {
  existence_probability_ = 0;
}
inline double DetectedItemHeader::existence_probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedItemHeader.existence_probability)
  return existence_probability_;
}
inline void DetectedItemHeader::set_existence_probability(double value) {
  
  existence_probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedItemHeader.existence_probability)
}

// double age = 4;
inline void DetectedItemHeader::clear_age() {
  age_ = 0;
}
inline double DetectedItemHeader::age() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedItemHeader.age)
  return age_;
}
inline void DetectedItemHeader::set_age(double value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedItemHeader.age)
}

// .osi3.DetectedItemHeader.MeasurementState measurement_state = 5;
inline void DetectedItemHeader::clear_measurement_state() {
  measurement_state_ = 0;
}
inline ::osi3::DetectedItemHeader_MeasurementState DetectedItemHeader::measurement_state() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedItemHeader.measurement_state)
  return static_cast< ::osi3::DetectedItemHeader_MeasurementState >(measurement_state_);
}
inline void DetectedItemHeader::set_measurement_state(::osi3::DetectedItemHeader_MeasurementState value) {
  
  measurement_state_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedItemHeader.measurement_state)
}

// repeated .osi3.Identifier sensor_id = 6;
inline int DetectedItemHeader::sensor_id_size() const {
  return sensor_id_.size();
}
inline const ::osi3::Identifier& DetectedItemHeader::sensor_id(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedItemHeader.sensor_id)
  return sensor_id_.Get(index);
}
inline ::osi3::Identifier* DetectedItemHeader::mutable_sensor_id(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedItemHeader.sensor_id)
  return sensor_id_.Mutable(index);
}
inline ::osi3::Identifier* DetectedItemHeader::add_sensor_id() {
  // @@protoc_insertion_point(field_add:osi3.DetectedItemHeader.sensor_id)
  return sensor_id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >*
DetectedItemHeader::mutable_sensor_id() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedItemHeader.sensor_id)
  return &sensor_id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::Identifier >&
DetectedItemHeader::sensor_id() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedItemHeader.sensor_id)
  return sensor_id_;
}

// -------------------------------------------------------------------

// DetectedStationaryObject_CandidateStationaryObject

// double probability = 1;
inline void DetectedStationaryObject_CandidateStationaryObject::clear_probability() {
  probability_ = 0;
}
inline double DetectedStationaryObject_CandidateStationaryObject::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedStationaryObject.CandidateStationaryObject.probability)
  return probability_;
}
inline void DetectedStationaryObject_CandidateStationaryObject::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedStationaryObject.CandidateStationaryObject.probability)
}

// .osi3.StationaryObject.Classification classification = 2;
inline bool DetectedStationaryObject_CandidateStationaryObject::has_classification() const {
  return this != internal_default_instance() && classification_ != NULL;
}
inline const ::osi3::StationaryObject_Classification& DetectedStationaryObject_CandidateStationaryObject::classification() const {
  const ::osi3::StationaryObject_Classification* p = classification_;
  // @@protoc_insertion_point(field_get:osi3.DetectedStationaryObject.CandidateStationaryObject.classification)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::StationaryObject_Classification*>(
      &::osi3::_StationaryObject_Classification_default_instance_);
}
inline ::osi3::StationaryObject_Classification* DetectedStationaryObject_CandidateStationaryObject::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedStationaryObject.CandidateStationaryObject.classification)
  
  ::osi3::StationaryObject_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
inline ::osi3::StationaryObject_Classification* DetectedStationaryObject_CandidateStationaryObject::mutable_classification() {
  
  if (classification_ == NULL) {
    classification_ = new ::osi3::StationaryObject_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedStationaryObject.CandidateStationaryObject.classification)
  return classification_;
}
inline void DetectedStationaryObject_CandidateStationaryObject::set_allocated_classification(::osi3::StationaryObject_Classification* classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(classification_);
  }
  if (classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification, submessage_arena);
    }
    
  } else {
    
  }
  classification_ = classification;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedStationaryObject.CandidateStationaryObject.classification)
}

// -------------------------------------------------------------------

// DetectedStationaryObject

// .osi3.DetectedItemHeader header = 1;
inline bool DetectedStationaryObject::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DetectedStationaryObject::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::osi3::DetectedItemHeader& DetectedStationaryObject::header() const {
  const ::osi3::DetectedItemHeader* p = header_;
  // @@protoc_insertion_point(field_get:osi3.DetectedStationaryObject.header)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::DetectedItemHeader*>(
      &::osi3::_DetectedItemHeader_default_instance_);
}
inline ::osi3::DetectedItemHeader* DetectedStationaryObject::release_header() {
  // @@protoc_insertion_point(field_release:osi3.DetectedStationaryObject.header)
  
  ::osi3::DetectedItemHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::osi3::DetectedItemHeader* DetectedStationaryObject::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::osi3::DetectedItemHeader;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedStationaryObject.header)
  return header_;
}
inline void DetectedStationaryObject::set_allocated_header(::osi3::DetectedItemHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedStationaryObject.header)
}

// .osi3.BaseStationary base = 2;
inline bool DetectedStationaryObject::has_base() const {
  return this != internal_default_instance() && base_ != NULL;
}
inline const ::osi3::BaseStationary& DetectedStationaryObject::base() const {
  const ::osi3::BaseStationary* p = base_;
  // @@protoc_insertion_point(field_get:osi3.DetectedStationaryObject.base)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseStationary*>(
      &::osi3::_BaseStationary_default_instance_);
}
inline ::osi3::BaseStationary* DetectedStationaryObject::release_base() {
  // @@protoc_insertion_point(field_release:osi3.DetectedStationaryObject.base)
  
  ::osi3::BaseStationary* temp = base_;
  base_ = NULL;
  return temp;
}
inline ::osi3::BaseStationary* DetectedStationaryObject::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedStationaryObject.base)
  return base_;
}
inline void DetectedStationaryObject::set_allocated_base(::osi3::BaseStationary* base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_);
  }
  if (base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedStationaryObject.base)
}

// .osi3.BaseStationary base_rmse = 3;
inline bool DetectedStationaryObject::has_base_rmse() const {
  return this != internal_default_instance() && base_rmse_ != NULL;
}
inline const ::osi3::BaseStationary& DetectedStationaryObject::base_rmse() const {
  const ::osi3::BaseStationary* p = base_rmse_;
  // @@protoc_insertion_point(field_get:osi3.DetectedStationaryObject.base_rmse)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseStationary*>(
      &::osi3::_BaseStationary_default_instance_);
}
inline ::osi3::BaseStationary* DetectedStationaryObject::release_base_rmse() {
  // @@protoc_insertion_point(field_release:osi3.DetectedStationaryObject.base_rmse)
  
  ::osi3::BaseStationary* temp = base_rmse_;
  base_rmse_ = NULL;
  return temp;
}
inline ::osi3::BaseStationary* DetectedStationaryObject::mutable_base_rmse() {
  
  if (base_rmse_ == NULL) {
    base_rmse_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedStationaryObject.base_rmse)
  return base_rmse_;
}
inline void DetectedStationaryObject::set_allocated_base_rmse(::osi3::BaseStationary* base_rmse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_rmse_);
  }
  if (base_rmse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_rmse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_rmse, submessage_arena);
    }
    
  } else {
    
  }
  base_rmse_ = base_rmse;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedStationaryObject.base_rmse)
}

// repeated .osi3.DetectedStationaryObject.CandidateStationaryObject candidate = 4;
inline int DetectedStationaryObject::candidate_size() const {
  return candidate_.size();
}
inline void DetectedStationaryObject::clear_candidate() {
  candidate_.Clear();
}
inline const ::osi3::DetectedStationaryObject_CandidateStationaryObject& DetectedStationaryObject::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedStationaryObject.candidate)
  return candidate_.Get(index);
}
inline ::osi3::DetectedStationaryObject_CandidateStationaryObject* DetectedStationaryObject::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedStationaryObject.candidate)
  return candidate_.Mutable(index);
}
inline ::osi3::DetectedStationaryObject_CandidateStationaryObject* DetectedStationaryObject::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedStationaryObject.candidate)
  return candidate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedStationaryObject_CandidateStationaryObject >*
DetectedStationaryObject::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedStationaryObject.candidate)
  return &candidate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedStationaryObject_CandidateStationaryObject >&
DetectedStationaryObject::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedStationaryObject.candidate)
  return candidate_;
}

// -------------------------------------------------------------------

// DetectedMovingObject_CandidateMovingObject

// double probability = 1;
inline void DetectedMovingObject_CandidateMovingObject::clear_probability() {
  probability_ = 0;
}
inline double DetectedMovingObject_CandidateMovingObject::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.CandidateMovingObject.probability)
  return probability_;
}
inline void DetectedMovingObject_CandidateMovingObject::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedMovingObject.CandidateMovingObject.probability)
}

// .osi3.MovingObject.Type type = 2;
inline void DetectedMovingObject_CandidateMovingObject::clear_type() {
  type_ = 0;
}
inline ::osi3::MovingObject_Type DetectedMovingObject_CandidateMovingObject::type() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.CandidateMovingObject.type)
  return static_cast< ::osi3::MovingObject_Type >(type_);
}
inline void DetectedMovingObject_CandidateMovingObject::set_type(::osi3::MovingObject_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedMovingObject.CandidateMovingObject.type)
}

// .osi3.MovingObject.VehicleClassification vehicle_classification = 3;
inline bool DetectedMovingObject_CandidateMovingObject::has_vehicle_classification() const {
  return this != internal_default_instance() && vehicle_classification_ != NULL;
}
inline const ::osi3::MovingObject_VehicleClassification& DetectedMovingObject_CandidateMovingObject::vehicle_classification() const {
  const ::osi3::MovingObject_VehicleClassification* p = vehicle_classification_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.CandidateMovingObject.vehicle_classification)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::MovingObject_VehicleClassification*>(
      &::osi3::_MovingObject_VehicleClassification_default_instance_);
}
inline ::osi3::MovingObject_VehicleClassification* DetectedMovingObject_CandidateMovingObject::release_vehicle_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.CandidateMovingObject.vehicle_classification)
  
  ::osi3::MovingObject_VehicleClassification* temp = vehicle_classification_;
  vehicle_classification_ = NULL;
  return temp;
}
inline ::osi3::MovingObject_VehicleClassification* DetectedMovingObject_CandidateMovingObject::mutable_vehicle_classification() {
  
  if (vehicle_classification_ == NULL) {
    vehicle_classification_ = new ::osi3::MovingObject_VehicleClassification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.CandidateMovingObject.vehicle_classification)
  return vehicle_classification_;
}
inline void DetectedMovingObject_CandidateMovingObject::set_allocated_vehicle_classification(::osi3::MovingObject_VehicleClassification* vehicle_classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vehicle_classification_);
  }
  if (vehicle_classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicle_classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_classification, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_classification_ = vehicle_classification;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.CandidateMovingObject.vehicle_classification)
}

// .osi3.Orientation3d head_pose = 4;
inline bool DetectedMovingObject_CandidateMovingObject::has_head_pose() const {
  return this != internal_default_instance() && head_pose_ != NULL;
}
inline const ::osi3::Orientation3d& DetectedMovingObject_CandidateMovingObject::head_pose() const {
  const ::osi3::Orientation3d* p = head_pose_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.CandidateMovingObject.head_pose)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::Orientation3d*>(
      &::osi3::_Orientation3d_default_instance_);
}
inline ::osi3::Orientation3d* DetectedMovingObject_CandidateMovingObject::release_head_pose() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.CandidateMovingObject.head_pose)
  
  ::osi3::Orientation3d* temp = head_pose_;
  head_pose_ = NULL;
  return temp;
}
inline ::osi3::Orientation3d* DetectedMovingObject_CandidateMovingObject::mutable_head_pose() {
  
  if (head_pose_ == NULL) {
    head_pose_ = new ::osi3::Orientation3d;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.CandidateMovingObject.head_pose)
  return head_pose_;
}
inline void DetectedMovingObject_CandidateMovingObject::set_allocated_head_pose(::osi3::Orientation3d* head_pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(head_pose_);
  }
  if (head_pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head_pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head_pose, submessage_arena);
    }
    
  } else {
    
  }
  head_pose_ = head_pose;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.CandidateMovingObject.head_pose)
}

// .osi3.Orientation3d upper_body_pose = 5;
inline bool DetectedMovingObject_CandidateMovingObject::has_upper_body_pose() const {
  return this != internal_default_instance() && upper_body_pose_ != NULL;
}
inline const ::osi3::Orientation3d& DetectedMovingObject_CandidateMovingObject::upper_body_pose() const {
  const ::osi3::Orientation3d* p = upper_body_pose_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.CandidateMovingObject.upper_body_pose)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::Orientation3d*>(
      &::osi3::_Orientation3d_default_instance_);
}
inline ::osi3::Orientation3d* DetectedMovingObject_CandidateMovingObject::release_upper_body_pose() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.CandidateMovingObject.upper_body_pose)
  
  ::osi3::Orientation3d* temp = upper_body_pose_;
  upper_body_pose_ = NULL;
  return temp;
}
inline ::osi3::Orientation3d* DetectedMovingObject_CandidateMovingObject::mutable_upper_body_pose() {
  
  if (upper_body_pose_ == NULL) {
    upper_body_pose_ = new ::osi3::Orientation3d;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.CandidateMovingObject.upper_body_pose)
  return upper_body_pose_;
}
inline void DetectedMovingObject_CandidateMovingObject::set_allocated_upper_body_pose(::osi3::Orientation3d* upper_body_pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(upper_body_pose_);
  }
  if (upper_body_pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      upper_body_pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upper_body_pose, submessage_arena);
    }
    
  } else {
    
  }
  upper_body_pose_ = upper_body_pose;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.CandidateMovingObject.upper_body_pose)
}

// -------------------------------------------------------------------

// DetectedMovingObject

// .osi3.DetectedItemHeader header = 1;
inline bool DetectedMovingObject::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DetectedMovingObject::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::osi3::DetectedItemHeader& DetectedMovingObject::header() const {
  const ::osi3::DetectedItemHeader* p = header_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.header)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::DetectedItemHeader*>(
      &::osi3::_DetectedItemHeader_default_instance_);
}
inline ::osi3::DetectedItemHeader* DetectedMovingObject::release_header() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.header)
  
  ::osi3::DetectedItemHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::osi3::DetectedItemHeader* DetectedMovingObject::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::osi3::DetectedItemHeader;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.header)
  return header_;
}
inline void DetectedMovingObject::set_allocated_header(::osi3::DetectedItemHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.header)
}

// .osi3.BaseMoving base = 2;
inline bool DetectedMovingObject::has_base() const {
  return this != internal_default_instance() && base_ != NULL;
}
inline const ::osi3::BaseMoving& DetectedMovingObject::base() const {
  const ::osi3::BaseMoving* p = base_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.base)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseMoving*>(
      &::osi3::_BaseMoving_default_instance_);
}
inline ::osi3::BaseMoving* DetectedMovingObject::release_base() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.base)
  
  ::osi3::BaseMoving* temp = base_;
  base_ = NULL;
  return temp;
}
inline ::osi3::BaseMoving* DetectedMovingObject::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::osi3::BaseMoving;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.base)
  return base_;
}
inline void DetectedMovingObject::set_allocated_base(::osi3::BaseMoving* base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_);
  }
  if (base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.base)
}

// .osi3.BaseMoving base_rmse = 3;
inline bool DetectedMovingObject::has_base_rmse() const {
  return this != internal_default_instance() && base_rmse_ != NULL;
}
inline const ::osi3::BaseMoving& DetectedMovingObject::base_rmse() const {
  const ::osi3::BaseMoving* p = base_rmse_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.base_rmse)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseMoving*>(
      &::osi3::_BaseMoving_default_instance_);
}
inline ::osi3::BaseMoving* DetectedMovingObject::release_base_rmse() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.base_rmse)
  
  ::osi3::BaseMoving* temp = base_rmse_;
  base_rmse_ = NULL;
  return temp;
}
inline ::osi3::BaseMoving* DetectedMovingObject::mutable_base_rmse() {
  
  if (base_rmse_ == NULL) {
    base_rmse_ = new ::osi3::BaseMoving;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.base_rmse)
  return base_rmse_;
}
inline void DetectedMovingObject::set_allocated_base_rmse(::osi3::BaseMoving* base_rmse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_rmse_);
  }
  if (base_rmse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_rmse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_rmse, submessage_arena);
    }
    
  } else {
    
  }
  base_rmse_ = base_rmse;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.base_rmse)
}

// .osi3.DetectedMovingObject.ReferencePoint reference_point = 4;
inline void DetectedMovingObject::clear_reference_point() {
  reference_point_ = 0;
}
inline ::osi3::DetectedMovingObject_ReferencePoint DetectedMovingObject::reference_point() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.reference_point)
  return static_cast< ::osi3::DetectedMovingObject_ReferencePoint >(reference_point_);
}
inline void DetectedMovingObject::set_reference_point(::osi3::DetectedMovingObject_ReferencePoint value) {
  
  reference_point_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedMovingObject.reference_point)
}

// .osi3.DetectedMovingObject.MovementState movement_state = 5;
inline void DetectedMovingObject::clear_movement_state() {
  movement_state_ = 0;
}
inline ::osi3::DetectedMovingObject_MovementState DetectedMovingObject::movement_state() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.movement_state)
  return static_cast< ::osi3::DetectedMovingObject_MovementState >(movement_state_);
}
inline void DetectedMovingObject::set_movement_state(::osi3::DetectedMovingObject_MovementState value) {
  
  movement_state_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedMovingObject.movement_state)
}

// double percentage_side_lane_left = 6;
inline void DetectedMovingObject::clear_percentage_side_lane_left() {
  percentage_side_lane_left_ = 0;
}
inline double DetectedMovingObject::percentage_side_lane_left() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.percentage_side_lane_left)
  return percentage_side_lane_left_;
}
inline void DetectedMovingObject::set_percentage_side_lane_left(double value) {
  
  percentage_side_lane_left_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedMovingObject.percentage_side_lane_left)
}

// double percentage_side_lane_right = 7;
inline void DetectedMovingObject::clear_percentage_side_lane_right() {
  percentage_side_lane_right_ = 0;
}
inline double DetectedMovingObject::percentage_side_lane_right() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.percentage_side_lane_right)
  return percentage_side_lane_right_;
}
inline void DetectedMovingObject::set_percentage_side_lane_right(double value) {
  
  percentage_side_lane_right_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedMovingObject.percentage_side_lane_right)
}

// repeated .osi3.DetectedMovingObject.CandidateMovingObject candidate = 8;
inline int DetectedMovingObject::candidate_size() const {
  return candidate_.size();
}
inline void DetectedMovingObject::clear_candidate() {
  candidate_.Clear();
}
inline const ::osi3::DetectedMovingObject_CandidateMovingObject& DetectedMovingObject::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.candidate)
  return candidate_.Get(index);
}
inline ::osi3::DetectedMovingObject_CandidateMovingObject* DetectedMovingObject::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.candidate)
  return candidate_.Mutable(index);
}
inline ::osi3::DetectedMovingObject_CandidateMovingObject* DetectedMovingObject::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedMovingObject.candidate)
  return candidate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedMovingObject_CandidateMovingObject >*
DetectedMovingObject::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedMovingObject.candidate)
  return &candidate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedMovingObject_CandidateMovingObject >&
DetectedMovingObject::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedMovingObject.candidate)
  return candidate_;
}

// .osi3.RadarSpecificObjectData radar_specifics = 100;
inline bool DetectedMovingObject::has_radar_specifics() const {
  return this != internal_default_instance() && radar_specifics_ != NULL;
}
inline const ::osi3::RadarSpecificObjectData& DetectedMovingObject::radar_specifics() const {
  const ::osi3::RadarSpecificObjectData* p = radar_specifics_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.radar_specifics)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::RadarSpecificObjectData*>(
      &::osi3::_RadarSpecificObjectData_default_instance_);
}
inline ::osi3::RadarSpecificObjectData* DetectedMovingObject::release_radar_specifics() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.radar_specifics)
  
  ::osi3::RadarSpecificObjectData* temp = radar_specifics_;
  radar_specifics_ = NULL;
  return temp;
}
inline ::osi3::RadarSpecificObjectData* DetectedMovingObject::mutable_radar_specifics() {
  
  if (radar_specifics_ == NULL) {
    radar_specifics_ = new ::osi3::RadarSpecificObjectData;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.radar_specifics)
  return radar_specifics_;
}
inline void DetectedMovingObject::set_allocated_radar_specifics(::osi3::RadarSpecificObjectData* radar_specifics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(radar_specifics_);
  }
  if (radar_specifics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radar_specifics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radar_specifics, submessage_arena);
    }
    
  } else {
    
  }
  radar_specifics_ = radar_specifics;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.radar_specifics)
}

// .osi3.LidarSpecificObjectData lidar_specifics = 101;
inline bool DetectedMovingObject::has_lidar_specifics() const {
  return this != internal_default_instance() && lidar_specifics_ != NULL;
}
inline const ::osi3::LidarSpecificObjectData& DetectedMovingObject::lidar_specifics() const {
  const ::osi3::LidarSpecificObjectData* p = lidar_specifics_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.lidar_specifics)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::LidarSpecificObjectData*>(
      &::osi3::_LidarSpecificObjectData_default_instance_);
}
inline ::osi3::LidarSpecificObjectData* DetectedMovingObject::release_lidar_specifics() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.lidar_specifics)
  
  ::osi3::LidarSpecificObjectData* temp = lidar_specifics_;
  lidar_specifics_ = NULL;
  return temp;
}
inline ::osi3::LidarSpecificObjectData* DetectedMovingObject::mutable_lidar_specifics() {
  
  if (lidar_specifics_ == NULL) {
    lidar_specifics_ = new ::osi3::LidarSpecificObjectData;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.lidar_specifics)
  return lidar_specifics_;
}
inline void DetectedMovingObject::set_allocated_lidar_specifics(::osi3::LidarSpecificObjectData* lidar_specifics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lidar_specifics_);
  }
  if (lidar_specifics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lidar_specifics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lidar_specifics, submessage_arena);
    }
    
  } else {
    
  }
  lidar_specifics_ = lidar_specifics;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.lidar_specifics)
}

// .osi3.CameraSpecificObjectData camera_specifics = 102;
inline bool DetectedMovingObject::has_camera_specifics() const {
  return this != internal_default_instance() && camera_specifics_ != NULL;
}
inline const ::osi3::CameraSpecificObjectData& DetectedMovingObject::camera_specifics() const {
  const ::osi3::CameraSpecificObjectData* p = camera_specifics_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.camera_specifics)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::CameraSpecificObjectData*>(
      &::osi3::_CameraSpecificObjectData_default_instance_);
}
inline ::osi3::CameraSpecificObjectData* DetectedMovingObject::release_camera_specifics() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.camera_specifics)
  
  ::osi3::CameraSpecificObjectData* temp = camera_specifics_;
  camera_specifics_ = NULL;
  return temp;
}
inline ::osi3::CameraSpecificObjectData* DetectedMovingObject::mutable_camera_specifics() {
  
  if (camera_specifics_ == NULL) {
    camera_specifics_ = new ::osi3::CameraSpecificObjectData;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.camera_specifics)
  return camera_specifics_;
}
inline void DetectedMovingObject::set_allocated_camera_specifics(::osi3::CameraSpecificObjectData* camera_specifics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(camera_specifics_);
  }
  if (camera_specifics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      camera_specifics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, camera_specifics, submessage_arena);
    }
    
  } else {
    
  }
  camera_specifics_ = camera_specifics;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.camera_specifics)
}

// .osi3.UltrasonicSpecificObjectData ultrasonic_specifics = 103;
inline bool DetectedMovingObject::has_ultrasonic_specifics() const {
  return this != internal_default_instance() && ultrasonic_specifics_ != NULL;
}
inline const ::osi3::UltrasonicSpecificObjectData& DetectedMovingObject::ultrasonic_specifics() const {
  const ::osi3::UltrasonicSpecificObjectData* p = ultrasonic_specifics_;
  // @@protoc_insertion_point(field_get:osi3.DetectedMovingObject.ultrasonic_specifics)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::UltrasonicSpecificObjectData*>(
      &::osi3::_UltrasonicSpecificObjectData_default_instance_);
}
inline ::osi3::UltrasonicSpecificObjectData* DetectedMovingObject::release_ultrasonic_specifics() {
  // @@protoc_insertion_point(field_release:osi3.DetectedMovingObject.ultrasonic_specifics)
  
  ::osi3::UltrasonicSpecificObjectData* temp = ultrasonic_specifics_;
  ultrasonic_specifics_ = NULL;
  return temp;
}
inline ::osi3::UltrasonicSpecificObjectData* DetectedMovingObject::mutable_ultrasonic_specifics() {
  
  if (ultrasonic_specifics_ == NULL) {
    ultrasonic_specifics_ = new ::osi3::UltrasonicSpecificObjectData;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedMovingObject.ultrasonic_specifics)
  return ultrasonic_specifics_;
}
inline void DetectedMovingObject::set_allocated_ultrasonic_specifics(::osi3::UltrasonicSpecificObjectData* ultrasonic_specifics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ultrasonic_specifics_);
  }
  if (ultrasonic_specifics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ultrasonic_specifics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ultrasonic_specifics, submessage_arena);
    }
    
  } else {
    
  }
  ultrasonic_specifics_ = ultrasonic_specifics;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedMovingObject.ultrasonic_specifics)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::osi3::DetectedItemHeader_MeasurementState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::DetectedItemHeader_MeasurementState>() {
  return ::osi3::DetectedItemHeader_MeasurementState_descriptor();
}
template <> struct is_proto_enum< ::osi3::DetectedMovingObject_ReferencePoint> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::DetectedMovingObject_ReferencePoint>() {
  return ::osi3::DetectedMovingObject_ReferencePoint_descriptor();
}
template <> struct is_proto_enum< ::osi3::DetectedMovingObject_MovementState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::DetectedMovingObject_MovementState>() {
  return ::osi3::DetectedMovingObject_MovementState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fdetectedobject_2eproto__INCLUDED
