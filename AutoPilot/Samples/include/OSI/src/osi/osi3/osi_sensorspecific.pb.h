// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_sensorspecific.proto

#ifndef PROTOBUF_osi_5fsensorspecific_2eproto__INCLUDED
#define PROTOBUF_osi_5fsensorspecific_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "osi_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_osi_5fsensorspecific_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRadarSpecificObjectDataImpl();
void InitDefaultsRadarSpecificObjectData();
void InitDefaultsLidarSpecificObjectDataImpl();
void InitDefaultsLidarSpecificObjectData();
void InitDefaultsCameraSpecificObjectDataImpl();
void InitDefaultsCameraSpecificObjectData();
void InitDefaultsUltrasonicSpecificObjectData_SignalwayImpl();
void InitDefaultsUltrasonicSpecificObjectData_Signalway();
void InitDefaultsUltrasonicSpecificObjectDataImpl();
void InitDefaultsUltrasonicSpecificObjectData();
inline void InitDefaults() {
  InitDefaultsRadarSpecificObjectData();
  InitDefaultsLidarSpecificObjectData();
  InitDefaultsCameraSpecificObjectData();
  InitDefaultsUltrasonicSpecificObjectData_Signalway();
  InitDefaultsUltrasonicSpecificObjectData();
}
}  // namespace protobuf_osi_5fsensorspecific_2eproto
namespace osi3 {
class CameraSpecificObjectData;
class CameraSpecificObjectDataDefaultTypeInternal;
extern CameraSpecificObjectDataDefaultTypeInternal _CameraSpecificObjectData_default_instance_;
class LidarSpecificObjectData;
class LidarSpecificObjectDataDefaultTypeInternal;
extern LidarSpecificObjectDataDefaultTypeInternal _LidarSpecificObjectData_default_instance_;
class RadarSpecificObjectData;
class RadarSpecificObjectDataDefaultTypeInternal;
extern RadarSpecificObjectDataDefaultTypeInternal _RadarSpecificObjectData_default_instance_;
class UltrasonicSpecificObjectData;
class UltrasonicSpecificObjectDataDefaultTypeInternal;
extern UltrasonicSpecificObjectDataDefaultTypeInternal _UltrasonicSpecificObjectData_default_instance_;
class UltrasonicSpecificObjectData_Signalway;
class UltrasonicSpecificObjectData_SignalwayDefaultTypeInternal;
extern UltrasonicSpecificObjectData_SignalwayDefaultTypeInternal _UltrasonicSpecificObjectData_Signalway_default_instance_;
}  // namespace osi3
namespace osi3 {

enum UltrasonicSpecificObjectData_TrilaterationStatus {
  UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_UNKNOWN = 0,
  UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_OTHER = 1,
  UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_NOT_TRILATERATED = 2,
  UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_TRILATERATED = 3,
  UltrasonicSpecificObjectData_TrilaterationStatus_UltrasonicSpecificObjectData_TrilaterationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UltrasonicSpecificObjectData_TrilaterationStatus_UltrasonicSpecificObjectData_TrilaterationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UltrasonicSpecificObjectData_TrilaterationStatus_IsValid(int value);
const UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_MIN = UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_UNKNOWN;
const UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_MAX = UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_TRILATERATED;
const int UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_ARRAYSIZE = UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* UltrasonicSpecificObjectData_TrilaterationStatus_descriptor();
inline const ::std::string& UltrasonicSpecificObjectData_TrilaterationStatus_Name(UltrasonicSpecificObjectData_TrilaterationStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    UltrasonicSpecificObjectData_TrilaterationStatus_descriptor(), value);
}
inline bool UltrasonicSpecificObjectData_TrilaterationStatus_Parse(
    const ::std::string& name, UltrasonicSpecificObjectData_TrilaterationStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UltrasonicSpecificObjectData_TrilaterationStatus>(
    UltrasonicSpecificObjectData_TrilaterationStatus_descriptor(), name, value);
}
enum UltrasonicSpecificObjectData_Trend {
  UltrasonicSpecificObjectData_Trend_TREND_UNKNOWN = 0,
  UltrasonicSpecificObjectData_Trend_TREND_OTHER = 1,
  UltrasonicSpecificObjectData_Trend_TREND_CONSTANT_APPROACHING = 2,
  UltrasonicSpecificObjectData_Trend_TREND_CONSTANT = 3,
  UltrasonicSpecificObjectData_Trend_TREND_APPROACHING = 4,
  UltrasonicSpecificObjectData_Trend_TREND_DEPARTING = 5,
  UltrasonicSpecificObjectData_Trend_UltrasonicSpecificObjectData_Trend_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UltrasonicSpecificObjectData_Trend_UltrasonicSpecificObjectData_Trend_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UltrasonicSpecificObjectData_Trend_IsValid(int value);
const UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData_Trend_Trend_MIN = UltrasonicSpecificObjectData_Trend_TREND_UNKNOWN;
const UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData_Trend_Trend_MAX = UltrasonicSpecificObjectData_Trend_TREND_DEPARTING;
const int UltrasonicSpecificObjectData_Trend_Trend_ARRAYSIZE = UltrasonicSpecificObjectData_Trend_Trend_MAX + 1;

const ::google::protobuf::EnumDescriptor* UltrasonicSpecificObjectData_Trend_descriptor();
inline const ::std::string& UltrasonicSpecificObjectData_Trend_Name(UltrasonicSpecificObjectData_Trend value) {
  return ::google::protobuf::internal::NameOfEnum(
    UltrasonicSpecificObjectData_Trend_descriptor(), value);
}
inline bool UltrasonicSpecificObjectData_Trend_Parse(
    const ::std::string& name, UltrasonicSpecificObjectData_Trend* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UltrasonicSpecificObjectData_Trend>(
    UltrasonicSpecificObjectData_Trend_descriptor(), name, value);
}
// ===================================================================

class RadarSpecificObjectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.RadarSpecificObjectData) */ {
 public:
  RadarSpecificObjectData();
  virtual ~RadarSpecificObjectData();

  RadarSpecificObjectData(const RadarSpecificObjectData& from);

  inline RadarSpecificObjectData& operator=(const RadarSpecificObjectData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadarSpecificObjectData(RadarSpecificObjectData&& from) noexcept
    : RadarSpecificObjectData() {
    *this = ::std::move(from);
  }

  inline RadarSpecificObjectData& operator=(RadarSpecificObjectData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarSpecificObjectData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadarSpecificObjectData* internal_default_instance() {
    return reinterpret_cast<const RadarSpecificObjectData*>(
               &_RadarSpecificObjectData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RadarSpecificObjectData* other);
  friend void swap(RadarSpecificObjectData& a, RadarSpecificObjectData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadarSpecificObjectData* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarSpecificObjectData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarSpecificObjectData& from);
  void MergeFrom(const RadarSpecificObjectData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarSpecificObjectData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double rcs = 1;
  void clear_rcs();
  static const int kRcsFieldNumber = 1;
  double rcs() const;
  void set_rcs(double value);

  // @@protoc_insertion_point(class_scope:osi3.RadarSpecificObjectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double rcs_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fsensorspecific_2eproto::TableStruct;
  friend void ::protobuf_osi_5fsensorspecific_2eproto::InitDefaultsRadarSpecificObjectDataImpl();
};
// -------------------------------------------------------------------

class LidarSpecificObjectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.LidarSpecificObjectData) */ {
 public:
  LidarSpecificObjectData();
  virtual ~LidarSpecificObjectData();

  LidarSpecificObjectData(const LidarSpecificObjectData& from);

  inline LidarSpecificObjectData& operator=(const LidarSpecificObjectData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LidarSpecificObjectData(LidarSpecificObjectData&& from) noexcept
    : LidarSpecificObjectData() {
    *this = ::std::move(from);
  }

  inline LidarSpecificObjectData& operator=(LidarSpecificObjectData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LidarSpecificObjectData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LidarSpecificObjectData* internal_default_instance() {
    return reinterpret_cast<const LidarSpecificObjectData*>(
               &_LidarSpecificObjectData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LidarSpecificObjectData* other);
  friend void swap(LidarSpecificObjectData& a, LidarSpecificObjectData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LidarSpecificObjectData* New() const PROTOBUF_FINAL { return New(NULL); }

  LidarSpecificObjectData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LidarSpecificObjectData& from);
  void MergeFrom(const LidarSpecificObjectData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LidarSpecificObjectData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:osi3.LidarSpecificObjectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fsensorspecific_2eproto::TableStruct;
  friend void ::protobuf_osi_5fsensorspecific_2eproto::InitDefaultsLidarSpecificObjectDataImpl();
};
// -------------------------------------------------------------------

class CameraSpecificObjectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.CameraSpecificObjectData) */ {
 public:
  CameraSpecificObjectData();
  virtual ~CameraSpecificObjectData();

  CameraSpecificObjectData(const CameraSpecificObjectData& from);

  inline CameraSpecificObjectData& operator=(const CameraSpecificObjectData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CameraSpecificObjectData(CameraSpecificObjectData&& from) noexcept
    : CameraSpecificObjectData() {
    *this = ::std::move(from);
  }

  inline CameraSpecificObjectData& operator=(CameraSpecificObjectData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraSpecificObjectData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraSpecificObjectData* internal_default_instance() {
    return reinterpret_cast<const CameraSpecificObjectData*>(
               &_CameraSpecificObjectData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CameraSpecificObjectData* other);
  friend void swap(CameraSpecificObjectData& a, CameraSpecificObjectData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CameraSpecificObjectData* New() const PROTOBUF_FINAL { return New(NULL); }

  CameraSpecificObjectData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CameraSpecificObjectData& from);
  void MergeFrom(const CameraSpecificObjectData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CameraSpecificObjectData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:osi3.CameraSpecificObjectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fsensorspecific_2eproto::TableStruct;
  friend void ::protobuf_osi_5fsensorspecific_2eproto::InitDefaultsCameraSpecificObjectDataImpl();
};
// -------------------------------------------------------------------

class UltrasonicSpecificObjectData_Signalway : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.UltrasonicSpecificObjectData.Signalway) */ {
 public:
  UltrasonicSpecificObjectData_Signalway();
  virtual ~UltrasonicSpecificObjectData_Signalway();

  UltrasonicSpecificObjectData_Signalway(const UltrasonicSpecificObjectData_Signalway& from);

  inline UltrasonicSpecificObjectData_Signalway& operator=(const UltrasonicSpecificObjectData_Signalway& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UltrasonicSpecificObjectData_Signalway(UltrasonicSpecificObjectData_Signalway&& from) noexcept
    : UltrasonicSpecificObjectData_Signalway() {
    *this = ::std::move(from);
  }

  inline UltrasonicSpecificObjectData_Signalway& operator=(UltrasonicSpecificObjectData_Signalway&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UltrasonicSpecificObjectData_Signalway& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UltrasonicSpecificObjectData_Signalway* internal_default_instance() {
    return reinterpret_cast<const UltrasonicSpecificObjectData_Signalway*>(
               &_UltrasonicSpecificObjectData_Signalway_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UltrasonicSpecificObjectData_Signalway* other);
  friend void swap(UltrasonicSpecificObjectData_Signalway& a, UltrasonicSpecificObjectData_Signalway& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UltrasonicSpecificObjectData_Signalway* New() const PROTOBUF_FINAL { return New(NULL); }

  UltrasonicSpecificObjectData_Signalway* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UltrasonicSpecificObjectData_Signalway& from);
  void MergeFrom(const UltrasonicSpecificObjectData_Signalway& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UltrasonicSpecificObjectData_Signalway* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.Identifier sender_id = 1;
  bool has_sender_id() const;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  const ::osi3::Identifier& sender_id() const;
  ::osi3::Identifier* release_sender_id();
  ::osi3::Identifier* mutable_sender_id();
  void set_allocated_sender_id(::osi3::Identifier* sender_id);

  // .osi3.Identifier receiver_id = 2;
  bool has_receiver_id() const;
  void clear_receiver_id();
  static const int kReceiverIdFieldNumber = 2;
  const ::osi3::Identifier& receiver_id() const;
  ::osi3::Identifier* release_receiver_id();
  ::osi3::Identifier* mutable_receiver_id();
  void set_allocated_receiver_id(::osi3::Identifier* receiver_id);

  // @@protoc_insertion_point(class_scope:osi3.UltrasonicSpecificObjectData.Signalway)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::Identifier* sender_id_;
  ::osi3::Identifier* receiver_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fsensorspecific_2eproto::TableStruct;
  friend void ::protobuf_osi_5fsensorspecific_2eproto::InitDefaultsUltrasonicSpecificObjectData_SignalwayImpl();
};
// -------------------------------------------------------------------

class UltrasonicSpecificObjectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.UltrasonicSpecificObjectData) */ {
 public:
  UltrasonicSpecificObjectData();
  virtual ~UltrasonicSpecificObjectData();

  UltrasonicSpecificObjectData(const UltrasonicSpecificObjectData& from);

  inline UltrasonicSpecificObjectData& operator=(const UltrasonicSpecificObjectData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UltrasonicSpecificObjectData(UltrasonicSpecificObjectData&& from) noexcept
    : UltrasonicSpecificObjectData() {
    *this = ::std::move(from);
  }

  inline UltrasonicSpecificObjectData& operator=(UltrasonicSpecificObjectData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UltrasonicSpecificObjectData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UltrasonicSpecificObjectData* internal_default_instance() {
    return reinterpret_cast<const UltrasonicSpecificObjectData*>(
               &_UltrasonicSpecificObjectData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UltrasonicSpecificObjectData* other);
  friend void swap(UltrasonicSpecificObjectData& a, UltrasonicSpecificObjectData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UltrasonicSpecificObjectData* New() const PROTOBUF_FINAL { return New(NULL); }

  UltrasonicSpecificObjectData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UltrasonicSpecificObjectData& from);
  void MergeFrom(const UltrasonicSpecificObjectData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UltrasonicSpecificObjectData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UltrasonicSpecificObjectData_Signalway Signalway;

  typedef UltrasonicSpecificObjectData_TrilaterationStatus TrilaterationStatus;
  static const TrilaterationStatus TRILATERATION_STATUS_UNKNOWN =
    UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_UNKNOWN;
  static const TrilaterationStatus TRILATERATION_STATUS_OTHER =
    UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_OTHER;
  static const TrilaterationStatus TRILATERATION_STATUS_NOT_TRILATERATED =
    UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_NOT_TRILATERATED;
  static const TrilaterationStatus TRILATERATION_STATUS_TRILATERATED =
    UltrasonicSpecificObjectData_TrilaterationStatus_TRILATERATION_STATUS_TRILATERATED;
  static inline bool TrilaterationStatus_IsValid(int value) {
    return UltrasonicSpecificObjectData_TrilaterationStatus_IsValid(value);
  }
  static const TrilaterationStatus TrilaterationStatus_MIN =
    UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_MIN;
  static const TrilaterationStatus TrilaterationStatus_MAX =
    UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_MAX;
  static const int TrilaterationStatus_ARRAYSIZE =
    UltrasonicSpecificObjectData_TrilaterationStatus_TrilaterationStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TrilaterationStatus_descriptor() {
    return UltrasonicSpecificObjectData_TrilaterationStatus_descriptor();
  }
  static inline const ::std::string& TrilaterationStatus_Name(TrilaterationStatus value) {
    return UltrasonicSpecificObjectData_TrilaterationStatus_Name(value);
  }
  static inline bool TrilaterationStatus_Parse(const ::std::string& name,
      TrilaterationStatus* value) {
    return UltrasonicSpecificObjectData_TrilaterationStatus_Parse(name, value);
  }

  typedef UltrasonicSpecificObjectData_Trend Trend;
  static const Trend TREND_UNKNOWN =
    UltrasonicSpecificObjectData_Trend_TREND_UNKNOWN;
  static const Trend TREND_OTHER =
    UltrasonicSpecificObjectData_Trend_TREND_OTHER;
  static const Trend TREND_CONSTANT_APPROACHING =
    UltrasonicSpecificObjectData_Trend_TREND_CONSTANT_APPROACHING;
  static const Trend TREND_CONSTANT =
    UltrasonicSpecificObjectData_Trend_TREND_CONSTANT;
  static const Trend TREND_APPROACHING =
    UltrasonicSpecificObjectData_Trend_TREND_APPROACHING;
  static const Trend TREND_DEPARTING =
    UltrasonicSpecificObjectData_Trend_TREND_DEPARTING;
  static inline bool Trend_IsValid(int value) {
    return UltrasonicSpecificObjectData_Trend_IsValid(value);
  }
  static const Trend Trend_MIN =
    UltrasonicSpecificObjectData_Trend_Trend_MIN;
  static const Trend Trend_MAX =
    UltrasonicSpecificObjectData_Trend_Trend_MAX;
  static const int Trend_ARRAYSIZE =
    UltrasonicSpecificObjectData_Trend_Trend_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Trend_descriptor() {
    return UltrasonicSpecificObjectData_Trend_descriptor();
  }
  static inline const ::std::string& Trend_Name(Trend value) {
    return UltrasonicSpecificObjectData_Trend_Name(value);
  }
  static inline bool Trend_Parse(const ::std::string& name,
      Trend* value) {
    return UltrasonicSpecificObjectData_Trend_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .osi3.UltrasonicSpecificObjectData.Signalway signalway = 5;
  int signalway_size() const;
  void clear_signalway();
  static const int kSignalwayFieldNumber = 5;
  const ::osi3::UltrasonicSpecificObjectData_Signalway& signalway(int index) const;
  ::osi3::UltrasonicSpecificObjectData_Signalway* mutable_signalway(int index);
  ::osi3::UltrasonicSpecificObjectData_Signalway* add_signalway();
  ::google::protobuf::RepeatedPtrField< ::osi3::UltrasonicSpecificObjectData_Signalway >*
      mutable_signalway();
  const ::google::protobuf::RepeatedPtrField< ::osi3::UltrasonicSpecificObjectData_Signalway >&
      signalway() const;

  // double maximum_measurement_distance_sensor = 1;
  void clear_maximum_measurement_distance_sensor();
  static const int kMaximumMeasurementDistanceSensorFieldNumber = 1;
  double maximum_measurement_distance_sensor() const;
  void set_maximum_measurement_distance_sensor(double value);

  // double probability = 2;
  void clear_probability();
  static const int kProbabilityFieldNumber = 2;
  double probability() const;
  void set_probability(double value);

  // .osi3.UltrasonicSpecificObjectData.TrilaterationStatus trilateration_status = 3;
  void clear_trilateration_status();
  static const int kTrilaterationStatusFieldNumber = 3;
  ::osi3::UltrasonicSpecificObjectData_TrilaterationStatus trilateration_status() const;
  void set_trilateration_status(::osi3::UltrasonicSpecificObjectData_TrilaterationStatus value);

  // .osi3.UltrasonicSpecificObjectData.Trend trend = 4;
  void clear_trend();
  static const int kTrendFieldNumber = 4;
  ::osi3::UltrasonicSpecificObjectData_Trend trend() const;
  void set_trend(::osi3::UltrasonicSpecificObjectData_Trend value);

  // @@protoc_insertion_point(class_scope:osi3.UltrasonicSpecificObjectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::UltrasonicSpecificObjectData_Signalway > signalway_;
  double maximum_measurement_distance_sensor_;
  double probability_;
  int trilateration_status_;
  int trend_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fsensorspecific_2eproto::TableStruct;
  friend void ::protobuf_osi_5fsensorspecific_2eproto::InitDefaultsUltrasonicSpecificObjectDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RadarSpecificObjectData

// double rcs = 1;
inline void RadarSpecificObjectData::clear_rcs() {
  rcs_ = 0;
}
inline double RadarSpecificObjectData::rcs() const {
  // @@protoc_insertion_point(field_get:osi3.RadarSpecificObjectData.rcs)
  return rcs_;
}
inline void RadarSpecificObjectData::set_rcs(double value) {
  
  rcs_ = value;
  // @@protoc_insertion_point(field_set:osi3.RadarSpecificObjectData.rcs)
}

// -------------------------------------------------------------------

// LidarSpecificObjectData

// -------------------------------------------------------------------

// CameraSpecificObjectData

// -------------------------------------------------------------------

// UltrasonicSpecificObjectData_Signalway

// .osi3.Identifier sender_id = 1;
inline bool UltrasonicSpecificObjectData_Signalway::has_sender_id() const {
  return this != internal_default_instance() && sender_id_ != NULL;
}
inline const ::osi3::Identifier& UltrasonicSpecificObjectData_Signalway::sender_id() const {
  const ::osi3::Identifier* p = sender_id_;
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.Signalway.sender_id)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::Identifier*>(
      &::osi3::_Identifier_default_instance_);
}
inline ::osi3::Identifier* UltrasonicSpecificObjectData_Signalway::release_sender_id() {
  // @@protoc_insertion_point(field_release:osi3.UltrasonicSpecificObjectData.Signalway.sender_id)
  
  ::osi3::Identifier* temp = sender_id_;
  sender_id_ = NULL;
  return temp;
}
inline ::osi3::Identifier* UltrasonicSpecificObjectData_Signalway::mutable_sender_id() {
  
  if (sender_id_ == NULL) {
    sender_id_ = new ::osi3::Identifier;
  }
  // @@protoc_insertion_point(field_mutable:osi3.UltrasonicSpecificObjectData.Signalway.sender_id)
  return sender_id_;
}
inline void UltrasonicSpecificObjectData_Signalway::set_allocated_sender_id(::osi3::Identifier* sender_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sender_id_);
  }
  if (sender_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sender_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sender_id, submessage_arena);
    }
    
  } else {
    
  }
  sender_id_ = sender_id;
  // @@protoc_insertion_point(field_set_allocated:osi3.UltrasonicSpecificObjectData.Signalway.sender_id)
}

// .osi3.Identifier receiver_id = 2;
inline bool UltrasonicSpecificObjectData_Signalway::has_receiver_id() const {
  return this != internal_default_instance() && receiver_id_ != NULL;
}
inline const ::osi3::Identifier& UltrasonicSpecificObjectData_Signalway::receiver_id() const {
  const ::osi3::Identifier* p = receiver_id_;
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.Signalway.receiver_id)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::Identifier*>(
      &::osi3::_Identifier_default_instance_);
}
inline ::osi3::Identifier* UltrasonicSpecificObjectData_Signalway::release_receiver_id() {
  // @@protoc_insertion_point(field_release:osi3.UltrasonicSpecificObjectData.Signalway.receiver_id)
  
  ::osi3::Identifier* temp = receiver_id_;
  receiver_id_ = NULL;
  return temp;
}
inline ::osi3::Identifier* UltrasonicSpecificObjectData_Signalway::mutable_receiver_id() {
  
  if (receiver_id_ == NULL) {
    receiver_id_ = new ::osi3::Identifier;
  }
  // @@protoc_insertion_point(field_mutable:osi3.UltrasonicSpecificObjectData.Signalway.receiver_id)
  return receiver_id_;
}
inline void UltrasonicSpecificObjectData_Signalway::set_allocated_receiver_id(::osi3::Identifier* receiver_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(receiver_id_);
  }
  if (receiver_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      receiver_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, receiver_id, submessage_arena);
    }
    
  } else {
    
  }
  receiver_id_ = receiver_id;
  // @@protoc_insertion_point(field_set_allocated:osi3.UltrasonicSpecificObjectData.Signalway.receiver_id)
}

// -------------------------------------------------------------------

// UltrasonicSpecificObjectData

// double maximum_measurement_distance_sensor = 1;
inline void UltrasonicSpecificObjectData::clear_maximum_measurement_distance_sensor() {
  maximum_measurement_distance_sensor_ = 0;
}
inline double UltrasonicSpecificObjectData::maximum_measurement_distance_sensor() const {
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.maximum_measurement_distance_sensor)
  return maximum_measurement_distance_sensor_;
}
inline void UltrasonicSpecificObjectData::set_maximum_measurement_distance_sensor(double value) {
  
  maximum_measurement_distance_sensor_ = value;
  // @@protoc_insertion_point(field_set:osi3.UltrasonicSpecificObjectData.maximum_measurement_distance_sensor)
}

// double probability = 2;
inline void UltrasonicSpecificObjectData::clear_probability() {
  probability_ = 0;
}
inline double UltrasonicSpecificObjectData::probability() const {
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.probability)
  return probability_;
}
inline void UltrasonicSpecificObjectData::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.UltrasonicSpecificObjectData.probability)
}

// .osi3.UltrasonicSpecificObjectData.TrilaterationStatus trilateration_status = 3;
inline void UltrasonicSpecificObjectData::clear_trilateration_status() {
  trilateration_status_ = 0;
}
inline ::osi3::UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::trilateration_status() const {
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.trilateration_status)
  return static_cast< ::osi3::UltrasonicSpecificObjectData_TrilaterationStatus >(trilateration_status_);
}
inline void UltrasonicSpecificObjectData::set_trilateration_status(::osi3::UltrasonicSpecificObjectData_TrilaterationStatus value) {
  
  trilateration_status_ = value;
  // @@protoc_insertion_point(field_set:osi3.UltrasonicSpecificObjectData.trilateration_status)
}

// .osi3.UltrasonicSpecificObjectData.Trend trend = 4;
inline void UltrasonicSpecificObjectData::clear_trend() {
  trend_ = 0;
}
inline ::osi3::UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::trend() const {
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.trend)
  return static_cast< ::osi3::UltrasonicSpecificObjectData_Trend >(trend_);
}
inline void UltrasonicSpecificObjectData::set_trend(::osi3::UltrasonicSpecificObjectData_Trend value) {
  
  trend_ = value;
  // @@protoc_insertion_point(field_set:osi3.UltrasonicSpecificObjectData.trend)
}

// repeated .osi3.UltrasonicSpecificObjectData.Signalway signalway = 5;
inline int UltrasonicSpecificObjectData::signalway_size() const {
  return signalway_.size();
}
inline void UltrasonicSpecificObjectData::clear_signalway() {
  signalway_.Clear();
}
inline const ::osi3::UltrasonicSpecificObjectData_Signalway& UltrasonicSpecificObjectData::signalway(int index) const {
  // @@protoc_insertion_point(field_get:osi3.UltrasonicSpecificObjectData.signalway)
  return signalway_.Get(index);
}
inline ::osi3::UltrasonicSpecificObjectData_Signalway* UltrasonicSpecificObjectData::mutable_signalway(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.UltrasonicSpecificObjectData.signalway)
  return signalway_.Mutable(index);
}
inline ::osi3::UltrasonicSpecificObjectData_Signalway* UltrasonicSpecificObjectData::add_signalway() {
  // @@protoc_insertion_point(field_add:osi3.UltrasonicSpecificObjectData.signalway)
  return signalway_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::UltrasonicSpecificObjectData_Signalway >*
UltrasonicSpecificObjectData::mutable_signalway() {
  // @@protoc_insertion_point(field_mutable_list:osi3.UltrasonicSpecificObjectData.signalway)
  return &signalway_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::UltrasonicSpecificObjectData_Signalway >&
UltrasonicSpecificObjectData::signalway() const {
  // @@protoc_insertion_point(field_list:osi3.UltrasonicSpecificObjectData.signalway)
  return signalway_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::osi3::UltrasonicSpecificObjectData_TrilaterationStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::UltrasonicSpecificObjectData_TrilaterationStatus>() {
  return ::osi3::UltrasonicSpecificObjectData_TrilaterationStatus_descriptor();
}
template <> struct is_proto_enum< ::osi3::UltrasonicSpecificObjectData_Trend> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::UltrasonicSpecificObjectData_Trend>() {
  return ::osi3::UltrasonicSpecificObjectData_Trend_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fsensorspecific_2eproto__INCLUDED
