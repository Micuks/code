// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedobject.proto

#include "osi_detectedobject.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class DetectedItemHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedItemHeader>
      _instance;
} _DetectedItemHeader_default_instance_;
class DetectedStationaryObject_CandidateStationaryObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedStationaryObject_CandidateStationaryObject>
      _instance;
} _DetectedStationaryObject_CandidateStationaryObject_default_instance_;
class DetectedStationaryObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedStationaryObject>
      _instance;
} _DetectedStationaryObject_default_instance_;
class DetectedMovingObject_CandidateMovingObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedMovingObject_CandidateMovingObject>
      _instance;
} _DetectedMovingObject_CandidateMovingObject_default_instance_;
class DetectedMovingObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedMovingObject>
      _instance;
} _DetectedMovingObject_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fdetectedobject_2eproto {
void InitDefaultsDetectedItemHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fcommon_2eproto::InitDefaultsIdentifier();
  {
    void* ptr = &::osi3::_DetectedItemHeader_default_instance_;
    new (ptr) ::osi3::DetectedItemHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedItemHeader::InitAsDefaultInstance();
}

void InitDefaultsDetectedItemHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedItemHeaderImpl);
}

void InitDefaultsDetectedStationaryObject_CandidateStationaryObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fobject_2eproto::InitDefaultsStationaryObject_Classification();
  {
    void* ptr = &::osi3::_DetectedStationaryObject_CandidateStationaryObject_default_instance_;
    new (ptr) ::osi3::DetectedStationaryObject_CandidateStationaryObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedStationaryObject_CandidateStationaryObject::InitAsDefaultInstance();
}

void InitDefaultsDetectedStationaryObject_CandidateStationaryObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedStationaryObject_CandidateStationaryObjectImpl);
}

void InitDefaultsDetectedStationaryObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  protobuf_osi_5fcommon_2eproto::InitDefaultsBaseStationary();
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObject_CandidateStationaryObject();
  {
    void* ptr = &::osi3::_DetectedStationaryObject_default_instance_;
    new (ptr) ::osi3::DetectedStationaryObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedStationaryObject::InitAsDefaultInstance();
}

void InitDefaultsDetectedStationaryObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedStationaryObjectImpl);
}

void InitDefaultsDetectedMovingObject_CandidateMovingObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fobject_2eproto::InitDefaultsMovingObject_VehicleClassification();
  protobuf_osi_5fcommon_2eproto::InitDefaultsOrientation3d();
  {
    void* ptr = &::osi3::_DetectedMovingObject_CandidateMovingObject_default_instance_;
    new (ptr) ::osi3::DetectedMovingObject_CandidateMovingObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedMovingObject_CandidateMovingObject::InitAsDefaultInstance();
}

void InitDefaultsDetectedMovingObject_CandidateMovingObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedMovingObject_CandidateMovingObjectImpl);
}

void InitDefaultsDetectedMovingObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  protobuf_osi_5fcommon_2eproto::InitDefaultsBaseMoving();
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObject_CandidateMovingObject();
  protobuf_osi_5fsensorspecific_2eproto::InitDefaultsRadarSpecificObjectData();
  protobuf_osi_5fsensorspecific_2eproto::InitDefaultsLidarSpecificObjectData();
  protobuf_osi_5fsensorspecific_2eproto::InitDefaultsCameraSpecificObjectData();
  protobuf_osi_5fsensorspecific_2eproto::InitDefaultsUltrasonicSpecificObjectData();
  {
    void* ptr = &::osi3::_DetectedMovingObject_default_instance_;
    new (ptr) ::osi3::DetectedMovingObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedMovingObject::InitAsDefaultInstance();
}

void InitDefaultsDetectedMovingObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedMovingObjectImpl);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, tracking_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, ground_truth_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, existence_probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, measurement_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedItemHeader, sensor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject_CandidateStationaryObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject_CandidateStationaryObject, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject_CandidateStationaryObject, classification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject, base_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedStationaryObject, candidate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject_CandidateMovingObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject_CandidateMovingObject, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject_CandidateMovingObject, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject_CandidateMovingObject, vehicle_classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject_CandidateMovingObject, head_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject_CandidateMovingObject, upper_body_pose_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, base_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, reference_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, movement_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, percentage_side_lane_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, percentage_side_lane_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, radar_specifics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, lidar_specifics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, camera_specifics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedMovingObject, ultrasonic_specifics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::DetectedItemHeader)},
  { 11, -1, sizeof(::osi3::DetectedStationaryObject_CandidateStationaryObject)},
  { 18, -1, sizeof(::osi3::DetectedStationaryObject)},
  { 27, -1, sizeof(::osi3::DetectedMovingObject_CandidateMovingObject)},
  { 37, -1, sizeof(::osi3::DetectedMovingObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedItemHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedStationaryObject_CandidateStationaryObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedStationaryObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedMovingObject_CandidateMovingObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedMovingObject_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_detectedobject.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030osi_detectedobject.proto\022\004osi3\032\020osi_co"
      "mmon.proto\032\020osi_object.proto\032\030osi_sensor"
      "specific.proto\"\217\003\n\022DetectedItemHeader\022%\n"
      "\013tracking_id\030\001 \001(\0132\020.osi3.Identifier\022)\n\017"
      "ground_truth_id\030\002 \003(\0132\020.osi3.Identifier\022"
      "\035\n\025existence_probability\030\003 \001(\001\022\013\n\003age\030\004 "
      "\001(\001\022D\n\021measurement_state\030\005 \001(\0162).osi3.De"
      "tectedItemHeader.MeasurementState\022#\n\tsen"
      "sor_id\030\006 \003(\0132\020.osi3.Identifier\"\217\001\n\020Measu"
      "rementState\022\035\n\031MEASUREMENT_STATE_UNKNOWN"
      "\020\000\022\033\n\027MEASUREMENT_STATE_OTHER\020\001\022\036\n\032MEASU"
      "REMENT_STATE_MEASURED\020\002\022\037\n\033MEASUREMENT_S"
      "TATE_PREDICTED\020\003\"\317\002\n\030DetectedStationaryO"
      "bject\022(\n\006header\030\001 \001(\0132\030.osi3.DetectedIte"
      "mHeader\022\"\n\004base\030\002 \001(\0132\024.osi3.BaseStation"
      "ary\022\'\n\tbase_rmse\030\003 \001(\0132\024.osi3.BaseStatio"
      "nary\022K\n\tcandidate\030\004 \003(\01328.osi3.DetectedS"
      "tationaryObject.CandidateStationaryObjec"
      "t\032o\n\031CandidateStationaryObject\022\023\n\013probab"
      "ility\030\001 \001(\001\022=\n\016classification\030\002 \001(\0132%.os"
      "i3.StationaryObject.Classification\"\204\013\n\024D"
      "etectedMovingObject\022(\n\006header\030\001 \001(\0132\030.os"
      "i3.DetectedItemHeader\022\036\n\004base\030\002 \001(\0132\020.os"
      "i3.BaseMoving\022#\n\tbase_rmse\030\003 \001(\0132\020.osi3."
      "BaseMoving\022B\n\017reference_point\030\004 \001(\0162).os"
      "i3.DetectedMovingObject.ReferencePoint\022@"
      "\n\016movement_state\030\005 \001(\0162(.osi3.DetectedMo"
      "vingObject.MovementState\022!\n\031percentage_s"
      "ide_lane_left\030\006 \001(\001\022\"\n\032percentage_side_l"
      "ane_right\030\007 \001(\001\022C\n\tcandidate\030\010 \003(\01320.osi"
      "3.DetectedMovingObject.CandidateMovingOb"
      "ject\0226\n\017radar_specifics\030d \001(\0132\035.osi3.Rad"
      "arSpecificObjectData\0226\n\017lidar_specifics\030"
      "e \001(\0132\035.osi3.LidarSpecificObjectData\0228\n\020"
      "camera_specifics\030f \001(\0132\036.osi3.CameraSpec"
      "ificObjectData\022@\n\024ultrasonic_specifics\030g"
      " \001(\0132\".osi3.UltrasonicSpecificObjectData"
      "\032\363\001\n\025CandidateMovingObject\022\023\n\013probabilit"
      "y\030\001 \001(\001\022%\n\004type\030\002 \001(\0162\027.osi3.MovingObjec"
      "t.Type\022H\n\026vehicle_classification\030\003 \001(\0132("
      ".osi3.MovingObject.VehicleClassification"
      "\022&\n\thead_pose\030\004 \001(\0132\023.osi3.Orientation3d"
      "\022,\n\017upper_body_pose\030\005 \001(\0132\023.osi3.Orienta"
      "tion3d\"\352\002\n\016ReferencePoint\022\033\n\027REFERENCE_P"
      "OINT_UNKNOWN\020\000\022\031\n\025REFERENCE_POINT_OTHER\020"
      "\001\022\032\n\026REFERENCE_POINT_CENTER\020\002\022\037\n\033REFEREN"
      "CE_POINT_MIDDLE_LEFT\020\003\022 \n\034REFERENCE_POIN"
      "T_MIDDLE_RIGHT\020\004\022\037\n\033REFERENCE_POINT_REAR"
      "_MIDDLE\020\005\022\035\n\031REFERENCE_POINT_REAR_LEFT\020\006"
      "\022\036\n\032REFERENCE_POINT_REAR_RIGHT\020\007\022 \n\034REFE"
      "RENCE_POINT_FRONT_MIDDLE\020\010\022\036\n\032REFERENCE_"
      "POINT_FRONT_LEFT\020\t\022\037\n\033REFERENCE_POINT_FR"
      "ONT_RIGHT\020\n\"\233\001\n\rMovementState\022\032\n\026MOVEMEN"
      "T_STATE_UNKNOWN\020\000\022\030\n\024MOVEMENT_STATE_OTHE"
      "R\020\001\022\035\n\031MOVEMENT_STATE_STATIONARY\020\002\022\031\n\025MO"
      "VEMENT_STATE_MOVING\020\003\022\032\n\026MOVEMENT_STATE_"
      "STOPPED\020\004B\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_detectedobject.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5fcommon_2eproto::AddDescriptors();
  ::protobuf_osi_5fobject_2eproto::AddDescriptors();
  ::protobuf_osi_5fsensorspecific_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fdetectedobject_2eproto
namespace osi3 {
const ::google::protobuf::EnumDescriptor* DetectedItemHeader_MeasurementState_descriptor() {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5fdetectedobject_2eproto::file_level_enum_descriptors[0];
}
bool DetectedItemHeader_MeasurementState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedItemHeader_MeasurementState DetectedItemHeader::MEASUREMENT_STATE_UNKNOWN;
const DetectedItemHeader_MeasurementState DetectedItemHeader::MEASUREMENT_STATE_OTHER;
const DetectedItemHeader_MeasurementState DetectedItemHeader::MEASUREMENT_STATE_MEASURED;
const DetectedItemHeader_MeasurementState DetectedItemHeader::MEASUREMENT_STATE_PREDICTED;
const DetectedItemHeader_MeasurementState DetectedItemHeader::MeasurementState_MIN;
const DetectedItemHeader_MeasurementState DetectedItemHeader::MeasurementState_MAX;
const int DetectedItemHeader::MeasurementState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DetectedMovingObject_ReferencePoint_descriptor() {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5fdetectedobject_2eproto::file_level_enum_descriptors[1];
}
bool DetectedMovingObject_ReferencePoint_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_UNKNOWN;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_OTHER;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_CENTER;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_MIDDLE_LEFT;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_MIDDLE_RIGHT;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_REAR_MIDDLE;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_REAR_LEFT;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_REAR_RIGHT;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_FRONT_MIDDLE;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_FRONT_LEFT;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::REFERENCE_POINT_FRONT_RIGHT;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::ReferencePoint_MIN;
const DetectedMovingObject_ReferencePoint DetectedMovingObject::ReferencePoint_MAX;
const int DetectedMovingObject::ReferencePoint_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DetectedMovingObject_MovementState_descriptor() {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5fdetectedobject_2eproto::file_level_enum_descriptors[2];
}
bool DetectedMovingObject_MovementState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedMovingObject_MovementState DetectedMovingObject::MOVEMENT_STATE_UNKNOWN;
const DetectedMovingObject_MovementState DetectedMovingObject::MOVEMENT_STATE_OTHER;
const DetectedMovingObject_MovementState DetectedMovingObject::MOVEMENT_STATE_STATIONARY;
const DetectedMovingObject_MovementState DetectedMovingObject::MOVEMENT_STATE_MOVING;
const DetectedMovingObject_MovementState DetectedMovingObject::MOVEMENT_STATE_STOPPED;
const DetectedMovingObject_MovementState DetectedMovingObject::MovementState_MIN;
const DetectedMovingObject_MovementState DetectedMovingObject::MovementState_MAX;
const int DetectedMovingObject::MovementState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DetectedItemHeader::InitAsDefaultInstance() {
  ::osi3::_DetectedItemHeader_default_instance_._instance.get_mutable()->tracking_id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
}
void DetectedItemHeader::clear_tracking_id() {
  if (GetArenaNoVirtual() == NULL && tracking_id_ != NULL) {
    delete tracking_id_;
  }
  tracking_id_ = NULL;
}
void DetectedItemHeader::clear_ground_truth_id() {
  ground_truth_id_.Clear();
}
void DetectedItemHeader::clear_sensor_id() {
  sensor_id_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedItemHeader::kTrackingIdFieldNumber;
const int DetectedItemHeader::kGroundTruthIdFieldNumber;
const int DetectedItemHeader::kExistenceProbabilityFieldNumber;
const int DetectedItemHeader::kAgeFieldNumber;
const int DetectedItemHeader::kMeasurementStateFieldNumber;
const int DetectedItemHeader::kSensorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedItemHeader::DetectedItemHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedItemHeader)
}
DetectedItemHeader::DetectedItemHeader(const DetectedItemHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ground_truth_id_(from.ground_truth_id_),
      sensor_id_(from.sensor_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tracking_id()) {
    tracking_id_ = new ::osi3::Identifier(*from.tracking_id_);
  } else {
    tracking_id_ = NULL;
  }
  ::memcpy(&existence_probability_, &from.existence_probability_,
    static_cast<size_t>(reinterpret_cast<char*>(&measurement_state_) -
    reinterpret_cast<char*>(&existence_probability_)) + sizeof(measurement_state_));
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedItemHeader)
}

void DetectedItemHeader::SharedCtor() {
  ::memset(&tracking_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&measurement_state_) -
      reinterpret_cast<char*>(&tracking_id_)) + sizeof(measurement_state_));
  _cached_size_ = 0;
}

DetectedItemHeader::~DetectedItemHeader() {
  // @@protoc_insertion_point(destructor:osi3.DetectedItemHeader)
  SharedDtor();
}

void DetectedItemHeader::SharedDtor() {
  if (this != internal_default_instance()) delete tracking_id_;
}

void DetectedItemHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedItemHeader::descriptor() {
  ::protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedItemHeader& DetectedItemHeader::default_instance() {
  ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  return *internal_default_instance();
}

DetectedItemHeader* DetectedItemHeader::New(::google::protobuf::Arena* arena) const {
  DetectedItemHeader* n = new DetectedItemHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedItemHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedItemHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ground_truth_id_.Clear();
  sensor_id_.Clear();
  if (GetArenaNoVirtual() == NULL && tracking_id_ != NULL) {
    delete tracking_id_;
  }
  tracking_id_ = NULL;
  ::memset(&existence_probability_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&measurement_state_) -
      reinterpret_cast<char*>(&existence_probability_)) + sizeof(measurement_state_));
  _internal_metadata_.Clear();
}

bool DetectedItemHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedItemHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier tracking_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tracking_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.Identifier ground_truth_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ground_truth_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double existence_probability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &existence_probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double age = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.DetectedItemHeader.MeasurementState measurement_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_measurement_state(static_cast< ::osi3::DetectedItemHeader_MeasurementState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.Identifier sensor_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sensor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedItemHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedItemHeader)
  return false;
#undef DO_
}

void DetectedItemHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedItemHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier tracking_id = 1;
  if (this->has_tracking_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tracking_id_, output);
  }

  // repeated .osi3.Identifier ground_truth_id = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ground_truth_id_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ground_truth_id(static_cast<int>(i)), output);
  }

  // double existence_probability = 3;
  if (this->existence_probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->existence_probability(), output);
  }

  // double age = 4;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->age(), output);
  }

  // .osi3.DetectedItemHeader.MeasurementState measurement_state = 5;
  if (this->measurement_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->measurement_state(), output);
  }

  // repeated .osi3.Identifier sensor_id = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensor_id_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->sensor_id(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedItemHeader)
}

::google::protobuf::uint8* DetectedItemHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedItemHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier tracking_id = 1;
  if (this->has_tracking_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->tracking_id_, deterministic, target);
  }

  // repeated .osi3.Identifier ground_truth_id = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ground_truth_id_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ground_truth_id(static_cast<int>(i)), deterministic, target);
  }

  // double existence_probability = 3;
  if (this->existence_probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->existence_probability(), target);
  }

  // double age = 4;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->age(), target);
  }

  // .osi3.DetectedItemHeader.MeasurementState measurement_state = 5;
  if (this->measurement_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->measurement_state(), target);
  }

  // repeated .osi3.Identifier sensor_id = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensor_id_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->sensor_id(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedItemHeader)
  return target;
}

size_t DetectedItemHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedItemHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.Identifier ground_truth_id = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ground_truth_id_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ground_truth_id(static_cast<int>(i)));
    }
  }

  // repeated .osi3.Identifier sensor_id = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->sensor_id_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sensor_id(static_cast<int>(i)));
    }
  }

  // .osi3.Identifier tracking_id = 1;
  if (this->has_tracking_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tracking_id_);
  }

  // double existence_probability = 3;
  if (this->existence_probability() != 0) {
    total_size += 1 + 8;
  }

  // double age = 4;
  if (this->age() != 0) {
    total_size += 1 + 8;
  }

  // .osi3.DetectedItemHeader.MeasurementState measurement_state = 5;
  if (this->measurement_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->measurement_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedItemHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedItemHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedItemHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedItemHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedItemHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedItemHeader)
    MergeFrom(*source);
  }
}

void DetectedItemHeader::MergeFrom(const DetectedItemHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedItemHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ground_truth_id_.MergeFrom(from.ground_truth_id_);
  sensor_id_.MergeFrom(from.sensor_id_);
  if (from.has_tracking_id()) {
    mutable_tracking_id()->::osi3::Identifier::MergeFrom(from.tracking_id());
  }
  if (from.existence_probability() != 0) {
    set_existence_probability(from.existence_probability());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.measurement_state() != 0) {
    set_measurement_state(from.measurement_state());
  }
}

void DetectedItemHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedItemHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedItemHeader::CopyFrom(const DetectedItemHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedItemHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedItemHeader::IsInitialized() const {
  return true;
}

void DetectedItemHeader::Swap(DetectedItemHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedItemHeader::InternalSwap(DetectedItemHeader* other) {
  using std::swap;
  ground_truth_id_.InternalSwap(&other->ground_truth_id_);
  sensor_id_.InternalSwap(&other->sensor_id_);
  swap(tracking_id_, other->tracking_id_);
  swap(existence_probability_, other->existence_probability_);
  swap(age_, other->age_);
  swap(measurement_state_, other->measurement_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedItemHeader::GetMetadata() const {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedStationaryObject_CandidateStationaryObject::InitAsDefaultInstance() {
  ::osi3::_DetectedStationaryObject_CandidateStationaryObject_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::StationaryObject_Classification*>(
      ::osi3::StationaryObject_Classification::internal_default_instance());
}
void DetectedStationaryObject_CandidateStationaryObject::clear_classification() {
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedStationaryObject_CandidateStationaryObject::kProbabilityFieldNumber;
const int DetectedStationaryObject_CandidateStationaryObject::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedStationaryObject_CandidateStationaryObject::DetectedStationaryObject_CandidateStationaryObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObject_CandidateStationaryObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedStationaryObject.CandidateStationaryObject)
}
DetectedStationaryObject_CandidateStationaryObject::DetectedStationaryObject_CandidateStationaryObject(const DetectedStationaryObject_CandidateStationaryObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_classification()) {
    classification_ = new ::osi3::StationaryObject_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedStationaryObject.CandidateStationaryObject)
}

void DetectedStationaryObject_CandidateStationaryObject::SharedCtor() {
  ::memset(&classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&classification_)) + sizeof(probability_));
  _cached_size_ = 0;
}

DetectedStationaryObject_CandidateStationaryObject::~DetectedStationaryObject_CandidateStationaryObject() {
  // @@protoc_insertion_point(destructor:osi3.DetectedStationaryObject.CandidateStationaryObject)
  SharedDtor();
}

void DetectedStationaryObject_CandidateStationaryObject::SharedDtor() {
  if (this != internal_default_instance()) delete classification_;
}

void DetectedStationaryObject_CandidateStationaryObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedStationaryObject_CandidateStationaryObject::descriptor() {
  ::protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedStationaryObject_CandidateStationaryObject& DetectedStationaryObject_CandidateStationaryObject::default_instance() {
  ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObject_CandidateStationaryObject();
  return *internal_default_instance();
}

DetectedStationaryObject_CandidateStationaryObject* DetectedStationaryObject_CandidateStationaryObject::New(::google::protobuf::Arena* arena) const {
  DetectedStationaryObject_CandidateStationaryObject* n = new DetectedStationaryObject_CandidateStationaryObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedStationaryObject_CandidateStationaryObject::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedStationaryObject_CandidateStationaryObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.StationaryObject.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedStationaryObject.CandidateStationaryObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedStationaryObject.CandidateStationaryObject)
  return false;
#undef DO_
}

void DetectedStationaryObject_CandidateStationaryObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.StationaryObject.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedStationaryObject.CandidateStationaryObject)
}

::google::protobuf::uint8* DetectedStationaryObject_CandidateStationaryObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.StationaryObject.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedStationaryObject.CandidateStationaryObject)
  return target;
}

size_t DetectedStationaryObject_CandidateStationaryObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.StationaryObject.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedStationaryObject_CandidateStationaryObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedStationaryObject_CandidateStationaryObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedStationaryObject_CandidateStationaryObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedStationaryObject.CandidateStationaryObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedStationaryObject.CandidateStationaryObject)
    MergeFrom(*source);
  }
}

void DetectedStationaryObject_CandidateStationaryObject::MergeFrom(const DetectedStationaryObject_CandidateStationaryObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_classification()) {
    mutable_classification()->::osi3::StationaryObject_Classification::MergeFrom(from.classification());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void DetectedStationaryObject_CandidateStationaryObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedStationaryObject_CandidateStationaryObject::CopyFrom(const DetectedStationaryObject_CandidateStationaryObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedStationaryObject.CandidateStationaryObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedStationaryObject_CandidateStationaryObject::IsInitialized() const {
  return true;
}

void DetectedStationaryObject_CandidateStationaryObject::Swap(DetectedStationaryObject_CandidateStationaryObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedStationaryObject_CandidateStationaryObject::InternalSwap(DetectedStationaryObject_CandidateStationaryObject* other) {
  using std::swap;
  swap(classification_, other->classification_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedStationaryObject_CandidateStationaryObject::GetMetadata() const {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedStationaryObject::InitAsDefaultInstance() {
  ::osi3::_DetectedStationaryObject_default_instance_._instance.get_mutable()->header_ = const_cast< ::osi3::DetectedItemHeader*>(
      ::osi3::DetectedItemHeader::internal_default_instance());
  ::osi3::_DetectedStationaryObject_default_instance_._instance.get_mutable()->base_ = const_cast< ::osi3::BaseStationary*>(
      ::osi3::BaseStationary::internal_default_instance());
  ::osi3::_DetectedStationaryObject_default_instance_._instance.get_mutable()->base_rmse_ = const_cast< ::osi3::BaseStationary*>(
      ::osi3::BaseStationary::internal_default_instance());
}
void DetectedStationaryObject::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
void DetectedStationaryObject::clear_base_rmse() {
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedStationaryObject::kHeaderFieldNumber;
const int DetectedStationaryObject::kBaseFieldNumber;
const int DetectedStationaryObject::kBaseRmseFieldNumber;
const int DetectedStationaryObject::kCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedStationaryObject::DetectedStationaryObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedStationaryObject)
}
DetectedStationaryObject::DetectedStationaryObject(const DetectedStationaryObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::osi3::DetectedItemHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_base()) {
    base_ = new ::osi3::BaseStationary(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_base_rmse()) {
    base_rmse_ = new ::osi3::BaseStationary(*from.base_rmse_);
  } else {
    base_rmse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedStationaryObject)
}

void DetectedStationaryObject::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_rmse_) -
      reinterpret_cast<char*>(&header_)) + sizeof(base_rmse_));
  _cached_size_ = 0;
}

DetectedStationaryObject::~DetectedStationaryObject() {
  // @@protoc_insertion_point(destructor:osi3.DetectedStationaryObject)
  SharedDtor();
}

void DetectedStationaryObject::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete base_rmse_;
}

void DetectedStationaryObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedStationaryObject::descriptor() {
  ::protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedStationaryObject& DetectedStationaryObject::default_instance() {
  ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedStationaryObject();
  return *internal_default_instance();
}

DetectedStationaryObject* DetectedStationaryObject::New(::google::protobuf::Arena* arena) const {
  DetectedStationaryObject* n = new DetectedStationaryObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedStationaryObject::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedStationaryObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectedStationaryObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedStationaryObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseStationary base = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseStationary base_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.DetectedStationaryObject.CandidateStationaryObject candidate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedStationaryObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedStationaryObject)
  return false;
#undef DO_
}

void DetectedStationaryObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedStationaryObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->base_, output);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_rmse_, output);
  }

  // repeated .osi3.DetectedStationaryObject.CandidateStationaryObject candidate = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->candidate(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedStationaryObject)
}

::google::protobuf::uint8* DetectedStationaryObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedStationaryObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->base_, deterministic, target);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->base_rmse_, deterministic, target);
  }

  // repeated .osi3.DetectedStationaryObject.CandidateStationaryObject candidate = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedStationaryObject)
  return target;
}

size_t DetectedStationaryObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedStationaryObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedStationaryObject.CandidateStationaryObject candidate = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_rmse_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedStationaryObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedStationaryObject)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedStationaryObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedStationaryObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedStationaryObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedStationaryObject)
    MergeFrom(*source);
  }
}

void DetectedStationaryObject::MergeFrom(const DetectedStationaryObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedStationaryObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.has_header()) {
    mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
  }
  if (from.has_base()) {
    mutable_base()->::osi3::BaseStationary::MergeFrom(from.base());
  }
  if (from.has_base_rmse()) {
    mutable_base_rmse()->::osi3::BaseStationary::MergeFrom(from.base_rmse());
  }
}

void DetectedStationaryObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedStationaryObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedStationaryObject::CopyFrom(const DetectedStationaryObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedStationaryObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedStationaryObject::IsInitialized() const {
  return true;
}

void DetectedStationaryObject::Swap(DetectedStationaryObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedStationaryObject::InternalSwap(DetectedStationaryObject* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  swap(header_, other->header_);
  swap(base_, other->base_);
  swap(base_rmse_, other->base_rmse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedStationaryObject::GetMetadata() const {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedMovingObject_CandidateMovingObject::InitAsDefaultInstance() {
  ::osi3::_DetectedMovingObject_CandidateMovingObject_default_instance_._instance.get_mutable()->vehicle_classification_ = const_cast< ::osi3::MovingObject_VehicleClassification*>(
      ::osi3::MovingObject_VehicleClassification::internal_default_instance());
  ::osi3::_DetectedMovingObject_CandidateMovingObject_default_instance_._instance.get_mutable()->head_pose_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
  ::osi3::_DetectedMovingObject_CandidateMovingObject_default_instance_._instance.get_mutable()->upper_body_pose_ = const_cast< ::osi3::Orientation3d*>(
      ::osi3::Orientation3d::internal_default_instance());
}
void DetectedMovingObject_CandidateMovingObject::clear_vehicle_classification() {
  if (GetArenaNoVirtual() == NULL && vehicle_classification_ != NULL) {
    delete vehicle_classification_;
  }
  vehicle_classification_ = NULL;
}
void DetectedMovingObject_CandidateMovingObject::clear_head_pose() {
  if (GetArenaNoVirtual() == NULL && head_pose_ != NULL) {
    delete head_pose_;
  }
  head_pose_ = NULL;
}
void DetectedMovingObject_CandidateMovingObject::clear_upper_body_pose() {
  if (GetArenaNoVirtual() == NULL && upper_body_pose_ != NULL) {
    delete upper_body_pose_;
  }
  upper_body_pose_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedMovingObject_CandidateMovingObject::kProbabilityFieldNumber;
const int DetectedMovingObject_CandidateMovingObject::kTypeFieldNumber;
const int DetectedMovingObject_CandidateMovingObject::kVehicleClassificationFieldNumber;
const int DetectedMovingObject_CandidateMovingObject::kHeadPoseFieldNumber;
const int DetectedMovingObject_CandidateMovingObject::kUpperBodyPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedMovingObject_CandidateMovingObject::DetectedMovingObject_CandidateMovingObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObject_CandidateMovingObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedMovingObject.CandidateMovingObject)
}
DetectedMovingObject_CandidateMovingObject::DetectedMovingObject_CandidateMovingObject(const DetectedMovingObject_CandidateMovingObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vehicle_classification()) {
    vehicle_classification_ = new ::osi3::MovingObject_VehicleClassification(*from.vehicle_classification_);
  } else {
    vehicle_classification_ = NULL;
  }
  if (from.has_head_pose()) {
    head_pose_ = new ::osi3::Orientation3d(*from.head_pose_);
  } else {
    head_pose_ = NULL;
  }
  if (from.has_upper_body_pose()) {
    upper_body_pose_ = new ::osi3::Orientation3d(*from.upper_body_pose_);
  } else {
    upper_body_pose_ = NULL;
  }
  ::memcpy(&probability_, &from.probability_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&probability_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedMovingObject.CandidateMovingObject)
}

void DetectedMovingObject_CandidateMovingObject::SharedCtor() {
  ::memset(&vehicle_classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&vehicle_classification_)) + sizeof(type_));
  _cached_size_ = 0;
}

DetectedMovingObject_CandidateMovingObject::~DetectedMovingObject_CandidateMovingObject() {
  // @@protoc_insertion_point(destructor:osi3.DetectedMovingObject.CandidateMovingObject)
  SharedDtor();
}

void DetectedMovingObject_CandidateMovingObject::SharedDtor() {
  if (this != internal_default_instance()) delete vehicle_classification_;
  if (this != internal_default_instance()) delete head_pose_;
  if (this != internal_default_instance()) delete upper_body_pose_;
}

void DetectedMovingObject_CandidateMovingObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedMovingObject_CandidateMovingObject::descriptor() {
  ::protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedMovingObject_CandidateMovingObject& DetectedMovingObject_CandidateMovingObject::default_instance() {
  ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObject_CandidateMovingObject();
  return *internal_default_instance();
}

DetectedMovingObject_CandidateMovingObject* DetectedMovingObject_CandidateMovingObject::New(::google::protobuf::Arena* arena) const {
  DetectedMovingObject_CandidateMovingObject* n = new DetectedMovingObject_CandidateMovingObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedMovingObject_CandidateMovingObject::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedMovingObject.CandidateMovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && vehicle_classification_ != NULL) {
    delete vehicle_classification_;
  }
  vehicle_classification_ = NULL;
  if (GetArenaNoVirtual() == NULL && head_pose_ != NULL) {
    delete head_pose_;
  }
  head_pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_body_pose_ != NULL) {
    delete upper_body_pose_;
  }
  upper_body_pose_ = NULL;
  ::memset(&probability_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&probability_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool DetectedMovingObject_CandidateMovingObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedMovingObject.CandidateMovingObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MovingObject.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::osi3::MovingObject_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.MovingObject.VehicleClassification vehicle_classification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d head_pose = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Orientation3d upper_body_pose = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_body_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedMovingObject.CandidateMovingObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedMovingObject.CandidateMovingObject)
  return false;
#undef DO_
}

void DetectedMovingObject_CandidateMovingObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedMovingObject.CandidateMovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.MovingObject.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .osi3.MovingObject.VehicleClassification vehicle_classification = 3;
  if (this->has_vehicle_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->vehicle_classification_, output);
  }

  // .osi3.Orientation3d head_pose = 4;
  if (this->has_head_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->head_pose_, output);
  }

  // .osi3.Orientation3d upper_body_pose = 5;
  if (this->has_upper_body_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->upper_body_pose_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedMovingObject.CandidateMovingObject)
}

::google::protobuf::uint8* DetectedMovingObject_CandidateMovingObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedMovingObject.CandidateMovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.MovingObject.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .osi3.MovingObject.VehicleClassification vehicle_classification = 3;
  if (this->has_vehicle_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->vehicle_classification_, deterministic, target);
  }

  // .osi3.Orientation3d head_pose = 4;
  if (this->has_head_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->head_pose_, deterministic, target);
  }

  // .osi3.Orientation3d upper_body_pose = 5;
  if (this->has_upper_body_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->upper_body_pose_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedMovingObject.CandidateMovingObject)
  return target;
}

size_t DetectedMovingObject_CandidateMovingObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedMovingObject.CandidateMovingObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.MovingObject.VehicleClassification vehicle_classification = 3;
  if (this->has_vehicle_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vehicle_classification_);
  }

  // .osi3.Orientation3d head_pose = 4;
  if (this->has_head_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->head_pose_);
  }

  // .osi3.Orientation3d upper_body_pose = 5;
  if (this->has_upper_body_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upper_body_pose_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  // .osi3.MovingObject.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedMovingObject_CandidateMovingObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedMovingObject.CandidateMovingObject)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedMovingObject_CandidateMovingObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedMovingObject_CandidateMovingObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedMovingObject.CandidateMovingObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedMovingObject.CandidateMovingObject)
    MergeFrom(*source);
  }
}

void DetectedMovingObject_CandidateMovingObject::MergeFrom(const DetectedMovingObject_CandidateMovingObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedMovingObject.CandidateMovingObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vehicle_classification()) {
    mutable_vehicle_classification()->::osi3::MovingObject_VehicleClassification::MergeFrom(from.vehicle_classification());
  }
  if (from.has_head_pose()) {
    mutable_head_pose()->::osi3::Orientation3d::MergeFrom(from.head_pose());
  }
  if (from.has_upper_body_pose()) {
    mutable_upper_body_pose()->::osi3::Orientation3d::MergeFrom(from.upper_body_pose());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DetectedMovingObject_CandidateMovingObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedMovingObject.CandidateMovingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedMovingObject_CandidateMovingObject::CopyFrom(const DetectedMovingObject_CandidateMovingObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedMovingObject.CandidateMovingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedMovingObject_CandidateMovingObject::IsInitialized() const {
  return true;
}

void DetectedMovingObject_CandidateMovingObject::Swap(DetectedMovingObject_CandidateMovingObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedMovingObject_CandidateMovingObject::InternalSwap(DetectedMovingObject_CandidateMovingObject* other) {
  using std::swap;
  swap(vehicle_classification_, other->vehicle_classification_);
  swap(head_pose_, other->head_pose_);
  swap(upper_body_pose_, other->upper_body_pose_);
  swap(probability_, other->probability_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedMovingObject_CandidateMovingObject::GetMetadata() const {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedMovingObject::InitAsDefaultInstance() {
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->header_ = const_cast< ::osi3::DetectedItemHeader*>(
      ::osi3::DetectedItemHeader::internal_default_instance());
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->base_ = const_cast< ::osi3::BaseMoving*>(
      ::osi3::BaseMoving::internal_default_instance());
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->base_rmse_ = const_cast< ::osi3::BaseMoving*>(
      ::osi3::BaseMoving::internal_default_instance());
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->radar_specifics_ = const_cast< ::osi3::RadarSpecificObjectData*>(
      ::osi3::RadarSpecificObjectData::internal_default_instance());
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->lidar_specifics_ = const_cast< ::osi3::LidarSpecificObjectData*>(
      ::osi3::LidarSpecificObjectData::internal_default_instance());
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->camera_specifics_ = const_cast< ::osi3::CameraSpecificObjectData*>(
      ::osi3::CameraSpecificObjectData::internal_default_instance());
  ::osi3::_DetectedMovingObject_default_instance_._instance.get_mutable()->ultrasonic_specifics_ = const_cast< ::osi3::UltrasonicSpecificObjectData*>(
      ::osi3::UltrasonicSpecificObjectData::internal_default_instance());
}
void DetectedMovingObject::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
void DetectedMovingObject::clear_base_rmse() {
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
}
void DetectedMovingObject::clear_radar_specifics() {
  if (GetArenaNoVirtual() == NULL && radar_specifics_ != NULL) {
    delete radar_specifics_;
  }
  radar_specifics_ = NULL;
}
void DetectedMovingObject::clear_lidar_specifics() {
  if (GetArenaNoVirtual() == NULL && lidar_specifics_ != NULL) {
    delete lidar_specifics_;
  }
  lidar_specifics_ = NULL;
}
void DetectedMovingObject::clear_camera_specifics() {
  if (GetArenaNoVirtual() == NULL && camera_specifics_ != NULL) {
    delete camera_specifics_;
  }
  camera_specifics_ = NULL;
}
void DetectedMovingObject::clear_ultrasonic_specifics() {
  if (GetArenaNoVirtual() == NULL && ultrasonic_specifics_ != NULL) {
    delete ultrasonic_specifics_;
  }
  ultrasonic_specifics_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedMovingObject::kHeaderFieldNumber;
const int DetectedMovingObject::kBaseFieldNumber;
const int DetectedMovingObject::kBaseRmseFieldNumber;
const int DetectedMovingObject::kReferencePointFieldNumber;
const int DetectedMovingObject::kMovementStateFieldNumber;
const int DetectedMovingObject::kPercentageSideLaneLeftFieldNumber;
const int DetectedMovingObject::kPercentageSideLaneRightFieldNumber;
const int DetectedMovingObject::kCandidateFieldNumber;
const int DetectedMovingObject::kRadarSpecificsFieldNumber;
const int DetectedMovingObject::kLidarSpecificsFieldNumber;
const int DetectedMovingObject::kCameraSpecificsFieldNumber;
const int DetectedMovingObject::kUltrasonicSpecificsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedMovingObject::DetectedMovingObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedMovingObject)
}
DetectedMovingObject::DetectedMovingObject(const DetectedMovingObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::osi3::DetectedItemHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_base()) {
    base_ = new ::osi3::BaseMoving(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_base_rmse()) {
    base_rmse_ = new ::osi3::BaseMoving(*from.base_rmse_);
  } else {
    base_rmse_ = NULL;
  }
  if (from.has_radar_specifics()) {
    radar_specifics_ = new ::osi3::RadarSpecificObjectData(*from.radar_specifics_);
  } else {
    radar_specifics_ = NULL;
  }
  if (from.has_lidar_specifics()) {
    lidar_specifics_ = new ::osi3::LidarSpecificObjectData(*from.lidar_specifics_);
  } else {
    lidar_specifics_ = NULL;
  }
  if (from.has_camera_specifics()) {
    camera_specifics_ = new ::osi3::CameraSpecificObjectData(*from.camera_specifics_);
  } else {
    camera_specifics_ = NULL;
  }
  if (from.has_ultrasonic_specifics()) {
    ultrasonic_specifics_ = new ::osi3::UltrasonicSpecificObjectData(*from.ultrasonic_specifics_);
  } else {
    ultrasonic_specifics_ = NULL;
  }
  ::memcpy(&reference_point_, &from.reference_point_,
    static_cast<size_t>(reinterpret_cast<char*>(&percentage_side_lane_right_) -
    reinterpret_cast<char*>(&reference_point_)) + sizeof(percentage_side_lane_right_));
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedMovingObject)
}

void DetectedMovingObject::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&percentage_side_lane_right_) -
      reinterpret_cast<char*>(&header_)) + sizeof(percentage_side_lane_right_));
  _cached_size_ = 0;
}

DetectedMovingObject::~DetectedMovingObject() {
  // @@protoc_insertion_point(destructor:osi3.DetectedMovingObject)
  SharedDtor();
}

void DetectedMovingObject::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete base_rmse_;
  if (this != internal_default_instance()) delete radar_specifics_;
  if (this != internal_default_instance()) delete lidar_specifics_;
  if (this != internal_default_instance()) delete camera_specifics_;
  if (this != internal_default_instance()) delete ultrasonic_specifics_;
}

void DetectedMovingObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedMovingObject::descriptor() {
  ::protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedMovingObject& DetectedMovingObject::default_instance() {
  ::protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedMovingObject();
  return *internal_default_instance();
}

DetectedMovingObject* DetectedMovingObject::New(::google::protobuf::Arena* arena) const {
  DetectedMovingObject* n = new DetectedMovingObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedMovingObject::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedMovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
  if (GetArenaNoVirtual() == NULL && radar_specifics_ != NULL) {
    delete radar_specifics_;
  }
  radar_specifics_ = NULL;
  if (GetArenaNoVirtual() == NULL && lidar_specifics_ != NULL) {
    delete lidar_specifics_;
  }
  lidar_specifics_ = NULL;
  if (GetArenaNoVirtual() == NULL && camera_specifics_ != NULL) {
    delete camera_specifics_;
  }
  camera_specifics_ = NULL;
  if (GetArenaNoVirtual() == NULL && ultrasonic_specifics_ != NULL) {
    delete ultrasonic_specifics_;
  }
  ultrasonic_specifics_ = NULL;
  ::memset(&reference_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&percentage_side_lane_right_) -
      reinterpret_cast<char*>(&reference_point_)) + sizeof(percentage_side_lane_right_));
  _internal_metadata_.Clear();
}

bool DetectedMovingObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedMovingObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseMoving base = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseMoving base_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.DetectedMovingObject.ReferencePoint reference_point = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reference_point(static_cast< ::osi3::DetectedMovingObject_ReferencePoint >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.DetectedMovingObject.MovementState movement_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_movement_state(static_cast< ::osi3::DetectedMovingObject_MovementState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double percentage_side_lane_left = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &percentage_side_lane_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double percentage_side_lane_right = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &percentage_side_lane_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.DetectedMovingObject.CandidateMovingObject candidate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.RadarSpecificObjectData radar_specifics = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radar_specifics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.LidarSpecificObjectData lidar_specifics = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lidar_specifics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.CameraSpecificObjectData camera_specifics = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_camera_specifics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.UltrasonicSpecificObjectData ultrasonic_specifics = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ultrasonic_specifics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedMovingObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedMovingObject)
  return false;
#undef DO_
}

void DetectedMovingObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedMovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .osi3.BaseMoving base = 2;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->base_, output);
  }

  // .osi3.BaseMoving base_rmse = 3;
  if (this->has_base_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_rmse_, output);
  }

  // .osi3.DetectedMovingObject.ReferencePoint reference_point = 4;
  if (this->reference_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->reference_point(), output);
  }

  // .osi3.DetectedMovingObject.MovementState movement_state = 5;
  if (this->movement_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->movement_state(), output);
  }

  // double percentage_side_lane_left = 6;
  if (this->percentage_side_lane_left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->percentage_side_lane_left(), output);
  }

  // double percentage_side_lane_right = 7;
  if (this->percentage_side_lane_right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->percentage_side_lane_right(), output);
  }

  // repeated .osi3.DetectedMovingObject.CandidateMovingObject candidate = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->candidate(static_cast<int>(i)), output);
  }

  // .osi3.RadarSpecificObjectData radar_specifics = 100;
  if (this->has_radar_specifics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->radar_specifics_, output);
  }

  // .osi3.LidarSpecificObjectData lidar_specifics = 101;
  if (this->has_lidar_specifics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *this->lidar_specifics_, output);
  }

  // .osi3.CameraSpecificObjectData camera_specifics = 102;
  if (this->has_camera_specifics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *this->camera_specifics_, output);
  }

  // .osi3.UltrasonicSpecificObjectData ultrasonic_specifics = 103;
  if (this->has_ultrasonic_specifics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *this->ultrasonic_specifics_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedMovingObject)
}

::google::protobuf::uint8* DetectedMovingObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedMovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .osi3.BaseMoving base = 2;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->base_, deterministic, target);
  }

  // .osi3.BaseMoving base_rmse = 3;
  if (this->has_base_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->base_rmse_, deterministic, target);
  }

  // .osi3.DetectedMovingObject.ReferencePoint reference_point = 4;
  if (this->reference_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->reference_point(), target);
  }

  // .osi3.DetectedMovingObject.MovementState movement_state = 5;
  if (this->movement_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->movement_state(), target);
  }

  // double percentage_side_lane_left = 6;
  if (this->percentage_side_lane_left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->percentage_side_lane_left(), target);
  }

  // double percentage_side_lane_right = 7;
  if (this->percentage_side_lane_right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->percentage_side_lane_right(), target);
  }

  // repeated .osi3.DetectedMovingObject.CandidateMovingObject candidate = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  // .osi3.RadarSpecificObjectData radar_specifics = 100;
  if (this->has_radar_specifics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, *this->radar_specifics_, deterministic, target);
  }

  // .osi3.LidarSpecificObjectData lidar_specifics = 101;
  if (this->has_lidar_specifics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, *this->lidar_specifics_, deterministic, target);
  }

  // .osi3.CameraSpecificObjectData camera_specifics = 102;
  if (this->has_camera_specifics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, *this->camera_specifics_, deterministic, target);
  }

  // .osi3.UltrasonicSpecificObjectData ultrasonic_specifics = 103;
  if (this->has_ultrasonic_specifics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        103, *this->ultrasonic_specifics_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedMovingObject)
  return target;
}

size_t DetectedMovingObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedMovingObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedMovingObject.CandidateMovingObject candidate = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .osi3.BaseMoving base = 2;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_);
  }

  // .osi3.BaseMoving base_rmse = 3;
  if (this->has_base_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_rmse_);
  }

  // .osi3.RadarSpecificObjectData radar_specifics = 100;
  if (this->has_radar_specifics()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->radar_specifics_);
  }

  // .osi3.LidarSpecificObjectData lidar_specifics = 101;
  if (this->has_lidar_specifics()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lidar_specifics_);
  }

  // .osi3.CameraSpecificObjectData camera_specifics = 102;
  if (this->has_camera_specifics()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->camera_specifics_);
  }

  // .osi3.UltrasonicSpecificObjectData ultrasonic_specifics = 103;
  if (this->has_ultrasonic_specifics()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ultrasonic_specifics_);
  }

  // .osi3.DetectedMovingObject.ReferencePoint reference_point = 4;
  if (this->reference_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reference_point());
  }

  // .osi3.DetectedMovingObject.MovementState movement_state = 5;
  if (this->movement_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->movement_state());
  }

  // double percentage_side_lane_left = 6;
  if (this->percentage_side_lane_left() != 0) {
    total_size += 1 + 8;
  }

  // double percentage_side_lane_right = 7;
  if (this->percentage_side_lane_right() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedMovingObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedMovingObject)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedMovingObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedMovingObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedMovingObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedMovingObject)
    MergeFrom(*source);
  }
}

void DetectedMovingObject::MergeFrom(const DetectedMovingObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedMovingObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.has_header()) {
    mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
  }
  if (from.has_base()) {
    mutable_base()->::osi3::BaseMoving::MergeFrom(from.base());
  }
  if (from.has_base_rmse()) {
    mutable_base_rmse()->::osi3::BaseMoving::MergeFrom(from.base_rmse());
  }
  if (from.has_radar_specifics()) {
    mutable_radar_specifics()->::osi3::RadarSpecificObjectData::MergeFrom(from.radar_specifics());
  }
  if (from.has_lidar_specifics()) {
    mutable_lidar_specifics()->::osi3::LidarSpecificObjectData::MergeFrom(from.lidar_specifics());
  }
  if (from.has_camera_specifics()) {
    mutable_camera_specifics()->::osi3::CameraSpecificObjectData::MergeFrom(from.camera_specifics());
  }
  if (from.has_ultrasonic_specifics()) {
    mutable_ultrasonic_specifics()->::osi3::UltrasonicSpecificObjectData::MergeFrom(from.ultrasonic_specifics());
  }
  if (from.reference_point() != 0) {
    set_reference_point(from.reference_point());
  }
  if (from.movement_state() != 0) {
    set_movement_state(from.movement_state());
  }
  if (from.percentage_side_lane_left() != 0) {
    set_percentage_side_lane_left(from.percentage_side_lane_left());
  }
  if (from.percentage_side_lane_right() != 0) {
    set_percentage_side_lane_right(from.percentage_side_lane_right());
  }
}

void DetectedMovingObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedMovingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedMovingObject::CopyFrom(const DetectedMovingObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedMovingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedMovingObject::IsInitialized() const {
  return true;
}

void DetectedMovingObject::Swap(DetectedMovingObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedMovingObject::InternalSwap(DetectedMovingObject* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  swap(header_, other->header_);
  swap(base_, other->base_);
  swap(base_rmse_, other->base_rmse_);
  swap(radar_specifics_, other->radar_specifics_);
  swap(lidar_specifics_, other->lidar_specifics_);
  swap(camera_specifics_, other->camera_specifics_);
  swap(ultrasonic_specifics_, other->ultrasonic_specifics_);
  swap(reference_point_, other->reference_point_);
  swap(movement_state_, other->movement_state_);
  swap(percentage_side_lane_left_, other->percentage_side_lane_left_);
  swap(percentage_side_lane_right_, other->percentage_side_lane_right_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedMovingObject::GetMetadata() const {
  protobuf_osi_5fdetectedobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
