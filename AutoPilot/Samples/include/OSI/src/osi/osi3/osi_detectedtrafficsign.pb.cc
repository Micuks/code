// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedtrafficsign.proto

#include "osi_detectedtrafficsign.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class DetectedTrafficSign_DetectedMainSign_CandidateMainSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedTrafficSign_DetectedMainSign_CandidateMainSign>
      _instance;
} _DetectedTrafficSign_DetectedMainSign_CandidateMainSign_default_instance_;
class DetectedTrafficSign_DetectedMainSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedTrafficSign_DetectedMainSign>
      _instance;
} _DetectedTrafficSign_DetectedMainSign_default_instance_;
class DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign>
      _instance;
} _DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_default_instance_;
class DetectedTrafficSign_DetectedSupplementarySignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedTrafficSign_DetectedSupplementarySign>
      _instance;
} _DetectedTrafficSign_DetectedSupplementarySign_default_instance_;
class DetectedTrafficSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedTrafficSign>
      _instance;
} _DetectedTrafficSign_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fdetectedtrafficsign_2eproto {
void InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5ftrafficsign_2eproto::InitDefaultsTrafficSign_MainSign_Classification();
  {
    void* ptr = &::osi3::_DetectedTrafficSign_DetectedMainSign_CandidateMainSign_default_instance_;
    new (ptr) ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InitAsDefaultInstance();
}

void InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSignImpl);
}

void InitDefaultsDetectedTrafficSign_DetectedMainSignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSign();
  protobuf_osi_5fcommon_2eproto::InitDefaultsBaseStationary();
  {
    void* ptr = &::osi3::_DetectedTrafficSign_DetectedMainSign_default_instance_;
    new (ptr) ::osi3::DetectedTrafficSign_DetectedMainSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedTrafficSign_DetectedMainSign::InitAsDefaultInstance();
}

void InitDefaultsDetectedTrafficSign_DetectedMainSign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedTrafficSign_DetectedMainSignImpl);
}

void InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5ftrafficsign_2eproto::InitDefaultsTrafficSign_SupplementarySign_Classification();
  {
    void* ptr = &::osi3::_DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_default_instance_;
    new (ptr) ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InitAsDefaultInstance();
}

void InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignImpl);
}

void InitDefaultsDetectedTrafficSign_DetectedSupplementarySignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
  protobuf_osi_5fcommon_2eproto::InitDefaultsBaseStationary();
  {
    void* ptr = &::osi3::_DetectedTrafficSign_DetectedSupplementarySign_default_instance_;
    new (ptr) ::osi3::DetectedTrafficSign_DetectedSupplementarySign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedTrafficSign_DetectedSupplementarySign::InitAsDefaultInstance();
}

void InitDefaultsDetectedTrafficSign_DetectedSupplementarySign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedTrafficSign_DetectedSupplementarySignImpl);
}

void InitDefaultsDetectedTrafficSignImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign();
  protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign();
  {
    void* ptr = &::osi3::_DetectedTrafficSign_default_instance_;
    new (ptr) ::osi3::DetectedTrafficSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedTrafficSign::InitAsDefaultInstance();
}

void InitDefaultsDetectedTrafficSign() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedTrafficSignImpl);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign, classification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign, candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign, base_rmse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedMainSign, geometry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, classification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign, candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign_DetectedSupplementarySign, base_rmse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign, main_sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedTrafficSign, supplementary_sign_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign)},
  { 7, -1, sizeof(::osi3::DetectedTrafficSign_DetectedMainSign)},
  { 16, -1, sizeof(::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign)},
  { 23, -1, sizeof(::osi3::DetectedTrafficSign_DetectedSupplementarySign)},
  { 31, -1, sizeof(::osi3::DetectedTrafficSign)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedTrafficSign_DetectedMainSign_CandidateMainSign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedTrafficSign_DetectedMainSign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedTrafficSign_DetectedSupplementarySign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedTrafficSign_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_detectedtrafficsign.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035osi_detectedtrafficsign.proto\022\004osi3\032\020o"
      "si_common.proto\032\025osi_trafficsign.proto\032\030"
      "osi_detectedobject.proto\"\271\t\n\023DetectedTra"
      "fficSign\022(\n\006header\030\001 \001(\0132\030.osi3.Detected"
      "ItemHeader\022=\n\tmain_sign\030\002 \001(\0132*.osi3.Det"
      "ectedTrafficSign.DetectedMainSign\022O\n\022sup"
      "plementary_sign\030\003 \003(\01323.osi3.DetectedTra"
      "fficSign.DetectedSupplementarySign\032\232\005\n\020D"
      "etectedMainSign\022O\n\tcandidate\030\001 \003(\0132<.osi"
      "3.DetectedTrafficSign.DetectedMainSign.C"
      "andidateMainSign\022\"\n\004base\030\002 \001(\0132\024.osi3.Ba"
      "seStationary\022\'\n\tbase_rmse\030\003 \001(\0132\024.osi3.B"
      "aseStationary\022E\n\010geometry\030\004 \001(\01623.osi3.D"
      "etectedTrafficSign.DetectedMainSign.Geom"
      "etry\032k\n\021CandidateMainSign\022\023\n\013probability"
      "\030\001 \001(\001\022A\n\016classification\030\002 \001(\0132).osi3.Tr"
      "afficSign.MainSign.Classification\"\263\002\n\010Ge"
      "ometry\022\024\n\020GEOMETRY_UNKNOWN\020\000\022\022\n\016GEOMETRY"
      "_OTHER\020\001\022\023\n\017GEOMETRY_CIRCLE\020\002\022\031\n\025GEOMETR"
      "Y_TRIANGLE_TOP\020\003\022\032\n\026GEOMETRY_TRIANGLE_DO"
      "WN\020\004\022\023\n\017GEOMETRY_SQUARE\020\005\022\021\n\rGEOMETRY_PO"
      "LE\020\006\022\026\n\022GEOMETRY_RECTANGLE\020\007\022\022\n\016GEOMETRY"
      "_PLATE\020\010\022\024\n\020GEOMETRY_DIAMOND\020\t\022\027\n\023GEOMET"
      "RY_ARROW_LEFT\020\n\022\030\n\024GEOMETRY_ARROW_RIGHT\020"
      "\013\022\024\n\020GEOMETRY_OCTAGON\020\014\032\312\002\n\031DetectedSupp"
      "lementarySign\022a\n\tcandidate\030\001 \003(\0132N.osi3."
      "DetectedTrafficSign.DetectedSupplementar"
      "ySign.CandidateSupplementarySign\022\"\n\004base"
      "\030\002 \001(\0132\024.osi3.BaseStationary\022\'\n\tbase_rms"
      "e\030\003 \001(\0132\024.osi3.BaseStationary\032}\n\032Candida"
      "teSupplementarySign\022\023\n\013probability\030\001 \001(\001"
      "\022J\n\016classification\030\002 \001(\01322.osi3.TrafficS"
      "ign.SupplementarySign.ClassificationB\002H\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_detectedtrafficsign.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5fcommon_2eproto::AddDescriptors();
  ::protobuf_osi_5ftrafficsign_2eproto::AddDescriptors();
  ::protobuf_osi_5fdetectedobject_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fdetectedtrafficsign_2eproto
namespace osi3 {
const ::google::protobuf::EnumDescriptor* DetectedTrafficSign_DetectedMainSign_Geometry_descriptor() {
  protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_enum_descriptors[0];
}
bool DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_UNKNOWN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_OTHER;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_CIRCLE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_TRIANGLE_TOP;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_TRIANGLE_DOWN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_SQUARE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_POLE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_RECTANGLE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_PLATE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_DIAMOND;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_ARROW_LEFT;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_ARROW_RIGHT;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_OCTAGON;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::Geometry_MIN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::Geometry_MAX;
const int DetectedTrafficSign_DetectedMainSign::Geometry_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InitAsDefaultInstance() {
  ::osi3::_DetectedTrafficSign_DetectedMainSign_CandidateMainSign_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::TrafficSign_MainSign_Classification*>(
      ::osi3::TrafficSign_MainSign_Classification::internal_default_instance());
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_classification() {
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedMainSign_CandidateMainSign::kProbabilityFieldNumber;
const int DetectedTrafficSign_DetectedMainSign_CandidateMainSign::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedMainSign_CandidateMainSign::DetectedTrafficSign_DetectedMainSign_CandidateMainSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
}
DetectedTrafficSign_DetectedMainSign_CandidateMainSign::DetectedTrafficSign_DetectedMainSign_CandidateMainSign(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_classification()) {
    classification_ = new ::osi3::TrafficSign_MainSign_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SharedCtor() {
  ::memset(&classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&classification_)) + sizeof(probability_));
  _cached_size_ = 0;
}

DetectedTrafficSign_DetectedMainSign_CandidateMainSign::~DetectedTrafficSign_DetectedMainSign_CandidateMainSign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SharedDtor() {
  if (this != internal_default_instance()) delete classification_;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::descriptor() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSign();
  return *internal_default_instance();
}

DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign* n = new DetectedTrafficSign_DetectedMainSign_CandidateMainSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.TrafficSign.MainSign.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.TrafficSign.MainSign.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.TrafficSign.MainSign.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  return target;
}

size_t DetectedTrafficSign_DetectedMainSign_CandidateMainSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.TrafficSign.MainSign.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedTrafficSign_DetectedMainSign_CandidateMainSign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedMainSign_CandidateMainSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_classification()) {
    mutable_classification()->::osi3::TrafficSign_MainSign_Classification::MergeFrom(from.classification());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::IsInitialized() const {
  return true;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Swap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InternalSwap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign* other) {
  using std::swap;
  swap(classification_, other->classification_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetMetadata() const {
  protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedTrafficSign_DetectedMainSign::InitAsDefaultInstance() {
  ::osi3::_DetectedTrafficSign_DetectedMainSign_default_instance_._instance.get_mutable()->base_ = const_cast< ::osi3::BaseStationary*>(
      ::osi3::BaseStationary::internal_default_instance());
  ::osi3::_DetectedTrafficSign_DetectedMainSign_default_instance_._instance.get_mutable()->base_rmse_ = const_cast< ::osi3::BaseStationary*>(
      ::osi3::BaseStationary::internal_default_instance());
}
void DetectedTrafficSign_DetectedMainSign::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
void DetectedTrafficSign_DetectedMainSign::clear_base_rmse() {
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedMainSign::kCandidateFieldNumber;
const int DetectedTrafficSign_DetectedMainSign::kBaseFieldNumber;
const int DetectedTrafficSign_DetectedMainSign::kBaseRmseFieldNumber;
const int DetectedTrafficSign_DetectedMainSign::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedMainSign::DetectedTrafficSign_DetectedMainSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedMainSign)
}
DetectedTrafficSign_DetectedMainSign::DetectedTrafficSign_DetectedMainSign(const DetectedTrafficSign_DetectedMainSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::osi3::BaseStationary(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_base_rmse()) {
    base_rmse_ = new ::osi3::BaseStationary(*from.base_rmse_);
  } else {
    base_rmse_ = NULL;
  }
  geometry_ = from.geometry_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedMainSign)
}

void DetectedTrafficSign_DetectedMainSign::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geometry_) -
      reinterpret_cast<char*>(&base_)) + sizeof(geometry_));
  _cached_size_ = 0;
}

DetectedTrafficSign_DetectedMainSign::~DetectedTrafficSign_DetectedMainSign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedMainSign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedMainSign::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete base_rmse_;
}

void DetectedTrafficSign_DetectedMainSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedMainSign::descriptor() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedTrafficSign_DetectedMainSign& DetectedTrafficSign_DetectedMainSign::default_instance() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign();
  return *internal_default_instance();
}

DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign_DetectedMainSign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedMainSign* n = new DetectedTrafficSign_DetectedMainSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedMainSign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedMainSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
  geometry_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedTrafficSign_DetectedMainSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedMainSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseStationary base = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseStationary base_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_geometry(static_cast< ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedMainSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedMainSign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedMainSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedMainSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->candidate(static_cast<int>(i)), output);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->base_, output);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_rmse_, output);
  }

  // .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
  if (this->geometry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->geometry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedMainSign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedMainSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedMainSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->base_, deterministic, target);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->base_rmse_, deterministic, target);
  }

  // .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
  if (this->geometry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->geometry(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedMainSign)
  return target;
}

size_t DetectedTrafficSign_DetectedMainSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedMainSign)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_rmse_);
  }

  // .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
  if (this->geometry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->geometry());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedMainSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedTrafficSign_DetectedMainSign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedMainSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedMainSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedMainSign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedMainSign::MergeFrom(const DetectedTrafficSign_DetectedMainSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.has_base()) {
    mutable_base()->::osi3::BaseStationary::MergeFrom(from.base());
  }
  if (from.has_base_rmse()) {
    mutable_base_rmse()->::osi3::BaseStationary::MergeFrom(from.base_rmse());
  }
  if (from.geometry() != 0) {
    set_geometry(from.geometry());
  }
}

void DetectedTrafficSign_DetectedMainSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedMainSign::CopyFrom(const DetectedTrafficSign_DetectedMainSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedMainSign::IsInitialized() const {
  return true;
}

void DetectedTrafficSign_DetectedMainSign::Swap(DetectedTrafficSign_DetectedMainSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedMainSign::InternalSwap(DetectedTrafficSign_DetectedMainSign* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  swap(base_, other->base_);
  swap(base_rmse_, other->base_rmse_);
  swap(geometry_, other->geometry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedMainSign::GetMetadata() const {
  protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InitAsDefaultInstance() {
  ::osi3::_DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::TrafficSign_SupplementarySign_Classification*>(
      ::osi3::TrafficSign_SupplementarySign_Classification::internal_default_instance());
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::clear_classification() {
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::kProbabilityFieldNumber;
const int DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
}
DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_classification()) {
    classification_ = new ::osi3::TrafficSign_SupplementarySign_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SharedCtor() {
  ::memset(&classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&classification_)) + sizeof(probability_));
  _cached_size_ = 0;
}

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::~DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SharedDtor() {
  if (this != internal_default_instance()) delete classification_;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::descriptor() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
  return *internal_default_instance();
}

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* n = new DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  return target;
}

size_t DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::MergeFrom(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_classification()) {
    mutable_classification()->::osi3::TrafficSign_SupplementarySign_Classification::MergeFrom(from.classification());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::CopyFrom(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::IsInitialized() const {
  return true;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::Swap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InternalSwap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* other) {
  using std::swap;
  swap(classification_, other->classification_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::GetMetadata() const {
  protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedTrafficSign_DetectedSupplementarySign::InitAsDefaultInstance() {
  ::osi3::_DetectedTrafficSign_DetectedSupplementarySign_default_instance_._instance.get_mutable()->base_ = const_cast< ::osi3::BaseStationary*>(
      ::osi3::BaseStationary::internal_default_instance());
  ::osi3::_DetectedTrafficSign_DetectedSupplementarySign_default_instance_._instance.get_mutable()->base_rmse_ = const_cast< ::osi3::BaseStationary*>(
      ::osi3::BaseStationary::internal_default_instance());
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_base_rmse() {
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedSupplementarySign::kCandidateFieldNumber;
const int DetectedTrafficSign_DetectedSupplementarySign::kBaseFieldNumber;
const int DetectedTrafficSign_DetectedSupplementarySign::kBaseRmseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign)
}
DetectedTrafficSign_DetectedSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign(const DetectedTrafficSign_DetectedSupplementarySign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::osi3::BaseStationary(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_base_rmse()) {
    base_rmse_ = new ::osi3::BaseStationary(*from.base_rmse_);
  } else {
    base_rmse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign)
}

void DetectedTrafficSign_DetectedSupplementarySign::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_rmse_) -
      reinterpret_cast<char*>(&base_)) + sizeof(base_rmse_));
  _cached_size_ = 0;
}

DetectedTrafficSign_DetectedSupplementarySign::~DetectedTrafficSign_DetectedSupplementarySign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedSupplementarySign::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete base_rmse_;
}

void DetectedTrafficSign_DetectedSupplementarySign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedSupplementarySign::descriptor() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedTrafficSign_DetectedSupplementarySign& DetectedTrafficSign_DetectedSupplementarySign::default_instance() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign();
  return *internal_default_instance();
}

DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedSupplementarySign* n = new DetectedTrafficSign_DetectedSupplementarySign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedSupplementarySign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_rmse_ != NULL) {
    delete base_rmse_;
  }
  base_rmse_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectedTrafficSign_DetectedSupplementarySign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseStationary base = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.BaseStationary base_rmse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_rmse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedSupplementarySign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->candidate(static_cast<int>(i)), output);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->base_, output);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_rmse_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedSupplementarySign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedSupplementarySign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->base_, deterministic, target);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->base_rmse_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  return target;
}

size_t DetectedTrafficSign_DetectedSupplementarySign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // .osi3.BaseStationary base = 2;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_);
  }

  // .osi3.BaseStationary base_rmse = 3;
  if (this->has_base_rmse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_rmse_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedSupplementarySign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedTrafficSign_DetectedSupplementarySign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedSupplementarySign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedSupplementarySign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedSupplementarySign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedSupplementarySign::MergeFrom(const DetectedTrafficSign_DetectedSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.has_base()) {
    mutable_base()->::osi3::BaseStationary::MergeFrom(from.base());
  }
  if (from.has_base_rmse()) {
    mutable_base_rmse()->::osi3::BaseStationary::MergeFrom(from.base_rmse());
  }
}

void DetectedTrafficSign_DetectedSupplementarySign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedSupplementarySign::CopyFrom(const DetectedTrafficSign_DetectedSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedSupplementarySign::IsInitialized() const {
  return true;
}

void DetectedTrafficSign_DetectedSupplementarySign::Swap(DetectedTrafficSign_DetectedSupplementarySign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedSupplementarySign::InternalSwap(DetectedTrafficSign_DetectedSupplementarySign* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  swap(base_, other->base_);
  swap(base_rmse_, other->base_rmse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedSupplementarySign::GetMetadata() const {
  protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedTrafficSign::InitAsDefaultInstance() {
  ::osi3::_DetectedTrafficSign_default_instance_._instance.get_mutable()->header_ = const_cast< ::osi3::DetectedItemHeader*>(
      ::osi3::DetectedItemHeader::internal_default_instance());
  ::osi3::_DetectedTrafficSign_default_instance_._instance.get_mutable()->main_sign_ = const_cast< ::osi3::DetectedTrafficSign_DetectedMainSign*>(
      ::osi3::DetectedTrafficSign_DetectedMainSign::internal_default_instance());
}
void DetectedTrafficSign::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign::kHeaderFieldNumber;
const int DetectedTrafficSign::kMainSignFieldNumber;
const int DetectedTrafficSign::kSupplementarySignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign::DetectedTrafficSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign)
}
DetectedTrafficSign::DetectedTrafficSign(const DetectedTrafficSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      supplementary_sign_(from.supplementary_sign_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::osi3::DetectedItemHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_main_sign()) {
    main_sign_ = new ::osi3::DetectedTrafficSign_DetectedMainSign(*from.main_sign_);
  } else {
    main_sign_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign)
}

void DetectedTrafficSign::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_sign_) -
      reinterpret_cast<char*>(&header_)) + sizeof(main_sign_));
  _cached_size_ = 0;
}

DetectedTrafficSign::~DetectedTrafficSign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign)
  SharedDtor();
}

void DetectedTrafficSign::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete main_sign_;
}

void DetectedTrafficSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign::descriptor() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedTrafficSign& DetectedTrafficSign::default_instance() {
  ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign();
  return *internal_default_instance();
}

DetectedTrafficSign* DetectedTrafficSign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign* n = new DetectedTrafficSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supplementary_sign_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && main_sign_ != NULL) {
    delete main_sign_;
  }
  main_sign_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectedTrafficSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_main_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_supplementary_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign)
  return false;
#undef DO_
}

void DetectedTrafficSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
  if (this->has_main_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->main_sign_, output);
  }

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supplementary_sign_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->supplementary_sign(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign)
}

::google::protobuf::uint8* DetectedTrafficSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
  if (this->has_main_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->main_sign_, deterministic, target);
  }

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supplementary_sign_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->supplementary_sign(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign)
  return target;
}

size_t DetectedTrafficSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->supplementary_sign_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->supplementary_sign(static_cast<int>(i)));
    }
  }

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
  if (this->has_main_sign()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->main_sign_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedTrafficSign* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign::MergeFrom(const DetectedTrafficSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supplementary_sign_.MergeFrom(from.supplementary_sign_);
  if (from.has_header()) {
    mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
  }
  if (from.has_main_sign()) {
    mutable_main_sign()->::osi3::DetectedTrafficSign_DetectedMainSign::MergeFrom(from.main_sign());
  }
}

void DetectedTrafficSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign::CopyFrom(const DetectedTrafficSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign::IsInitialized() const {
  return true;
}

void DetectedTrafficSign::Swap(DetectedTrafficSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign::InternalSwap(DetectedTrafficSign* other) {
  using std::swap;
  supplementary_sign_.InternalSwap(&other->supplementary_sign_);
  swap(header_, other->header_);
  swap(main_sign_, other->main_sign_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign::GetMetadata() const {
  protobuf_osi_5fdetectedtrafficsign_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedtrafficsign_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
