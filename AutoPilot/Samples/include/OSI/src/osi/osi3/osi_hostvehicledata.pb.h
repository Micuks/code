// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_hostvehicledata.proto

#ifndef PROTOBUF_osi_5fhostvehicledata_2eproto__INCLUDED
#define PROTOBUF_osi_5fhostvehicledata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "osi_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_osi_5fhostvehicledata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHostVehicleDataImpl();
void InitDefaultsHostVehicleData();
inline void InitDefaults() {
  InitDefaultsHostVehicleData();
}
}  // namespace protobuf_osi_5fhostvehicledata_2eproto
namespace osi3 {
class HostVehicleData;
class HostVehicleDataDefaultTypeInternal;
extern HostVehicleDataDefaultTypeInternal _HostVehicleData_default_instance_;
}  // namespace osi3
namespace osi3 {

// ===================================================================

class HostVehicleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.HostVehicleData) */ {
 public:
  HostVehicleData();
  virtual ~HostVehicleData();

  HostVehicleData(const HostVehicleData& from);

  inline HostVehicleData& operator=(const HostVehicleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostVehicleData(HostVehicleData&& from) noexcept
    : HostVehicleData() {
    *this = ::std::move(from);
  }

  inline HostVehicleData& operator=(HostVehicleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HostVehicleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HostVehicleData* internal_default_instance() {
    return reinterpret_cast<const HostVehicleData*>(
               &_HostVehicleData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HostVehicleData* other);
  friend void swap(HostVehicleData& a, HostVehicleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostVehicleData* New() const PROTOBUF_FINAL { return New(NULL); }

  HostVehicleData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HostVehicleData& from);
  void MergeFrom(const HostVehicleData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HostVehicleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.BaseMoving location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::osi3::BaseMoving& location() const;
  ::osi3::BaseMoving* release_location();
  ::osi3::BaseMoving* mutable_location();
  void set_allocated_location(::osi3::BaseMoving* location);

  // .osi3.BaseMoving location_rmse = 2;
  bool has_location_rmse() const;
  void clear_location_rmse();
  static const int kLocationRmseFieldNumber = 2;
  const ::osi3::BaseMoving& location_rmse() const;
  ::osi3::BaseMoving* release_location_rmse();
  ::osi3::BaseMoving* mutable_location_rmse();
  void set_allocated_location_rmse(::osi3::BaseMoving* location_rmse);

  // @@protoc_insertion_point(class_scope:osi3.HostVehicleData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::BaseMoving* location_;
  ::osi3::BaseMoving* location_rmse_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fhostvehicledata_2eproto::TableStruct;
  friend void ::protobuf_osi_5fhostvehicledata_2eproto::InitDefaultsHostVehicleDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HostVehicleData

// .osi3.BaseMoving location = 1;
inline bool HostVehicleData::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline const ::osi3::BaseMoving& HostVehicleData::location() const {
  const ::osi3::BaseMoving* p = location_;
  // @@protoc_insertion_point(field_get:osi3.HostVehicleData.location)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseMoving*>(
      &::osi3::_BaseMoving_default_instance_);
}
inline ::osi3::BaseMoving* HostVehicleData::release_location() {
  // @@protoc_insertion_point(field_release:osi3.HostVehicleData.location)
  
  ::osi3::BaseMoving* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::osi3::BaseMoving* HostVehicleData::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::osi3::BaseMoving;
  }
  // @@protoc_insertion_point(field_mutable:osi3.HostVehicleData.location)
  return location_;
}
inline void HostVehicleData::set_allocated_location(::osi3::BaseMoving* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(location_);
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:osi3.HostVehicleData.location)
}

// .osi3.BaseMoving location_rmse = 2;
inline bool HostVehicleData::has_location_rmse() const {
  return this != internal_default_instance() && location_rmse_ != NULL;
}
inline const ::osi3::BaseMoving& HostVehicleData::location_rmse() const {
  const ::osi3::BaseMoving* p = location_rmse_;
  // @@protoc_insertion_point(field_get:osi3.HostVehicleData.location_rmse)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseMoving*>(
      &::osi3::_BaseMoving_default_instance_);
}
inline ::osi3::BaseMoving* HostVehicleData::release_location_rmse() {
  // @@protoc_insertion_point(field_release:osi3.HostVehicleData.location_rmse)
  
  ::osi3::BaseMoving* temp = location_rmse_;
  location_rmse_ = NULL;
  return temp;
}
inline ::osi3::BaseMoving* HostVehicleData::mutable_location_rmse() {
  
  if (location_rmse_ == NULL) {
    location_rmse_ = new ::osi3::BaseMoving;
  }
  // @@protoc_insertion_point(field_mutable:osi3.HostVehicleData.location_rmse)
  return location_rmse_;
}
inline void HostVehicleData::set_allocated_location_rmse(::osi3::BaseMoving* location_rmse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(location_rmse_);
  }
  if (location_rmse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location_rmse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location_rmse, submessage_arena);
    }
    
  } else {
    
  }
  location_rmse_ = location_rmse;
  // @@protoc_insertion_point(field_set_allocated:osi3.HostVehicleData.location_rmse)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fhostvehicledata_2eproto__INCLUDED
