// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedtrafficsign.proto

#ifndef PROTOBUF_osi_5fdetectedtrafficsign_2eproto__INCLUDED
#define PROTOBUF_osi_5fdetectedtrafficsign_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "osi_common.pb.h"
#include "osi_trafficsign.pb.h"
#include "osi_detectedobject.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_osi_5fdetectedtrafficsign_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSignImpl();
void InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSign();
void InitDefaultsDetectedTrafficSign_DetectedMainSignImpl();
void InitDefaultsDetectedTrafficSign_DetectedMainSign();
void InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignImpl();
void InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
void InitDefaultsDetectedTrafficSign_DetectedSupplementarySignImpl();
void InitDefaultsDetectedTrafficSign_DetectedSupplementarySign();
void InitDefaultsDetectedTrafficSignImpl();
void InitDefaultsDetectedTrafficSign();
inline void InitDefaults() {
  InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSign();
  InitDefaultsDetectedTrafficSign_DetectedMainSign();
  InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
  InitDefaultsDetectedTrafficSign_DetectedSupplementarySign();
  InitDefaultsDetectedTrafficSign();
}
}  // namespace protobuf_osi_5fdetectedtrafficsign_2eproto
namespace osi3 {
class DetectedTrafficSign;
class DetectedTrafficSignDefaultTypeInternal;
extern DetectedTrafficSignDefaultTypeInternal _DetectedTrafficSign_default_instance_;
class DetectedTrafficSign_DetectedMainSign;
class DetectedTrafficSign_DetectedMainSignDefaultTypeInternal;
extern DetectedTrafficSign_DetectedMainSignDefaultTypeInternal _DetectedTrafficSign_DetectedMainSign_default_instance_;
class DetectedTrafficSign_DetectedMainSign_CandidateMainSign;
class DetectedTrafficSign_DetectedMainSign_CandidateMainSignDefaultTypeInternal;
extern DetectedTrafficSign_DetectedMainSign_CandidateMainSignDefaultTypeInternal _DetectedTrafficSign_DetectedMainSign_CandidateMainSign_default_instance_;
class DetectedTrafficSign_DetectedSupplementarySign;
class DetectedTrafficSign_DetectedSupplementarySignDefaultTypeInternal;
extern DetectedTrafficSign_DetectedSupplementarySignDefaultTypeInternal _DetectedTrafficSign_DetectedSupplementarySign_default_instance_;
class DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign;
class DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignDefaultTypeInternal;
extern DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignDefaultTypeInternal _DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_default_instance_;
}  // namespace osi3
namespace osi3 {

enum DetectedTrafficSign_DetectedMainSign_Geometry {
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_UNKNOWN = 0,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OTHER = 1,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_CIRCLE = 2,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_TOP = 3,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_DOWN = 4,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_SQUARE = 5,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_POLE = 6,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_RECTANGLE = 7,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_PLATE = 8,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_DIAMOND = 9,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_LEFT = 10,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_RIGHT = 11,
  DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OCTAGON = 12,
  DetectedTrafficSign_DetectedMainSign_Geometry_DetectedTrafficSign_DetectedMainSign_Geometry_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectedTrafficSign_DetectedMainSign_Geometry_DetectedTrafficSign_DetectedMainSign_Geometry_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(int value);
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_MIN = DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_UNKNOWN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_MAX = DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OCTAGON;
const int DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_ARRAYSIZE = DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectedTrafficSign_DetectedMainSign_Geometry_descriptor();
inline const ::std::string& DetectedTrafficSign_DetectedMainSign_Geometry_Name(DetectedTrafficSign_DetectedMainSign_Geometry value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectedTrafficSign_DetectedMainSign_Geometry_descriptor(), value);
}
inline bool DetectedTrafficSign_DetectedMainSign_Geometry_Parse(
    const ::std::string& name, DetectedTrafficSign_DetectedMainSign_Geometry* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectedTrafficSign_DetectedMainSign_Geometry>(
    DetectedTrafficSign_DetectedMainSign_Geometry_descriptor(), name, value);
}
// ===================================================================

class DetectedTrafficSign_DetectedMainSign_CandidateMainSign : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign) */ {
 public:
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign();
  virtual ~DetectedTrafficSign_DetectedMainSign_CandidateMainSign();

  DetectedTrafficSign_DetectedMainSign_CandidateMainSign(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from);

  inline DetectedTrafficSign_DetectedMainSign_CandidateMainSign& operator=(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign(DetectedTrafficSign_DetectedMainSign_CandidateMainSign&& from) noexcept
    : DetectedTrafficSign_DetectedMainSign_CandidateMainSign() {
    *this = ::std::move(from);
  }

  inline DetectedTrafficSign_DetectedMainSign_CandidateMainSign& operator=(DetectedTrafficSign_DetectedMainSign_CandidateMainSign&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedTrafficSign_DetectedMainSign_CandidateMainSign* internal_default_instance() {
    return reinterpret_cast<const DetectedTrafficSign_DetectedMainSign_CandidateMainSign*>(
               &_DetectedTrafficSign_DetectedMainSign_CandidateMainSign_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign* other);
  friend void swap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign& a, DetectedTrafficSign_DetectedMainSign_CandidateMainSign& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedTrafficSign_DetectedMainSign_CandidateMainSign* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedTrafficSign_DetectedMainSign_CandidateMainSign* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from);
  void MergeFrom(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.TrafficSign.MainSign.Classification classification = 2;
  bool has_classification() const;
  void clear_classification();
  static const int kClassificationFieldNumber = 2;
  const ::osi3::TrafficSign_MainSign_Classification& classification() const;
  ::osi3::TrafficSign_MainSign_Classification* release_classification();
  ::osi3::TrafficSign_MainSign_Classification* mutable_classification();
  void set_allocated_classification(::osi3::TrafficSign_MainSign_Classification* classification);

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::TrafficSign_MainSign_Classification* classification_;
  double probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedtrafficsign_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSign_CandidateMainSignImpl();
};
// -------------------------------------------------------------------

class DetectedTrafficSign_DetectedMainSign : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedTrafficSign.DetectedMainSign) */ {
 public:
  DetectedTrafficSign_DetectedMainSign();
  virtual ~DetectedTrafficSign_DetectedMainSign();

  DetectedTrafficSign_DetectedMainSign(const DetectedTrafficSign_DetectedMainSign& from);

  inline DetectedTrafficSign_DetectedMainSign& operator=(const DetectedTrafficSign_DetectedMainSign& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedTrafficSign_DetectedMainSign(DetectedTrafficSign_DetectedMainSign&& from) noexcept
    : DetectedTrafficSign_DetectedMainSign() {
    *this = ::std::move(from);
  }

  inline DetectedTrafficSign_DetectedMainSign& operator=(DetectedTrafficSign_DetectedMainSign&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedTrafficSign_DetectedMainSign& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedTrafficSign_DetectedMainSign* internal_default_instance() {
    return reinterpret_cast<const DetectedTrafficSign_DetectedMainSign*>(
               &_DetectedTrafficSign_DetectedMainSign_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DetectedTrafficSign_DetectedMainSign* other);
  friend void swap(DetectedTrafficSign_DetectedMainSign& a, DetectedTrafficSign_DetectedMainSign& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedTrafficSign_DetectedMainSign* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedTrafficSign_DetectedMainSign* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedTrafficSign_DetectedMainSign& from);
  void MergeFrom(const DetectedTrafficSign_DetectedMainSign& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedTrafficSign_DetectedMainSign* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedTrafficSign_DetectedMainSign_CandidateMainSign CandidateMainSign;

  typedef DetectedTrafficSign_DetectedMainSign_Geometry Geometry;
  static const Geometry GEOMETRY_UNKNOWN =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_UNKNOWN;
  static const Geometry GEOMETRY_OTHER =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OTHER;
  static const Geometry GEOMETRY_CIRCLE =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_CIRCLE;
  static const Geometry GEOMETRY_TRIANGLE_TOP =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_TOP;
  static const Geometry GEOMETRY_TRIANGLE_DOWN =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_DOWN;
  static const Geometry GEOMETRY_SQUARE =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_SQUARE;
  static const Geometry GEOMETRY_POLE =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_POLE;
  static const Geometry GEOMETRY_RECTANGLE =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_RECTANGLE;
  static const Geometry GEOMETRY_PLATE =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_PLATE;
  static const Geometry GEOMETRY_DIAMOND =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_DIAMOND;
  static const Geometry GEOMETRY_ARROW_LEFT =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_LEFT;
  static const Geometry GEOMETRY_ARROW_RIGHT =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_RIGHT;
  static const Geometry GEOMETRY_OCTAGON =
    DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OCTAGON;
  static inline bool Geometry_IsValid(int value) {
    return DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(value);
  }
  static const Geometry Geometry_MIN =
    DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_MIN;
  static const Geometry Geometry_MAX =
    DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_MAX;
  static const int Geometry_ARRAYSIZE =
    DetectedTrafficSign_DetectedMainSign_Geometry_Geometry_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Geometry_descriptor() {
    return DetectedTrafficSign_DetectedMainSign_Geometry_descriptor();
  }
  static inline const ::std::string& Geometry_Name(Geometry value) {
    return DetectedTrafficSign_DetectedMainSign_Geometry_Name(value);
  }
  static inline bool Geometry_Parse(const ::std::string& name,
      Geometry* value) {
    return DetectedTrafficSign_DetectedMainSign_Geometry_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 1;
  const ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign& candidate(int index) const;
  ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign* mutable_candidate(int index);
  ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign* add_candidate();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign >*
      mutable_candidate();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign >&
      candidate() const;

  // .osi3.BaseStationary base = 2;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 2;
  const ::osi3::BaseStationary& base() const;
  ::osi3::BaseStationary* release_base();
  ::osi3::BaseStationary* mutable_base();
  void set_allocated_base(::osi3::BaseStationary* base);

  // .osi3.BaseStationary base_rmse = 3;
  bool has_base_rmse() const;
  void clear_base_rmse();
  static const int kBaseRmseFieldNumber = 3;
  const ::osi3::BaseStationary& base_rmse() const;
  ::osi3::BaseStationary* release_base_rmse();
  ::osi3::BaseStationary* mutable_base_rmse();
  void set_allocated_base_rmse(::osi3::BaseStationary* base_rmse);

  // .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
  void clear_geometry();
  static const int kGeometryFieldNumber = 4;
  ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry geometry() const;
  void set_geometry(::osi3::DetectedTrafficSign_DetectedMainSign_Geometry value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedTrafficSign.DetectedMainSign)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign > candidate_;
  ::osi3::BaseStationary* base_;
  ::osi3::BaseStationary* base_rmse_;
  int geometry_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedtrafficsign_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedMainSignImpl();
};
// -------------------------------------------------------------------

class DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign) */ {
 public:
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
  virtual ~DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();

  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from);

  inline DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& operator=(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign&& from) noexcept
    : DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign() {
    *this = ::std::move(from);
  }

  inline DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& operator=(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* internal_default_instance() {
    return reinterpret_cast<const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign*>(
               &_DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* other);
  friend void swap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& a, DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from);
  void MergeFrom(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
  bool has_classification() const;
  void clear_classification();
  static const int kClassificationFieldNumber = 2;
  const ::osi3::TrafficSign_SupplementarySign_Classification& classification() const;
  ::osi3::TrafficSign_SupplementarySign_Classification* release_classification();
  ::osi3::TrafficSign_SupplementarySign_Classification* mutable_classification();
  void set_allocated_classification(::osi3::TrafficSign_SupplementarySign_Classification* classification);

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // @@protoc_insertion_point(class_scope:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::osi3::TrafficSign_SupplementarySign_Classification* classification_;
  double probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedtrafficsign_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySignImpl();
};
// -------------------------------------------------------------------

class DetectedTrafficSign_DetectedSupplementarySign : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedTrafficSign.DetectedSupplementarySign) */ {
 public:
  DetectedTrafficSign_DetectedSupplementarySign();
  virtual ~DetectedTrafficSign_DetectedSupplementarySign();

  DetectedTrafficSign_DetectedSupplementarySign(const DetectedTrafficSign_DetectedSupplementarySign& from);

  inline DetectedTrafficSign_DetectedSupplementarySign& operator=(const DetectedTrafficSign_DetectedSupplementarySign& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedTrafficSign_DetectedSupplementarySign(DetectedTrafficSign_DetectedSupplementarySign&& from) noexcept
    : DetectedTrafficSign_DetectedSupplementarySign() {
    *this = ::std::move(from);
  }

  inline DetectedTrafficSign_DetectedSupplementarySign& operator=(DetectedTrafficSign_DetectedSupplementarySign&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedTrafficSign_DetectedSupplementarySign& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedTrafficSign_DetectedSupplementarySign* internal_default_instance() {
    return reinterpret_cast<const DetectedTrafficSign_DetectedSupplementarySign*>(
               &_DetectedTrafficSign_DetectedSupplementarySign_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DetectedTrafficSign_DetectedSupplementarySign* other);
  friend void swap(DetectedTrafficSign_DetectedSupplementarySign& a, DetectedTrafficSign_DetectedSupplementarySign& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedTrafficSign_DetectedSupplementarySign* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedTrafficSign_DetectedSupplementarySign* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedTrafficSign_DetectedSupplementarySign& from);
  void MergeFrom(const DetectedTrafficSign_DetectedSupplementarySign& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedTrafficSign_DetectedSupplementarySign* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign CandidateSupplementarySign;

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 1;
  const ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& candidate(int index) const;
  ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* mutable_candidate(int index);
  ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* add_candidate();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign >*
      mutable_candidate();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign >&
      candidate() const;

  // .osi3.BaseStationary base = 2;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 2;
  const ::osi3::BaseStationary& base() const;
  ::osi3::BaseStationary* release_base();
  ::osi3::BaseStationary* mutable_base();
  void set_allocated_base(::osi3::BaseStationary* base);

  // .osi3.BaseStationary base_rmse = 3;
  bool has_base_rmse() const;
  void clear_base_rmse();
  static const int kBaseRmseFieldNumber = 3;
  const ::osi3::BaseStationary& base_rmse() const;
  ::osi3::BaseStationary* release_base_rmse();
  ::osi3::BaseStationary* mutable_base_rmse();
  void set_allocated_base_rmse(::osi3::BaseStationary* base_rmse);

  // @@protoc_insertion_point(class_scope:osi3.DetectedTrafficSign.DetectedSupplementarySign)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign > candidate_;
  ::osi3::BaseStationary* base_;
  ::osi3::BaseStationary* base_rmse_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedtrafficsign_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSign_DetectedSupplementarySignImpl();
};
// -------------------------------------------------------------------

class DetectedTrafficSign : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.DetectedTrafficSign) */ {
 public:
  DetectedTrafficSign();
  virtual ~DetectedTrafficSign();

  DetectedTrafficSign(const DetectedTrafficSign& from);

  inline DetectedTrafficSign& operator=(const DetectedTrafficSign& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedTrafficSign(DetectedTrafficSign&& from) noexcept
    : DetectedTrafficSign() {
    *this = ::std::move(from);
  }

  inline DetectedTrafficSign& operator=(DetectedTrafficSign&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedTrafficSign& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedTrafficSign* internal_default_instance() {
    return reinterpret_cast<const DetectedTrafficSign*>(
               &_DetectedTrafficSign_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DetectedTrafficSign* other);
  friend void swap(DetectedTrafficSign& a, DetectedTrafficSign& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedTrafficSign* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectedTrafficSign* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectedTrafficSign& from);
  void MergeFrom(const DetectedTrafficSign& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectedTrafficSign* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DetectedTrafficSign_DetectedMainSign DetectedMainSign;
  typedef DetectedTrafficSign_DetectedSupplementarySign DetectedSupplementarySign;

  // accessors -------------------------------------------------------

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  int supplementary_sign_size() const;
  void clear_supplementary_sign();
  static const int kSupplementarySignFieldNumber = 3;
  const ::osi3::DetectedTrafficSign_DetectedSupplementarySign& supplementary_sign(int index) const;
  ::osi3::DetectedTrafficSign_DetectedSupplementarySign* mutable_supplementary_sign(int index);
  ::osi3::DetectedTrafficSign_DetectedSupplementarySign* add_supplementary_sign();
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign >*
      mutable_supplementary_sign();
  const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign >&
      supplementary_sign() const;

  // .osi3.DetectedItemHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::osi3::DetectedItemHeader& header() const;
  ::osi3::DetectedItemHeader* release_header();
  ::osi3::DetectedItemHeader* mutable_header();
  void set_allocated_header(::osi3::DetectedItemHeader* header);

  // .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
  bool has_main_sign() const;
  void clear_main_sign();
  static const int kMainSignFieldNumber = 2;
  const ::osi3::DetectedTrafficSign_DetectedMainSign& main_sign() const;
  ::osi3::DetectedTrafficSign_DetectedMainSign* release_main_sign();
  ::osi3::DetectedTrafficSign_DetectedMainSign* mutable_main_sign();
  void set_allocated_main_sign(::osi3::DetectedTrafficSign_DetectedMainSign* main_sign);

  // @@protoc_insertion_point(class_scope:osi3.DetectedTrafficSign)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign > supplementary_sign_;
  ::osi3::DetectedItemHeader* header_;
  ::osi3::DetectedTrafficSign_DetectedMainSign* main_sign_;
  mutable int _cached_size_;
  friend struct ::protobuf_osi_5fdetectedtrafficsign_2eproto::TableStruct;
  friend void ::protobuf_osi_5fdetectedtrafficsign_2eproto::InitDefaultsDetectedTrafficSignImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectedTrafficSign_DetectedMainSign_CandidateMainSign

// double probability = 1;
inline void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_probability() {
  probability_ = 0;
}
inline double DetectedTrafficSign_DetectedMainSign_CandidateMainSign::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.probability)
  return probability_;
}
inline void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.probability)
}

// .osi3.TrafficSign.MainSign.Classification classification = 2;
inline bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::has_classification() const {
  return this != internal_default_instance() && classification_ != NULL;
}
inline const ::osi3::TrafficSign_MainSign_Classification& DetectedTrafficSign_DetectedMainSign_CandidateMainSign::classification() const {
  const ::osi3::TrafficSign_MainSign_Classification* p = classification_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::TrafficSign_MainSign_Classification*>(
      &::osi3::_TrafficSign_MainSign_Classification_default_instance_);
}
inline ::osi3::TrafficSign_MainSign_Classification* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
  
  ::osi3::TrafficSign_MainSign_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
inline ::osi3::TrafficSign_MainSign_Classification* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::mutable_classification() {
  
  if (classification_ == NULL) {
    classification_ = new ::osi3::TrafficSign_MainSign_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
  return classification_;
}
inline void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_allocated_classification(::osi3::TrafficSign_MainSign_Classification* classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(classification_);
  }
  if (classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification, submessage_arena);
    }
    
  } else {
    
  }
  classification_ = classification;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
}

// -------------------------------------------------------------------

// DetectedTrafficSign_DetectedMainSign

// repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
inline int DetectedTrafficSign_DetectedMainSign::candidate_size() const {
  return candidate_.size();
}
inline void DetectedTrafficSign_DetectedMainSign::clear_candidate() {
  candidate_.Clear();
}
inline const ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign& DetectedTrafficSign_DetectedMainSign::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_.Get(index);
}
inline ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_.Mutable(index);
}
inline ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign >*
DetectedTrafficSign_DetectedMainSign::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return &candidate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign >&
DetectedTrafficSign_DetectedMainSign::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_;
}

// .osi3.BaseStationary base = 2;
inline bool DetectedTrafficSign_DetectedMainSign::has_base() const {
  return this != internal_default_instance() && base_ != NULL;
}
inline const ::osi3::BaseStationary& DetectedTrafficSign_DetectedMainSign::base() const {
  const ::osi3::BaseStationary* p = base_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.base)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseStationary*>(
      &::osi3::_BaseStationary_default_instance_);
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::release_base() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedMainSign.base)
  
  ::osi3::BaseStationary* temp = base_;
  base_ = NULL;
  return temp;
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.base)
  return base_;
}
inline void DetectedTrafficSign_DetectedMainSign::set_allocated_base(::osi3::BaseStationary* base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_);
  }
  if (base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedMainSign.base)
}

// .osi3.BaseStationary base_rmse = 3;
inline bool DetectedTrafficSign_DetectedMainSign::has_base_rmse() const {
  return this != internal_default_instance() && base_rmse_ != NULL;
}
inline const ::osi3::BaseStationary& DetectedTrafficSign_DetectedMainSign::base_rmse() const {
  const ::osi3::BaseStationary* p = base_rmse_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseStationary*>(
      &::osi3::_BaseStationary_default_instance_);
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::release_base_rmse() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
  
  ::osi3::BaseStationary* temp = base_rmse_;
  base_rmse_ = NULL;
  return temp;
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::mutable_base_rmse() {
  
  if (base_rmse_ == NULL) {
    base_rmse_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
  return base_rmse_;
}
inline void DetectedTrafficSign_DetectedMainSign::set_allocated_base_rmse(::osi3::BaseStationary* base_rmse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_rmse_);
  }
  if (base_rmse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_rmse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_rmse, submessage_arena);
    }
    
  } else {
    
  }
  base_rmse_ = base_rmse;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
}

// .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
inline void DetectedTrafficSign_DetectedMainSign::clear_geometry() {
  geometry_ = 0;
}
inline ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::geometry() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.geometry)
  return static_cast< ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry >(geometry_);
}
inline void DetectedTrafficSign_DetectedMainSign::set_geometry(::osi3::DetectedTrafficSign_DetectedMainSign_Geometry value) {
  
  geometry_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedTrafficSign.DetectedMainSign.geometry)
}

// -------------------------------------------------------------------

// DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign

// double probability = 1;
inline void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::clear_probability() {
  probability_ = 0;
}
inline double DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.probability)
  return probability_;
}
inline void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.probability)
}

// .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
inline bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::has_classification() const {
  return this != internal_default_instance() && classification_ != NULL;
}
inline const ::osi3::TrafficSign_SupplementarySign_Classification& DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::classification() const {
  const ::osi3::TrafficSign_SupplementarySign_Classification* p = classification_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::TrafficSign_SupplementarySign_Classification*>(
      &::osi3::_TrafficSign_SupplementarySign_Classification_default_instance_);
}
inline ::osi3::TrafficSign_SupplementarySign_Classification* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
  
  ::osi3::TrafficSign_SupplementarySign_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
inline ::osi3::TrafficSign_SupplementarySign_Classification* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::mutable_classification() {
  
  if (classification_ == NULL) {
    classification_ = new ::osi3::TrafficSign_SupplementarySign_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
  return classification_;
}
inline void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::set_allocated_classification(::osi3::TrafficSign_SupplementarySign_Classification* classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(classification_);
  }
  if (classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification, submessage_arena);
    }
    
  } else {
    
  }
  classification_ = classification;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
}

// -------------------------------------------------------------------

// DetectedTrafficSign_DetectedSupplementarySign

// repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
inline int DetectedTrafficSign_DetectedSupplementarySign::candidate_size() const {
  return candidate_.size();
}
inline void DetectedTrafficSign_DetectedSupplementarySign::clear_candidate() {
  candidate_.Clear();
}
inline const ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& DetectedTrafficSign_DetectedSupplementarySign::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_.Get(index);
}
inline ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_.Mutable(index);
}
inline ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign >*
DetectedTrafficSign_DetectedSupplementarySign::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return &candidate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign >&
DetectedTrafficSign_DetectedSupplementarySign::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_;
}

// .osi3.BaseStationary base = 2;
inline bool DetectedTrafficSign_DetectedSupplementarySign::has_base() const {
  return this != internal_default_instance() && base_ != NULL;
}
inline const ::osi3::BaseStationary& DetectedTrafficSign_DetectedSupplementarySign::base() const {
  const ::osi3::BaseStationary* p = base_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseStationary*>(
      &::osi3::_BaseStationary_default_instance_);
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::release_base() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
  
  ::osi3::BaseStationary* temp = base_;
  base_ = NULL;
  return temp;
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
  return base_;
}
inline void DetectedTrafficSign_DetectedSupplementarySign::set_allocated_base(::osi3::BaseStationary* base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_);
  }
  if (base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
}

// .osi3.BaseStationary base_rmse = 3;
inline bool DetectedTrafficSign_DetectedSupplementarySign::has_base_rmse() const {
  return this != internal_default_instance() && base_rmse_ != NULL;
}
inline const ::osi3::BaseStationary& DetectedTrafficSign_DetectedSupplementarySign::base_rmse() const {
  const ::osi3::BaseStationary* p = base_rmse_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::BaseStationary*>(
      &::osi3::_BaseStationary_default_instance_);
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::release_base_rmse() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
  
  ::osi3::BaseStationary* temp = base_rmse_;
  base_rmse_ = NULL;
  return temp;
}
inline ::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::mutable_base_rmse() {
  
  if (base_rmse_ == NULL) {
    base_rmse_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
  return base_rmse_;
}
inline void DetectedTrafficSign_DetectedSupplementarySign::set_allocated_base_rmse(::osi3::BaseStationary* base_rmse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_rmse_);
  }
  if (base_rmse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_rmse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_rmse, submessage_arena);
    }
    
  } else {
    
  }
  base_rmse_ = base_rmse;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
}

// -------------------------------------------------------------------

// DetectedTrafficSign

// .osi3.DetectedItemHeader header = 1;
inline bool DetectedTrafficSign::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::osi3::DetectedItemHeader& DetectedTrafficSign::header() const {
  const ::osi3::DetectedItemHeader* p = header_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.header)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::DetectedItemHeader*>(
      &::osi3::_DetectedItemHeader_default_instance_);
}
inline ::osi3::DetectedItemHeader* DetectedTrafficSign::release_header() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.header)
  
  ::osi3::DetectedItemHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::osi3::DetectedItemHeader* DetectedTrafficSign::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::osi3::DetectedItemHeader;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.header)
  return header_;
}
inline void DetectedTrafficSign::set_allocated_header(::osi3::DetectedItemHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.header)
}

// .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
inline bool DetectedTrafficSign::has_main_sign() const {
  return this != internal_default_instance() && main_sign_ != NULL;
}
inline void DetectedTrafficSign::clear_main_sign() {
  if (GetArenaNoVirtual() == NULL && main_sign_ != NULL) {
    delete main_sign_;
  }
  main_sign_ = NULL;
}
inline const ::osi3::DetectedTrafficSign_DetectedMainSign& DetectedTrafficSign::main_sign() const {
  const ::osi3::DetectedTrafficSign_DetectedMainSign* p = main_sign_;
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.main_sign)
  return p != NULL ? *p : *reinterpret_cast<const ::osi3::DetectedTrafficSign_DetectedMainSign*>(
      &::osi3::_DetectedTrafficSign_DetectedMainSign_default_instance_);
}
inline ::osi3::DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign::release_main_sign() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.main_sign)
  
  ::osi3::DetectedTrafficSign_DetectedMainSign* temp = main_sign_;
  main_sign_ = NULL;
  return temp;
}
inline ::osi3::DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign::mutable_main_sign() {
  
  if (main_sign_ == NULL) {
    main_sign_ = new ::osi3::DetectedTrafficSign_DetectedMainSign;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.main_sign)
  return main_sign_;
}
inline void DetectedTrafficSign::set_allocated_main_sign(::osi3::DetectedTrafficSign_DetectedMainSign* main_sign) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete main_sign_;
  }
  if (main_sign) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      main_sign = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, main_sign, submessage_arena);
    }
    
  } else {
    
  }
  main_sign_ = main_sign;
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.main_sign)
}

// repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
inline int DetectedTrafficSign::supplementary_sign_size() const {
  return supplementary_sign_.size();
}
inline void DetectedTrafficSign::clear_supplementary_sign() {
  supplementary_sign_.Clear();
}
inline const ::osi3::DetectedTrafficSign_DetectedSupplementarySign& DetectedTrafficSign::supplementary_sign(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_.Get(index);
}
inline ::osi3::DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign::mutable_supplementary_sign(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_.Mutable(index);
}
inline ::osi3::DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign::add_supplementary_sign() {
  // @@protoc_insertion_point(field_add:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign >*
DetectedTrafficSign::mutable_supplementary_sign() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedTrafficSign.supplementary_sign)
  return &supplementary_sign_;
}
inline const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign >&
DetectedTrafficSign::supplementary_sign() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry>() {
  return ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fdetectedtrafficsign_2eproto__INCLUDED
