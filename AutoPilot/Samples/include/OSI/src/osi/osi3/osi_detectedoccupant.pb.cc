// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedoccupant.proto

#include "osi_detectedoccupant.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace osi3 {
class DetectedOccupant_CandidateOccupantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedOccupant_CandidateOccupant>
      _instance;
} _DetectedOccupant_CandidateOccupant_default_instance_;
class DetectedOccupantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectedOccupant>
      _instance;
} _DetectedOccupant_default_instance_;
}  // namespace osi3
namespace protobuf_osi_5fdetectedoccupant_2eproto {
void InitDefaultsDetectedOccupant_CandidateOccupantImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5foccupant_2eproto::InitDefaultsOccupant_Classification();
  {
    void* ptr = &::osi3::_DetectedOccupant_CandidateOccupant_default_instance_;
    new (ptr) ::osi3::DetectedOccupant_CandidateOccupant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedOccupant_CandidateOccupant::InitAsDefaultInstance();
}

void InitDefaultsDetectedOccupant_CandidateOccupant() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedOccupant_CandidateOccupantImpl);
}

void InitDefaultsDetectedOccupantImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_osi_5fdetectedobject_2eproto::InitDefaultsDetectedItemHeader();
  protobuf_osi_5fdetectedoccupant_2eproto::InitDefaultsDetectedOccupant_CandidateOccupant();
  {
    void* ptr = &::osi3::_DetectedOccupant_default_instance_;
    new (ptr) ::osi3::DetectedOccupant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::DetectedOccupant::InitAsDefaultInstance();
}

void InitDefaultsDetectedOccupant() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectedOccupantImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, classification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedOccupant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedOccupant, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::osi3::DetectedOccupant, candidate_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::DetectedOccupant_CandidateOccupant)},
  { 7, -1, sizeof(::osi3::DetectedOccupant)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedOccupant_CandidateOccupant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::osi3::_DetectedOccupant_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "osi_detectedoccupant.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032osi_detectedoccupant.proto\022\004osi3\032\022osi_"
      "occupant.proto\032\030osi_detectedobject.proto"
      "\"\332\001\n\020DetectedOccupant\022(\n\006header\030\001 \001(\0132\030."
      "osi3.DetectedItemHeader\022;\n\tcandidate\030\002 \003"
      "(\0132(.osi3.DetectedOccupant.CandidateOccu"
      "pant\032_\n\021CandidateOccupant\022\023\n\013probability"
      "\030\001 \001(\001\0225\n\016classification\030\002 \001(\0132\035.osi3.Oc"
      "cupant.ClassificationB\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 313);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_detectedoccupant.proto", &protobuf_RegisterTypes);
  ::protobuf_osi_5foccupant_2eproto::AddDescriptors();
  ::protobuf_osi_5fdetectedobject_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osi_5fdetectedoccupant_2eproto
namespace osi3 {

// ===================================================================

void DetectedOccupant_CandidateOccupant::InitAsDefaultInstance() {
  ::osi3::_DetectedOccupant_CandidateOccupant_default_instance_._instance.get_mutable()->classification_ = const_cast< ::osi3::Occupant_Classification*>(
      ::osi3::Occupant_Classification::internal_default_instance());
}
void DetectedOccupant_CandidateOccupant::clear_classification() {
  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedOccupant_CandidateOccupant::kProbabilityFieldNumber;
const int DetectedOccupant_CandidateOccupant::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedOccupant_CandidateOccupant::DetectedOccupant_CandidateOccupant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedoccupant_2eproto::InitDefaultsDetectedOccupant_CandidateOccupant();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedOccupant.CandidateOccupant)
}
DetectedOccupant_CandidateOccupant::DetectedOccupant_CandidateOccupant(const DetectedOccupant_CandidateOccupant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_classification()) {
    classification_ = new ::osi3::Occupant_Classification(*from.classification_);
  } else {
    classification_ = NULL;
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedOccupant.CandidateOccupant)
}

void DetectedOccupant_CandidateOccupant::SharedCtor() {
  ::memset(&classification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&classification_)) + sizeof(probability_));
  _cached_size_ = 0;
}

DetectedOccupant_CandidateOccupant::~DetectedOccupant_CandidateOccupant() {
  // @@protoc_insertion_point(destructor:osi3.DetectedOccupant.CandidateOccupant)
  SharedDtor();
}

void DetectedOccupant_CandidateOccupant::SharedDtor() {
  if (this != internal_default_instance()) delete classification_;
}

void DetectedOccupant_CandidateOccupant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedOccupant_CandidateOccupant::descriptor() {
  ::protobuf_osi_5fdetectedoccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedoccupant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedOccupant_CandidateOccupant& DetectedOccupant_CandidateOccupant::default_instance() {
  ::protobuf_osi_5fdetectedoccupant_2eproto::InitDefaultsDetectedOccupant_CandidateOccupant();
  return *internal_default_instance();
}

DetectedOccupant_CandidateOccupant* DetectedOccupant_CandidateOccupant::New(::google::protobuf::Arena* arena) const {
  DetectedOccupant_CandidateOccupant* n = new DetectedOccupant_CandidateOccupant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedOccupant_CandidateOccupant::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedOccupant.CandidateOccupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && classification_ != NULL) {
    delete classification_;
  }
  classification_ = NULL;
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool DetectedOccupant_CandidateOccupant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedOccupant.CandidateOccupant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double probability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .osi3.Occupant.Classification classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedOccupant.CandidateOccupant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedOccupant.CandidateOccupant)
  return false;
#undef DO_
}

void DetectedOccupant_CandidateOccupant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedOccupant.CandidateOccupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // .osi3.Occupant.Classification classification = 2;
  if (this->has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedOccupant.CandidateOccupant)
}

::google::protobuf::uint8* DetectedOccupant_CandidateOccupant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedOccupant.CandidateOccupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // .osi3.Occupant.Classification classification = 2;
  if (this->has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->classification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedOccupant.CandidateOccupant)
  return target;
}

size_t DetectedOccupant_CandidateOccupant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedOccupant.CandidateOccupant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .osi3.Occupant.Classification classification = 2;
  if (this->has_classification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->classification_);
  }

  // double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedOccupant_CandidateOccupant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedOccupant.CandidateOccupant)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedOccupant_CandidateOccupant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedOccupant_CandidateOccupant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedOccupant.CandidateOccupant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedOccupant.CandidateOccupant)
    MergeFrom(*source);
  }
}

void DetectedOccupant_CandidateOccupant::MergeFrom(const DetectedOccupant_CandidateOccupant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedOccupant.CandidateOccupant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_classification()) {
    mutable_classification()->::osi3::Occupant_Classification::MergeFrom(from.classification());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void DetectedOccupant_CandidateOccupant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedOccupant.CandidateOccupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedOccupant_CandidateOccupant::CopyFrom(const DetectedOccupant_CandidateOccupant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedOccupant.CandidateOccupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedOccupant_CandidateOccupant::IsInitialized() const {
  return true;
}

void DetectedOccupant_CandidateOccupant::Swap(DetectedOccupant_CandidateOccupant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedOccupant_CandidateOccupant::InternalSwap(DetectedOccupant_CandidateOccupant* other) {
  using std::swap;
  swap(classification_, other->classification_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedOccupant_CandidateOccupant::GetMetadata() const {
  protobuf_osi_5fdetectedoccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedoccupant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectedOccupant::InitAsDefaultInstance() {
  ::osi3::_DetectedOccupant_default_instance_._instance.get_mutable()->header_ = const_cast< ::osi3::DetectedItemHeader*>(
      ::osi3::DetectedItemHeader::internal_default_instance());
}
void DetectedOccupant::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedOccupant::kHeaderFieldNumber;
const int DetectedOccupant::kCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedOccupant::DetectedOccupant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_osi_5fdetectedoccupant_2eproto::InitDefaultsDetectedOccupant();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedOccupant)
}
DetectedOccupant::DetectedOccupant(const DetectedOccupant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::osi3::DetectedItemHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedOccupant)
}

void DetectedOccupant::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

DetectedOccupant::~DetectedOccupant() {
  // @@protoc_insertion_point(destructor:osi3.DetectedOccupant)
  SharedDtor();
}

void DetectedOccupant::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void DetectedOccupant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedOccupant::descriptor() {
  ::protobuf_osi_5fdetectedoccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedoccupant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectedOccupant& DetectedOccupant::default_instance() {
  ::protobuf_osi_5fdetectedoccupant_2eproto::InitDefaultsDetectedOccupant();
  return *internal_default_instance();
}

DetectedOccupant* DetectedOccupant::New(::google::protobuf::Arena* arena) const {
  DetectedOccupant* n = new DetectedOccupant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedOccupant::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedOccupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool DetectedOccupant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedOccupant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedOccupant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedOccupant)
  return false;
#undef DO_
}

void DetectedOccupant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedOccupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->candidate(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedOccupant)
}

::google::protobuf::uint8* DetectedOccupant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedOccupant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candidate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->candidate(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedOccupant)
  return target;
}

size_t DetectedOccupant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedOccupant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->candidate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candidate(static_cast<int>(i)));
    }
  }

  // .osi3.DetectedItemHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedOccupant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedOccupant)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectedOccupant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedOccupant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedOccupant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedOccupant)
    MergeFrom(*source);
  }
}

void DetectedOccupant::MergeFrom(const DetectedOccupant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedOccupant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.has_header()) {
    mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
  }
}

void DetectedOccupant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedOccupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedOccupant::CopyFrom(const DetectedOccupant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedOccupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedOccupant::IsInitialized() const {
  return true;
}

void DetectedOccupant::Swap(DetectedOccupant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedOccupant::InternalSwap(DetectedOccupant* other) {
  using std::swap;
  candidate_.InternalSwap(&other->candidate_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedOccupant::GetMetadata() const {
  protobuf_osi_5fdetectedoccupant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osi_5fdetectedoccupant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3

// @@protoc_insertion_point(global_scope)
