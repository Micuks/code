<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>hrtimer_active (2 samples, 0.07%)</title><rect x="1144.2" y="117" width="0.9" height="15.0" fill="rgb(228,131,26)" rx="2" ry="2" />
<text  x="1147.23" y="127.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.18%)</title><rect x="13.5" y="277" width="2.1" height="15.0" fill="rgb(251,185,33)" rx="2" ry="2" />
<text  x="16.45" y="287.5" ></text>
</g>
<g >
<title>sync_regs (3 samples, 0.11%)</title><rect x="342.0" y="181" width="1.3" height="15.0" fill="rgb(254,40,20)" rx="2" ry="2" />
<text  x="345.02" y="191.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.04%)</title><rect x="365.8" y="197" width="0.4" height="15.0" fill="rgb(219,208,17)" rx="2" ry="2" />
<text  x="368.77" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.07%)</title><rect x="351.1" y="101" width="0.9" height="15.0" fill="rgb(232,68,41)" rx="2" ry="2" />
<text  x="354.09" y="111.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (8 samples, 0.29%)</title><rect x="1126.5" y="181" width="3.5" height="15.0" fill="rgb(241,40,27)" rx="2" ry="2" />
<text  x="1129.53" y="191.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.04%)</title><rect x="1177.5" y="277" width="0.4" height="15.0" fill="rgb(243,120,22)" rx="2" ry="2" />
<text  x="1180.48" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Edge&gt; &gt;::construct&lt;Edge, Edge&gt; (6 samples, 0.22%)</title><rect x="294.5" y="245" width="2.6" height="15.0" fill="rgb(238,151,49)" rx="2" ry="2" />
<text  x="297.53" y="255.5" ></text>
</g>
<g >
<title>interrupt_entry (2 samples, 0.07%)</title><rect x="1154.2" y="261" width="0.8" height="15.0" fill="rgb(232,30,29)" rx="2" ry="2" />
<text  x="1157.16" y="271.5" ></text>
</g>
<g >
<title>init_prime (13 samples, 0.48%)</title><rect x="1171.9" y="277" width="5.6" height="15.0" fill="rgb(215,29,3)" rx="2" ry="2" />
<text  x="1174.87" y="287.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1187.8" y="261" width="0.5" height="15.0" fill="rgb(234,3,54)" rx="2" ry="2" />
<text  x="1190.84" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.04%)</title><rect x="247.9" y="165" width="0.4" height="15.0" fill="rgb(231,3,3)" rx="2" ry="2" />
<text  x="250.90" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1162.4" y="181" width="0.4" height="15.0" fill="rgb(208,64,54)" rx="2" ry="2" />
<text  x="1165.37" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1162.4" y="197" width="0.4" height="15.0" fill="rgb(238,114,43)" rx="2" ry="2" />
<text  x="1165.37" y="207.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.11%)</title><rect x="349.8" y="101" width="1.3" height="15.0" fill="rgb(217,228,25)" rx="2" ry="2" />
<text  x="352.80" y="111.5" ></text>
</g>
<g >
<title>std::move&lt;Edge&amp;&gt; (2 samples, 0.07%)</title><rect x="289.8" y="261" width="0.8" height="15.0" fill="rgb(239,217,40)" rx="2" ry="2" />
<text  x="292.78" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (76 samples, 2.78%)</title><rect x="1118.3" y="229" width="32.8" height="15.0" fill="rgb(241,44,10)" rx="2" ry="2" />
<text  x="1121.33" y="239.5" >hr..</text>
</g>
<g >
<title>timerqueue_del (4 samples, 0.15%)</title><rect x="1120.5" y="181" width="1.7" height="15.0" fill="rgb(242,217,35)" rx="2" ry="2" />
<text  x="1123.49" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1162.4" y="149" width="0.4" height="15.0" fill="rgb(232,191,17)" rx="2" ry="2" />
<text  x="1165.37" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (12 samples, 0.44%)</title><rect x="10.4" y="293" width="5.2" height="15.0" fill="rgb(216,98,18)" rx="2" ry="2" />
<text  x="13.43" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.04%)</title><rect x="247.5" y="181" width="0.4" height="15.0" fill="rgb(216,52,26)" rx="2" ry="2" />
<text  x="250.47" y="191.5" ></text>
</g>
<g >
<title>trigger_load_balance (4 samples, 0.15%)</title><rect x="1146.0" y="133" width="1.7" height="15.0" fill="rgb(234,207,39)" rx="2" ry="2" />
<text  x="1148.96" y="143.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.04%)</title><rect x="1155.0" y="229" width="0.5" height="15.0" fill="rgb(206,53,0)" rx="2" ry="2" />
<text  x="1158.03" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_tick (6 samples, 0.22%)</title><rect x="1135.6" y="133" width="2.6" height="15.0" fill="rgb(221,36,53)" rx="2" ry="2" />
<text  x="1138.60" y="143.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (2 samples, 0.07%)</title><rect x="1127.8" y="101" width="0.9" height="15.0" fill="rgb(251,147,26)" rx="2" ry="2" />
<text  x="1130.83" y="111.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.11%)</title><rect x="342.0" y="197" width="1.3" height="15.0" fill="rgb(219,204,21)" rx="2" ry="2" />
<text  x="345.02" y="207.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.07%)</title><rect x="1137.3" y="117" width="0.9" height="15.0" fill="rgb(207,47,22)" rx="2" ry="2" />
<text  x="1140.33" y="127.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.04%)</title><rect x="365.3" y="197" width="0.5" height="15.0" fill="rgb(240,155,43)" rx="2" ry="2" />
<text  x="368.34" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="15.2" y="181" width="0.4" height="15.0" fill="rgb(220,133,21)" rx="2" ry="2" />
<text  x="18.18" y="191.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.04%)</title><rect x="1153.7" y="229" width="0.5" height="15.0" fill="rgb(226,36,26)" rx="2" ry="2" />
<text  x="1156.73" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1184.8" y="213" width="0.5" height="15.0" fill="rgb(225,191,31)" rx="2" ry="2" />
<text  x="1187.82" y="223.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (2 samples, 0.07%)</title><rect x="1127.8" y="85" width="0.9" height="15.0" fill="rgb(219,164,7)" rx="2" ry="2" />
<text  x="1130.83" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="1149.0" y="213" width="0.4" height="15.0" fill="rgb(229,210,26)" rx="2" ry="2" />
<text  x="1151.98" y="223.5" ></text>
</g>
<g >
<title>activate_task (4 samples, 0.15%)</title><rect x="1124.4" y="133" width="1.7" height="15.0" fill="rgb(213,155,28)" rx="2" ry="2" />
<text  x="1127.37" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.26%)</title><rect x="346.8" y="85" width="3.0" height="15.0" fill="rgb(208,100,40)" rx="2" ry="2" />
<text  x="349.77" y="95.5" ></text>
</g>
<g >
<title>task_tick_fair (18 samples, 0.66%)</title><rect x="1138.2" y="133" width="7.8" height="15.0" fill="rgb(244,161,31)" rx="2" ry="2" />
<text  x="1141.19" y="143.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.07%)</title><rect x="253.1" y="277" width="0.8" height="15.0" fill="rgb(247,133,6)" rx="2" ry="2" />
<text  x="256.08" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1187.8" y="197" width="0.5" height="15.0" fill="rgb(215,137,28)" rx="2" ry="2" />
<text  x="1190.84" y="207.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (7 samples, 0.26%)</title><rect x="1123.1" y="197" width="3.0" height="15.0" fill="rgb(245,217,43)" rx="2" ry="2" />
<text  x="1126.08" y="207.5" ></text>
</g>
<g >
<title>all (2,733 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(229,81,35)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.07%)</title><rect x="348.9" y="69" width="0.9" height="15.0" fill="rgb(242,222,5)" rx="2" ry="2" />
<text  x="351.93" y="79.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.04%)</title><rect x="1146.4" y="117" width="0.4" height="15.0" fill="rgb(231,120,35)" rx="2" ry="2" />
<text  x="1149.39" y="127.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.04%)</title><rect x="1122.6" y="197" width="0.5" height="15.0" fill="rgb(234,103,35)" rx="2" ry="2" />
<text  x="1125.65" y="207.5" ></text>
</g>
<g >
<title>bfs_hk (6 samples, 0.22%)</title><rect x="1162.8" y="261" width="2.6" height="15.0" fill="rgb(234,37,7)" rx="2" ry="2" />
<text  x="1165.80" y="271.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.04%)</title><rect x="1129.6" y="133" width="0.4" height="15.0" fill="rgb(217,167,17)" rx="2" ry="2" />
<text  x="1132.55" y="143.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.07%)</title><rect x="1152.4" y="197" width="0.9" height="15.0" fill="rgb(238,0,9)" rx="2" ry="2" />
<text  x="1155.44" y="207.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1189.6" y="293" width="0.4" height="15.0" fill="rgb(210,157,1)" rx="2" ry="2" />
<text  x="1192.57" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.04%)</title><rect x="1186.1" y="229" width="0.4" height="15.0" fill="rgb(205,137,9)" rx="2" ry="2" />
<text  x="1189.11" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1136.9" y="117" width="0.4" height="15.0" fill="rgb(210,147,49)" rx="2" ry="2" />
<text  x="1139.89" y="127.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.11%)</title><rect x="349.8" y="117" width="1.3" height="15.0" fill="rgb(223,179,37)" rx="2" ry="2" />
<text  x="352.80" y="127.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.33%)</title><rect x="248.3" y="165" width="3.9" height="15.0" fill="rgb(251,47,17)" rx="2" ry="2" />
<text  x="251.33" y="175.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.04%)</title><rect x="365.3" y="213" width="0.5" height="15.0" fill="rgb(239,119,43)" rx="2" ry="2" />
<text  x="368.34" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1149.4" y="213" width="0.4" height="15.0" fill="rgb(208,49,23)" rx="2" ry="2" />
<text  x="1152.41" y="223.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.04%)</title><rect x="1126.1" y="197" width="0.4" height="15.0" fill="rgb(225,199,32)" rx="2" ry="2" />
<text  x="1129.10" y="207.5" ></text>
</g>
<g >
<title>update_process_times (42 samples, 1.54%)</title><rect x="1130.0" y="165" width="18.1" height="15.0" fill="rgb(215,216,20)" rx="2" ry="2" />
<text  x="1132.99" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;Edge, std::allocator&lt;Edge&gt; &gt;::emplace_back&lt;Edge&gt; (153 samples, 5.60%)</title><rect x="298.8" y="245" width="66.1" height="15.0" fill="rgb(239,191,52)" rx="2" ry="2" />
<text  x="301.85" y="255.5" >std::ve..</text>
</g>
<g >
<title>update_vsyscall (1 samples, 0.04%)</title><rect x="1129.1" y="117" width="0.5" height="15.0" fill="rgb(235,28,46)" rx="2" ry="2" />
<text  x="1132.12" y="127.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="247.9" y="197" width="0.4" height="15.0" fill="rgb(237,144,31)" rx="2" ry="2" />
<text  x="250.90" y="207.5" ></text>
</g>
<g >
<title>wake_up_process (7 samples, 0.26%)</title><rect x="1123.1" y="181" width="3.0" height="15.0" fill="rgb(226,187,22)" rx="2" ry="2" />
<text  x="1126.08" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1162.4" y="133" width="0.4" height="15.0" fill="rgb(219,97,27)" rx="2" ry="2" />
<text  x="1165.37" y="143.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="1124.8" y="85" width="0.4" height="15.0" fill="rgb(252,225,14)" rx="2" ry="2" />
<text  x="1127.80" y="95.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.07%)</title><rect x="1145.1" y="117" width="0.9" height="15.0" fill="rgb(219,133,7)" rx="2" ry="2" />
<text  x="1148.10" y="127.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.04%)</title><rect x="247.5" y="101" width="0.4" height="15.0" fill="rgb(234,61,6)" rx="2" ry="2" />
<text  x="250.47" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.04%)</title><rect x="247.5" y="197" width="0.4" height="15.0" fill="rgb(214,1,42)" rx="2" ry="2" />
<text  x="250.47" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="1184.8" y="181" width="0.5" height="15.0" fill="rgb(226,206,21)" rx="2" ry="2" />
<text  x="1187.82" y="191.5" ></text>
</g>
<g >
<title>main (2,692 samples, 98.50%)</title><rect x="25.5" y="293" width="1162.3" height="15.0" fill="rgb(208,125,8)" rx="2" ry="2" />
<text  x="28.54" y="303.5" >main</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.04%)</title><rect x="1137.8" y="69" width="0.4" height="15.0" fill="rgb(206,2,7)" rx="2" ry="2" />
<text  x="1140.76" y="79.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.04%)</title><rect x="14.7" y="181" width="0.5" height="15.0" fill="rgb(243,12,3)" rx="2" ry="2" />
<text  x="17.75" y="191.5" ></text>
</g>
<g >
<title>__libc_start_main (2,728 samples, 99.82%)</title><rect x="10.4" y="309" width="1177.9" height="15.0" fill="rgb(215,51,46)" rx="2" ry="2" />
<text  x="13.43" y="319.5" >__libc_start_main</text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.18%)</title><rect x="13.5" y="229" width="2.1" height="15.0" fill="rgb(239,224,25)" rx="2" ry="2" />
<text  x="16.45" y="239.5" ></text>
</g>
<g >
<title>acpi_ev_detect_gpe (1 samples, 0.04%)</title><rect x="1155.0" y="101" width="0.5" height="15.0" fill="rgb(232,110,8)" rx="2" ry="2" />
<text  x="1158.03" y="111.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.04%)</title><rect x="1155.0" y="197" width="0.5" height="15.0" fill="rgb(221,99,46)" rx="2" ry="2" />
<text  x="1158.03" y="207.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.07%)</title><rect x="1125.2" y="117" width="0.9" height="15.0" fill="rgb(229,152,54)" rx="2" ry="2" />
<text  x="1128.24" y="127.5" ></text>
</g>
<g >
<title>std::swap&lt;int&gt; (2 samples, 0.07%)</title><rect x="1186.5" y="229" width="0.9" height="15.0" fill="rgb(242,46,6)" rx="2" ry="2" />
<text  x="1189.55" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1162.4" y="213" width="0.4" height="15.0" fill="rgb(236,105,11)" rx="2" ry="2" />
<text  x="1165.37" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="247.5" y="245" width="0.8" height="15.0" fill="rgb(235,3,31)" rx="2" ry="2" />
<text  x="250.47" y="255.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.04%)</title><rect x="1155.9" y="165" width="0.4" height="15.0" fill="rgb(207,59,15)" rx="2" ry="2" />
<text  x="1158.89" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.07%)</title><rect x="1189.1" y="325" width="0.9" height="15.0" fill="rgb(211,128,45)" rx="2" ry="2" />
<text  x="1192.14" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="1123.1" y="149" width="0.4" height="15.0" fill="rgb(245,162,34)" rx="2" ry="2" />
<text  x="1126.08" y="159.5" ></text>
</g>
<g >
<title>update_wall_time (8 samples, 0.29%)</title><rect x="1126.5" y="149" width="3.5" height="15.0" fill="rgb(214,227,2)" rx="2" ry="2" />
<text  x="1129.53" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.07%)</title><rect x="13.9" y="165" width="0.8" height="15.0" fill="rgb(237,210,6)" rx="2" ry="2" />
<text  x="16.89" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.07%)</title><rect x="13.9" y="197" width="0.8" height="15.0" fill="rgb(250,115,48)" rx="2" ry="2" />
<text  x="16.89" y="207.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.07%)</title><rect x="247.5" y="261" width="0.8" height="15.0" fill="rgb(239,144,31)" rx="2" ry="2" />
<text  x="250.47" y="271.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.04%)</title><rect x="252.2" y="149" width="0.4" height="15.0" fill="rgb(234,87,19)" rx="2" ry="2" />
<text  x="255.22" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1189.6" y="261" width="0.4" height="15.0" fill="rgb(228,55,26)" rx="2" ry="2" />
<text  x="1192.57" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;Edge&gt; (2 samples, 0.07%)</title><rect x="352.0" y="197" width="0.8" height="15.0" fill="rgb(217,165,38)" rx="2" ry="2" />
<text  x="354.95" y="207.5" ></text>
</g>
<g >
<title>add_edge (1 samples, 0.04%)</title><rect x="15.6" y="293" width="0.4" height="15.0" fill="rgb(229,79,23)" rx="2" ry="2" />
<text  x="18.61" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.37%)</title><rect x="248.3" y="197" width="4.3" height="15.0" fill="rgb(242,47,42)" rx="2" ry="2" />
<text  x="251.33" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7 samples, 0.26%)</title><rect x="346.8" y="117" width="3.0" height="15.0" fill="rgb(218,79,38)" rx="2" ry="2" />
<text  x="349.77" y="127.5" ></text>
</g>
<g >
<title>idr_find (1 samples, 0.04%)</title><rect x="1152.9" y="133" width="0.4" height="15.0" fill="rgb(237,149,44)" rx="2" ry="2" />
<text  x="1155.87" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(237,215,36)" rx="2" ry="2" />
<text  x="1192.57" y="207.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="1155.0" y="261" width="0.5" height="15.0" fill="rgb(232,14,16)" rx="2" ry="2" />
<text  x="1158.03" y="271.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="252.2" y="181" width="0.4" height="15.0" fill="rgb(225,198,40)" rx="2" ry="2" />
<text  x="255.22" y="191.5" ></text>
</g>
<g >
<title>acpi_hw_read_port (1 samples, 0.04%)</title><rect x="1155.0" y="69" width="0.5" height="15.0" fill="rgb(238,48,39)" rx="2" ry="2" />
<text  x="1158.03" y="79.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.04%)</title><rect x="1127.0" y="117" width="0.4" height="15.0" fill="rgb(240,117,50)" rx="2" ry="2" />
<text  x="1129.96" y="127.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="247.9" y="181" width="0.4" height="15.0" fill="rgb(242,32,13)" rx="2" ry="2" />
<text  x="250.90" y="191.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.04%)</title><rect x="344.2" y="133" width="0.4" height="15.0" fill="rgb(225,203,42)" rx="2" ry="2" />
<text  x="347.18" y="143.5" ></text>
</g>
<g >
<title>add_edge (257 samples, 9.40%)</title><rect x="253.9" y="277" width="111.0" height="15.0" fill="rgb(215,81,34)" rx="2" ry="2" />
<text  x="256.94" y="287.5" >add_edge</text>
</g>
<g >
<title>dfs_hk (4 samples, 0.15%)</title><rect x="1169.7" y="245" width="1.7" height="15.0" fill="rgb(232,213,17)" rx="2" ry="2" />
<text  x="1172.71" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1187.8" y="229" width="0.5" height="15.0" fill="rgb(240,73,29)" rx="2" ry="2" />
<text  x="1190.84" y="239.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.04%)</title><rect x="1155.0" y="165" width="0.5" height="15.0" fill="rgb(245,44,19)" rx="2" ry="2" />
<text  x="1158.03" y="175.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (83 samples, 3.04%)</title><rect x="1118.3" y="245" width="35.9" height="15.0" fill="rgb(247,114,39)" rx="2" ry="2" />
<text  x="1121.33" y="255.5" >smp..</text>
</g>
<g >
<title>std::forward&lt;Edge&gt; (1 samples, 0.04%)</title><rect x="297.1" y="245" width="0.5" height="15.0" fill="rgb(230,55,17)" rx="2" ry="2" />
<text  x="300.12" y="255.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.04%)</title><rect x="1145.1" y="101" width="0.4" height="15.0" fill="rgb(232,209,39)" rx="2" ry="2" />
<text  x="1148.10" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle (42 samples, 1.54%)</title><rect x="1130.0" y="181" width="18.1" height="15.0" fill="rgb(244,34,40)" rx="2" ry="2" />
<text  x="1132.99" y="191.5" ></text>
</g>
<g >
<title>notifier_call_chain (1 samples, 0.04%)</title><rect x="1127.4" y="101" width="0.4" height="15.0" fill="rgb(226,133,13)" rx="2" ry="2" />
<text  x="1130.39" y="111.5" ></text>
</g>
<g >
<title>irq_exit (6 samples, 0.22%)</title><rect x="1151.1" y="229" width="2.6" height="15.0" fill="rgb(236,26,15)" rx="2" ry="2" />
<text  x="1154.14" y="239.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.11%)</title><rect x="364.9" y="277" width="1.3" height="15.0" fill="rgb(240,118,40)" rx="2" ry="2" />
<text  x="367.91" y="287.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1155.9" y="229" width="0.9" height="15.0" fill="rgb(251,155,15)" rx="2" ry="2" />
<text  x="1158.89" y="239.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (1 samples, 0.04%)</title><rect x="1128.7" y="101" width="0.4" height="15.0" fill="rgb(242,161,52)" rx="2" ry="2" />
<text  x="1131.69" y="111.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.04%)</title><rect x="365.8" y="149" width="0.4" height="15.0" fill="rgb(233,167,40)" rx="2" ry="2" />
<text  x="368.77" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (14 samples, 0.51%)</title><rect x="1156.8" y="261" width="6.0" height="15.0" fill="rgb(234,184,32)" rx="2" ry="2" />
<text  x="1159.75" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2 samples, 0.07%)</title><rect x="1143.4" y="117" width="0.8" height="15.0" fill="rgb(238,14,50)" rx="2" ry="2" />
<text  x="1146.37" y="127.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1184.8" y="133" width="0.5" height="15.0" fill="rgb(235,191,49)" rx="2" ry="2" />
<text  x="1187.82" y="143.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (2 samples, 0.07%)</title><rect x="1152.4" y="165" width="0.9" height="15.0" fill="rgb(220,61,53)" rx="2" ry="2" />
<text  x="1155.44" y="175.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (1 samples, 0.04%)</title><rect x="1155.0" y="213" width="0.5" height="15.0" fill="rgb(219,135,13)" rx="2" ry="2" />
<text  x="1158.03" y="223.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.04%)</title><rect x="351.5" y="85" width="0.5" height="15.0" fill="rgb(225,11,42)" rx="2" ry="2" />
<text  x="354.52" y="95.5" ></text>
</g>
<g >
<title>perf_event_addr_filters_exec (1 samples, 0.04%)</title><rect x="10.0" y="181" width="0.4" height="15.0" fill="rgb(234,64,1)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="1162.4" y="117" width="0.4" height="15.0" fill="rgb(207,118,0)" rx="2" ry="2" />
<text  x="1165.37" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Edge&gt;::construct&lt;Edge, Edge&gt; (64 samples, 2.34%)</title><rect x="325.2" y="213" width="27.6" height="15.0" fill="rgb(228,123,33)" rx="2" ry="2" />
<text  x="328.18" y="223.5" >_..</text>
</g>
<g >
<title>acpi_hw_read (1 samples, 0.04%)</title><rect x="1155.0" y="85" width="0.5" height="15.0" fill="rgb(250,217,35)" rx="2" ry="2" />
<text  x="1158.03" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Edge&gt; &gt;::construct&lt;Edge, Edge&gt; (80 samples, 2.93%)</title><rect x="320.9" y="229" width="34.5" height="15.0" fill="rgb(236,46,45)" rx="2" ry="2" />
<text  x="323.87" y="239.5" >st..</text>
</g>
<g >
<title>activate_task (1 samples, 0.04%)</title><rect x="1184.8" y="101" width="0.5" height="15.0" fill="rgb(232,137,20)" rx="2" ry="2" />
<text  x="1187.82" y="111.5" ></text>
</g>
<g >
<title>setup_new_exec (1 samples, 0.04%)</title><rect x="10.0" y="213" width="0.4" height="15.0" fill="rgb(232,154,42)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>t14pb_unittest. (2,732 samples, 99.96%)</title><rect x="10.4" y="341" width="1179.6" height="15.0" fill="rgb(216,21,1)" rx="2" ry="2" />
<text  x="13.43" y="351.5" >t14pb_unittest.</text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.04%)</title><rect x="247.5" y="133" width="0.4" height="15.0" fill="rgb(225,11,45)" rx="2" ry="2" />
<text  x="250.47" y="143.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (2 samples, 0.07%)</title><rect x="1137.3" y="101" width="0.9" height="15.0" fill="rgb(253,108,35)" rx="2" ry="2" />
<text  x="1140.33" y="111.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.18%)</title><rect x="13.5" y="261" width="2.1" height="15.0" fill="rgb(223,14,42)" rx="2" ry="2" />
<text  x="16.45" y="271.5" ></text>
</g>
<g >
<title>init_graph (1 samples, 0.04%)</title><rect x="1171.4" y="277" width="0.5" height="15.0" fill="rgb(245,151,4)" rx="2" ry="2" />
<text  x="1174.43" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;Edge&gt; (22 samples, 0.80%)</title><rect x="355.4" y="229" width="9.5" height="15.0" fill="rgb(235,98,39)" rx="2" ry="2" />
<text  x="358.41" y="239.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.04%)</title><rect x="1122.6" y="181" width="0.5" height="15.0" fill="rgb(239,106,31)" rx="2" ry="2" />
<text  x="1125.65" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="247.5" y="213" width="0.4" height="15.0" fill="rgb(207,64,40)" rx="2" ry="2" />
<text  x="250.47" y="223.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.07%)</title><rect x="1146.8" y="85" width="0.9" height="15.0" fill="rgb(211,60,14)" rx="2" ry="2" />
<text  x="1149.82" y="95.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.04%)</title><rect x="365.8" y="165" width="0.4" height="15.0" fill="rgb(223,138,10)" rx="2" ry="2" />
<text  x="368.77" y="175.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.07%)</title><rect x="343.8" y="149" width="0.8" height="15.0" fill="rgb(214,12,6)" rx="2" ry="2" />
<text  x="346.75" y="159.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (1 samples, 0.04%)</title><rect x="248.3" y="149" width="0.5" height="15.0" fill="rgb(205,113,16)" rx="2" ry="2" />
<text  x="251.33" y="159.5" ></text>
</g>
<g >
<title>std::__partition&lt;int*, bool  (22 samples, 0.80%)</title><rect x="1177.9" y="261" width="9.5" height="15.0" fill="rgb(227,95,1)" rx="2" ry="2" />
<text  x="1180.91" y="271.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.04%)</title><rect x="1184.8" y="149" width="0.5" height="15.0" fill="rgb(239,104,23)" rx="2" ry="2" />
<text  x="1187.82" y="159.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.04%)</title><rect x="10.0" y="229" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.04%)</title><rect x="1184.8" y="117" width="0.5" height="15.0" fill="rgb(212,54,29)" rx="2" ry="2" />
<text  x="1187.82" y="127.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.04%)</title><rect x="1133.4" y="149" width="0.5" height="15.0" fill="rgb(215,229,29)" rx="2" ry="2" />
<text  x="1136.44" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="10.0" y="309" width="0.4" height="15.0" fill="rgb(244,219,38)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>get_prime_factor (1,831 samples, 67.00%)</title><rect x="366.2" y="277" width="790.6" height="15.0" fill="rgb(208,30,26)" rx="2" ry="2" />
<text  x="369.20" y="287.5" >get_prime_factor</text>
</g>
<g >
<title>tick_sched_timer (50 samples, 1.83%)</title><rect x="1126.5" y="197" width="21.6" height="15.0" fill="rgb(233,91,48)" rx="2" ry="2" />
<text  x="1129.53" y="207.5" >t..</text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.70%)</title><rect x="343.8" y="165" width="8.2" height="15.0" fill="rgb(235,159,38)" rx="2" ry="2" />
<text  x="346.75" y="175.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1189.6" y="309" width="0.4" height="15.0" fill="rgb(216,58,23)" rx="2" ry="2" />
<text  x="1192.57" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;Edge, std::allocator&lt;Edge&gt; &gt;::clear (1 samples, 0.04%)</title><rect x="1171.4" y="261" width="0.5" height="15.0" fill="rgb(207,35,30)" rx="2" ry="2" />
<text  x="1174.43" y="271.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.04%)</title><rect x="1184.8" y="85" width="0.5" height="15.0" fill="rgb(217,25,38)" rx="2" ry="2" />
<text  x="1187.82" y="95.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (1 samples, 0.04%)</title><rect x="350.7" y="69" width="0.4" height="15.0" fill="rgb(229,212,29)" rx="2" ry="2" />
<text  x="353.66" y="79.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.07%)</title><rect x="1155.9" y="213" width="0.9" height="15.0" fill="rgb(230,187,47)" rx="2" ry="2" />
<text  x="1158.89" y="223.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (1 samples, 0.04%)</title><rect x="1188.7" y="325" width="0.4" height="15.0" fill="rgb(222,61,52)" rx="2" ry="2" />
<text  x="1191.70" y="335.5" ></text>
</g>
<g >
<title>hopcroft_karp_algo (34 samples, 1.24%)</title><rect x="1156.8" y="277" width="14.6" height="15.0" fill="rgb(245,109,41)" rx="2" ry="2" />
<text  x="1159.75" y="287.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.07%)</title><rect x="352.8" y="213" width="0.9" height="15.0" fill="rgb(229,218,20)" rx="2" ry="2" />
<text  x="355.82" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1135.2" y="133" width="0.4" height="15.0" fill="rgb(224,47,23)" rx="2" ry="2" />
<text  x="1138.17" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Edge&gt;::construct&lt;Edge, Edge&gt; (3 samples, 0.11%)</title><rect x="319.6" y="229" width="1.3" height="15.0" fill="rgb(219,118,16)" rx="2" ry="2" />
<text  x="322.57" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.07%)</title><rect x="14.7" y="197" width="0.9" height="15.0" fill="rgb(215,95,6)" rx="2" ry="2" />
<text  x="17.75" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;Edge&amp;&gt; (3 samples, 0.11%)</title><rect x="297.6" y="245" width="1.2" height="15.0" fill="rgb(241,96,15)" rx="2" ry="2" />
<text  x="300.55" y="255.5" ></text>
</g>
<g >
<title>cpu_stop_queue_work (1 samples, 0.04%)</title><rect x="1148.6" y="165" width="0.4" height="15.0" fill="rgb(231,198,33)" rx="2" ry="2" />
<text  x="1151.55" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1187.8" y="213" width="0.5" height="15.0" fill="rgb(227,5,19)" rx="2" ry="2" />
<text  x="1190.84" y="223.5" ></text>
</g>
<g >
<title>account_process_tick (7 samples, 0.26%)</title><rect x="1130.0" y="149" width="3.0" height="15.0" fill="rgb(209,8,53)" rx="2" ry="2" />
<text  x="1132.99" y="159.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.04%)</title><rect x="1123.9" y="133" width="0.5" height="15.0" fill="rgb(220,61,1)" rx="2" ry="2" />
<text  x="1126.94" y="143.5" ></text>
</g>
<g >
<title>perf_event_exec (1 samples, 0.04%)</title><rect x="10.0" y="197" width="0.4" height="15.0" fill="rgb(208,117,46)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1162.4" y="229" width="0.4" height="15.0" fill="rgb(245,98,27)" rx="2" ry="2" />
<text  x="1165.37" y="239.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.07%)</title><rect x="1152.4" y="181" width="0.9" height="15.0" fill="rgb(235,17,33)" rx="2" ry="2" />
<text  x="1155.44" y="191.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.04%)</title><rect x="10.0" y="245" width="0.4" height="15.0" fill="rgb(205,204,20)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.04%)</title><rect x="1150.3" y="213" width="0.4" height="15.0" fill="rgb(241,38,42)" rx="2" ry="2" />
<text  x="1153.28" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="1189.6" y="181" width="0.4" height="15.0" fill="rgb(222,131,9)" rx="2" ry="2" />
<text  x="1192.57" y="191.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (3 samples, 0.11%)</title><rect x="1155.5" y="245" width="1.3" height="15.0" fill="rgb(220,36,49)" rx="2" ry="2" />
<text  x="1158.46" y="255.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.70%)</title><rect x="343.8" y="197" width="8.2" height="15.0" fill="rgb(229,157,32)" rx="2" ry="2" />
<text  x="346.75" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="13.5" y="197" width="0.4" height="15.0" fill="rgb(222,41,21)" rx="2" ry="2" />
<text  x="16.45" y="207.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.04%)</title><rect x="15.2" y="165" width="0.4" height="15.0" fill="rgb(234,12,42)" rx="2" ry="2" />
<text  x="18.18" y="175.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1152.0" y="181" width="0.4" height="15.0" fill="rgb(211,197,31)" rx="2" ry="2" />
<text  x="1155.01" y="191.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.04%)</title><rect x="1149.8" y="213" width="0.5" height="15.0" fill="rgb(243,167,27)" rx="2" ry="2" />
<text  x="1152.85" y="223.5" ></text>
</g>
<g >
<title>timekeeping_update (4 samples, 0.15%)</title><rect x="1127.4" y="117" width="1.7" height="15.0" fill="rgb(228,7,22)" rx="2" ry="2" />
<text  x="1130.39" y="127.5" ></text>
</g>
<g >
<title>partition_function (7 samples, 0.26%)</title><rect x="1182.2" y="245" width="3.1" height="15.0" fill="rgb(224,65,13)" rx="2" ry="2" />
<text  x="1185.23" y="255.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;int*, int*&gt; (5 samples, 0.18%)</title><rect x="1185.3" y="245" width="2.1" height="15.0" fill="rgb(235,89,13)" rx="2" ry="2" />
<text  x="1188.25" y="255.5" ></text>
</g>
<g >
<title>get_prime_factor (22 samples, 0.80%)</title><rect x="16.0" y="293" width="9.5" height="15.0" fill="rgb(252,203,40)" rx="2" ry="2" />
<text  x="19.04" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1152.0" y="197" width="0.4" height="15.0" fill="rgb(241,63,27)" rx="2" ry="2" />
<text  x="1155.01" y="207.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.07%)</title><rect x="1155.9" y="197" width="0.9" height="15.0" fill="rgb(212,7,1)" rx="2" ry="2" />
<text  x="1158.89" y="207.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.04%)</title><rect x="252.2" y="133" width="0.4" height="15.0" fill="rgb(214,93,1)" rx="2" ry="2" />
<text  x="255.22" y="143.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.11%)</title><rect x="1155.5" y="261" width="1.3" height="15.0" fill="rgb(214,75,32)" rx="2" ry="2" />
<text  x="1158.46" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="365.3" y="261" width="0.9" height="15.0" fill="rgb(242,123,9)" rx="2" ry="2" />
<text  x="368.34" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.26%)</title><rect x="1123.1" y="165" width="3.0" height="15.0" fill="rgb(224,182,7)" rx="2" ry="2" />
<text  x="1126.08" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (17 samples, 0.62%)</title><rect x="344.6" y="133" width="7.4" height="15.0" fill="rgb(207,49,21)" rx="2" ry="2" />
<text  x="347.61" y="143.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.07%)</title><rect x="350.2" y="85" width="0.9" height="15.0" fill="rgb(237,205,51)" rx="2" ry="2" />
<text  x="353.23" y="95.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(254,86,29)" rx="2" ry="2" />
<text  x="1192.57" y="223.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.04%)</title><rect x="1152.0" y="165" width="0.4" height="15.0" fill="rgb(249,74,11)" rx="2" ry="2" />
<text  x="1155.01" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.33%)</title><rect x="248.3" y="181" width="3.9" height="15.0" fill="rgb(234,89,31)" rx="2" ry="2" />
<text  x="251.33" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.04%)</title><rect x="1147.7" y="149" width="0.4" height="15.0" fill="rgb(246,115,37)" rx="2" ry="2" />
<text  x="1150.69" y="159.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.15 (8 samples, 0.29%)</title><rect x="1126.5" y="165" width="3.5" height="15.0" fill="rgb(210,89,41)" rx="2" ry="2" />
<text  x="1129.53" y="175.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.04%)</title><rect x="247.9" y="229" width="0.4" height="15.0" fill="rgb(223,58,1)" rx="2" ry="2" />
<text  x="250.90" y="239.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (1 samples, 0.04%)</title><rect x="1130.8" y="117" width="0.5" height="15.0" fill="rgb(210,6,54)" rx="2" ry="2" />
<text  x="1133.85" y="127.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="13.9" y="149" width="0.4" height="15.0" fill="rgb(230,195,37)" rx="2" ry="2" />
<text  x="16.89" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.0" y="325" width="0.4" height="15.0" fill="rgb(226,144,35)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.04%)</title><rect x="1124.8" y="101" width="0.4" height="15.0" fill="rgb(208,114,35)" rx="2" ry="2" />
<text  x="1127.80" y="111.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.15%)</title><rect x="1124.4" y="149" width="1.7" height="15.0" fill="rgb(244,210,1)" rx="2" ry="2" />
<text  x="1127.37" y="159.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.07%)</title><rect x="13.9" y="181" width="0.8" height="15.0" fill="rgb(212,117,4)" rx="2" ry="2" />
<text  x="16.89" y="191.5" ></text>
</g>
<g >
<title>watchdog_timer_fn (1 samples, 0.04%)</title><rect x="1148.6" y="197" width="0.4" height="15.0" fill="rgb(247,176,23)" rx="2" ry="2" />
<text  x="1151.55" y="207.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.04%)</title><rect x="1124.8" y="117" width="0.4" height="15.0" fill="rgb(207,77,38)" rx="2" ry="2" />
<text  x="1127.80" y="127.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.18%)</title><rect x="13.5" y="245" width="2.1" height="15.0" fill="rgb(216,70,7)" rx="2" ry="2" />
<text  x="16.45" y="255.5" ></text>
</g>
<g >
<title>stop_one_cpu_nowait (1 samples, 0.04%)</title><rect x="1148.6" y="181" width="0.4" height="15.0" fill="rgb(253,86,15)" rx="2" ry="2" />
<text  x="1151.55" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1184.8" y="229" width="0.5" height="15.0" fill="rgb(233,38,21)" rx="2" ry="2" />
<text  x="1187.82" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.07%)</title><rect x="365.3" y="245" width="0.9" height="15.0" fill="rgb(219,95,0)" rx="2" ry="2" />
<text  x="368.34" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;Edge, std::allocator&lt;Edge&gt; &gt;::emplace_back&lt;Edge&gt; (1 samples, 0.04%)</title><rect x="290.6" y="261" width="0.5" height="15.0" fill="rgb(252,195,19)" rx="2" ry="2" />
<text  x="293.64" y="271.5" ></text>
</g>
<g >
<title>ksoftirqd_running (1 samples, 0.04%)</title><rect x="1153.3" y="213" width="0.4" height="15.0" fill="rgb(233,100,6)" rx="2" ry="2" />
<text  x="1156.30" y="223.5" ></text>
</g>
<g >
<title>_IO_vfscanf (1 samples, 0.04%)</title><rect x="1187.8" y="277" width="0.5" height="15.0" fill="rgb(236,108,50)" rx="2" ry="2" />
<text  x="1190.84" y="287.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.04%)</title><rect x="1145.5" y="101" width="0.5" height="15.0" fill="rgb(221,153,32)" rx="2" ry="2" />
<text  x="1148.53" y="111.5" ></text>
</g>
<g >
<title>[unknown] (2,728 samples, 99.82%)</title><rect x="10.4" y="325" width="1177.9" height="15.0" fill="rgb(247,41,38)" rx="2" ry="2" />
<text  x="13.43" y="335.5" >[unknown]</text>
</g>
<g >
<title>page_fault (10 samples, 0.37%)</title><rect x="248.3" y="261" width="4.3" height="15.0" fill="rgb(239,187,12)" rx="2" ry="2" />
<text  x="251.33" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;Edge&gt; (4 samples, 0.15%)</title><rect x="353.7" y="213" width="1.7" height="15.0" fill="rgb(247,69,18)" rx="2" ry="2" />
<text  x="356.68" y="223.5" ></text>
</g>
<g >
<title>wake_q_add (1 samples, 0.04%)</title><rect x="1148.6" y="149" width="0.4" height="15.0" fill="rgb(229,11,54)" rx="2" ry="2" />
<text  x="1151.55" y="159.5" ></text>
</g>
<g >
<title>acpi_irq (1 samples, 0.04%)</title><rect x="1155.0" y="149" width="0.5" height="15.0" fill="rgb(205,41,41)" rx="2" ry="2" />
<text  x="1158.03" y="159.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.04%)</title><rect x="1148.1" y="197" width="0.5" height="15.0" fill="rgb(244,171,1)" rx="2" ry="2" />
<text  x="1151.12" y="207.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="247.5" y="117" width="0.4" height="15.0" fill="rgb(226,229,47)" rx="2" ry="2" />
<text  x="250.47" y="127.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="343.3" y="197" width="0.5" height="15.0" fill="rgb(241,21,27)" rx="2" ry="2" />
<text  x="346.32" y="207.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.07%)</title><rect x="1123.5" y="149" width="0.9" height="15.0" fill="rgb(242,2,28)" rx="2" ry="2" />
<text  x="1126.51" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (70 samples, 2.56%)</title><rect x="1118.8" y="213" width="30.2" height="15.0" fill="rgb(251,131,46)" rx="2" ry="2" />
<text  x="1121.76" y="223.5" >__..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1122.2" y="197" width="0.4" height="15.0" fill="rgb(247,92,33)" rx="2" ry="2" />
<text  x="1125.21" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(217,121,19)" rx="2" ry="2" />
<text  x="1192.57" y="239.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.07%)</title><rect x="1146.8" y="117" width="0.9" height="15.0" fill="rgb(219,118,25)" rx="2" ry="2" />
<text  x="1149.82" y="127.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (57 samples, 2.09%)</title><rect x="228.5" y="277" width="24.6" height="15.0" fill="rgb(249,213,7)" rx="2" ry="2" />
<text  x="231.47" y="287.5" >_..</text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.29%)</title><rect x="248.8" y="149" width="3.4" height="15.0" fill="rgb(210,176,11)" rx="2" ry="2" />
<text  x="251.76" y="159.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.26%)</title><rect x="346.8" y="101" width="3.0" height="15.0" fill="rgb(250,85,18)" rx="2" ry="2" />
<text  x="349.77" y="111.5" ></text>
</g>
<g >
<title>do_page_fault (19 samples, 0.70%)</title><rect x="343.8" y="181" width="8.2" height="15.0" fill="rgb(246,161,25)" rx="2" ry="2" />
<text  x="346.75" y="191.5" ></text>
</g>
<g >
<title>account_user_time (7 samples, 0.26%)</title><rect x="1130.0" y="133" width="3.0" height="15.0" fill="rgb(210,227,47)" rx="2" ry="2" />
<text  x="1132.99" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.18%)</title><rect x="13.5" y="213" width="2.1" height="15.0" fill="rgb(252,84,48)" rx="2" ry="2" />
<text  x="16.45" y="223.5" ></text>
</g>
<g >
<title>dfs_hk (14 samples, 0.51%)</title><rect x="1165.4" y="261" width="6.0" height="15.0" fill="rgb(208,28,32)" rx="2" ry="2" />
<text  x="1168.39" y="271.5" ></text>
</g>
<g >
<title>__remove_hrtimer (4 samples, 0.15%)</title><rect x="1120.5" y="197" width="1.7" height="15.0" fill="rgb(229,39,21)" rx="2" ry="2" />
<text  x="1123.49" y="207.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (1 samples, 0.04%)</title><rect x="1155.0" y="117" width="0.5" height="15.0" fill="rgb(210,179,31)" rx="2" ry="2" />
<text  x="1158.03" y="127.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.04%)</title><rect x="1133.0" y="149" width="0.4" height="15.0" fill="rgb(218,111,37)" rx="2" ry="2" />
<text  x="1136.01" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.37%)</title><rect x="248.3" y="245" width="4.3" height="15.0" fill="rgb(224,96,52)" rx="2" ry="2" />
<text  x="251.33" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;Edge, std::allocator&lt;Edge&gt; &gt;::push_back (171 samples, 6.26%)</title><rect x="291.1" y="261" width="73.8" height="15.0" fill="rgb(254,214,31)" rx="2" ry="2" />
<text  x="294.08" y="271.5" >std::vec..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.04%)</title><rect x="365.8" y="213" width="0.4" height="15.0" fill="rgb(216,118,36)" rx="2" ry="2" />
<text  x="368.77" y="223.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.38 (1 samples, 0.04%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(248,21,37)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;int, std::deque&lt;int, std::allocator&lt;int&gt; &gt; &gt;::push (1 samples, 0.04%)</title><rect x="1165.0" y="245" width="0.4" height="15.0" fill="rgb(206,81,36)" rx="2" ry="2" />
<text  x="1167.96" y="255.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1188.3" y="325" width="0.4" height="15.0" fill="rgb(208,203,27)" rx="2" ry="2" />
<text  x="1191.27" y="335.5" ></text>
</g>
<g >
<title>acpi_ut_trace (1 samples, 0.04%)</title><rect x="1155.0" y="37" width="0.5" height="15.0" fill="rgb(252,33,13)" rx="2" ry="2" />
<text  x="1158.03" y="47.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.04%)</title><rect x="1150.7" y="213" width="0.4" height="15.0" fill="rgb(217,47,37)" rx="2" ry="2" />
<text  x="1153.71" y="223.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.04%)</title><rect x="1184.8" y="165" width="0.5" height="15.0" fill="rgb(242,99,13)" rx="2" ry="2" />
<text  x="1187.82" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.07%)</title><rect x="365.3" y="229" width="0.9" height="15.0" fill="rgb(242,201,18)" rx="2" ry="2" />
<text  x="368.34" y="239.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1187.8" y="245" width="0.5" height="15.0" fill="rgb(242,151,15)" rx="2" ry="2" />
<text  x="1190.84" y="255.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.04%)</title><rect x="14.3" y="149" width="0.4" height="15.0" fill="rgb(220,153,13)" rx="2" ry="2" />
<text  x="17.32" y="159.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="252.2" y="165" width="0.4" height="15.0" fill="rgb(208,184,12)" rx="2" ry="2" />
<text  x="255.22" y="175.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.04%)</title><rect x="247.5" y="165" width="0.4" height="15.0" fill="rgb(246,44,30)" rx="2" ry="2" />
<text  x="250.47" y="175.5" ></text>
</g>
<g >
<title>__intel_pmu_disable_all (1 samples, 0.04%)</title><rect x="1137.8" y="85" width="0.4" height="15.0" fill="rgb(207,35,25)" rx="2" ry="2" />
<text  x="1140.76" y="95.5" ></text>
</g>
<g >
<title>std::queue&lt;int, std::deque&lt;int, std::allocator&lt;int&gt; &gt; &gt;::front (1 samples, 0.04%)</title><rect x="1164.5" y="245" width="0.5" height="15.0" fill="rgb(208,164,37)" rx="2" ry="2" />
<text  x="1167.53" y="255.5" ></text>
</g>
<g >
<title>perf (1 samples, 0.04%)</title><rect x="10.0" y="341" width="0.4" height="15.0" fill="rgb(245,153,19)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.04%)</title><rect x="1156.3" y="181" width="0.5" height="15.0" fill="rgb(225,86,23)" rx="2" ry="2" />
<text  x="1159.32" y="191.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.07%)</title><rect x="1152.4" y="149" width="0.9" height="15.0" fill="rgb(234,209,33)" rx="2" ry="2" />
<text  x="1155.44" y="159.5" ></text>
</g>
<g >
<title>acpi_hw_validate_io_request (1 samples, 0.04%)</title><rect x="1155.0" y="53" width="0.5" height="15.0" fill="rgb(244,137,54)" rx="2" ry="2" />
<text  x="1158.03" y="63.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1155.9" y="181" width="0.4" height="15.0" fill="rgb(238,153,22)" rx="2" ry="2" />
<text  x="1158.89" y="191.5" ></text>
</g>
<g >
<title>timekeeping_advance (7 samples, 0.26%)</title><rect x="1126.5" y="133" width="3.1" height="15.0" fill="rgb(233,195,10)" rx="2" ry="2" />
<text  x="1129.53" y="143.5" ></text>
</g>
<g >
<title>cpuacct_account_field (4 samples, 0.15%)</title><rect x="1131.3" y="117" width="1.7" height="15.0" fill="rgb(236,186,50)" rx="2" ry="2" />
<text  x="1134.28" y="127.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (2 samples, 0.07%)</title><rect x="1146.8" y="101" width="0.9" height="15.0" fill="rgb(254,147,15)" rx="2" ry="2" />
<text  x="1149.82" y="111.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.22%)</title><rect x="249.6" y="133" width="2.6" height="15.0" fill="rgb(221,179,13)" rx="2" ry="2" />
<text  x="252.63" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.04%)</title><rect x="247.5" y="149" width="0.4" height="15.0" fill="rgb(234,147,45)" rx="2" ry="2" />
<text  x="250.47" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(230,225,4)" rx="2" ry="2" />
<text  x="1192.57" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1187.8" y="181" width="0.5" height="15.0" fill="rgb(244,0,16)" rx="2" ry="2" />
<text  x="1190.84" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (17 samples, 0.62%)</title><rect x="344.6" y="149" width="7.4" height="15.0" fill="rgb(209,130,0)" rx="2" ry="2" />
<text  x="347.61" y="159.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.07%)</title><rect x="1121.4" y="165" width="0.8" height="15.0" fill="rgb(250,74,29)" rx="2" ry="2" />
<text  x="1124.35" y="175.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.15 (1 samples, 0.04%)</title><rect x="365.8" y="181" width="0.4" height="15.0" fill="rgb(244,45,34)" rx="2" ry="2" />
<text  x="368.77" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (32 samples, 1.17%)</title><rect x="1133.9" y="149" width="13.8" height="15.0" fill="rgb(224,189,28)" rx="2" ry="2" />
<text  x="1136.87" y="159.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.04%)</title><rect x="1155.0" y="245" width="0.5" height="15.0" fill="rgb(223,13,49)" rx="2" ry="2" />
<text  x="1158.03" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="10.0" y="293" width="0.4" height="15.0" fill="rgb(224,76,50)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="247.5" y="229" width="0.4" height="15.0" fill="rgb(235,211,39)" rx="2" ry="2" />
<text  x="250.47" y="239.5" ></text>
</g>
<g >
<title>scanf (1 samples, 0.04%)</title><rect x="1187.8" y="293" width="0.5" height="15.0" fill="rgb(237,81,34)" rx="2" ry="2" />
<text  x="1190.84" y="303.5" ></text>
</g>
<g >
<title>std::partition&lt;int*, bool  (22 samples, 0.80%)</title><rect x="1177.9" y="277" width="9.5" height="15.0" fill="rgb(234,45,50)" rx="2" ry="2" />
<text  x="1180.91" y="287.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (1 samples, 0.04%)</title><rect x="1155.0" y="133" width="0.5" height="15.0" fill="rgb(235,107,4)" rx="2" ry="2" />
<text  x="1158.03" y="143.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="252.6" y="245" width="0.5" height="15.0" fill="rgb(243,224,54)" rx="2" ry="2" />
<text  x="255.65" y="255.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1162.4" y="165" width="0.4" height="15.0" fill="rgb(225,131,41)" rx="2" ry="2" />
<text  x="1165.37" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(215,194,34)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (4 samples, 0.15%)</title><rect x="1141.6" y="117" width="1.8" height="15.0" fill="rgb(228,18,37)" rx="2" ry="2" />
<text  x="1144.64" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.18%)</title><rect x="1151.1" y="213" width="2.2" height="15.0" fill="rgb(207,43,23)" rx="2" ry="2" />
<text  x="1154.14" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.37%)</title><rect x="248.3" y="229" width="4.3" height="15.0" fill="rgb(209,60,5)" rx="2" ry="2" />
<text  x="251.33" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;Edge, std::allocator&lt;Edge&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="1187.4" y="277" width="0.4" height="15.0" fill="rgb(248,37,43)" rx="2" ry="2" />
<text  x="1190.41" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="1184.8" y="197" width="0.5" height="15.0" fill="rgb(254,158,6)" rx="2" ry="2" />
<text  x="1187.82" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.37%)</title><rect x="248.3" y="213" width="4.3" height="15.0" fill="rgb(229,168,30)" rx="2" ry="2" />
<text  x="251.33" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1189.6" y="277" width="0.4" height="15.0" fill="rgb(217,158,53)" rx="2" ry="2" />
<text  x="1192.57" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (85 samples, 3.11%)</title><rect x="1117.5" y="261" width="36.7" height="15.0" fill="rgb(253,220,33)" rx="2" ry="2" />
<text  x="1120.46" y="271.5" >api..</text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.07%)</title><rect x="351.1" y="117" width="0.9" height="15.0" fill="rgb(251,157,12)" rx="2" ry="2" />
<text  x="354.09" y="127.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.04%)</title><rect x="1155.0" y="181" width="0.5" height="15.0" fill="rgb(215,97,0)" rx="2" ry="2" />
<text  x="1158.03" y="191.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1162.4" y="245" width="0.4" height="15.0" fill="rgb(234,127,35)" rx="2" ry="2" />
<text  x="1165.37" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="247.9" y="213" width="0.4" height="15.0" fill="rgb(245,40,38)" rx="2" ry="2" />
<text  x="250.90" y="223.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="252.6" y="261" width="0.5" height="15.0" fill="rgb(227,207,51)" rx="2" ry="2" />
<text  x="255.65" y="271.5" ></text>
</g>
</g>
</svg>
